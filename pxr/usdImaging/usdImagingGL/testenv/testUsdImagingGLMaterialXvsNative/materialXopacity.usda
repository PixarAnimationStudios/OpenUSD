#usda 1.0
(
    upAxis = "Z"
)

def Scope "UsdMaterialX" {
    def Sphere "MxUsdOpacity_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MaterialX/Materials/USD_Opacity_01>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (-5.0, 0, 1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "MxUsdOpacity_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MaterialX/Materials/USD_Opacity_02>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (-2.5, 0, 1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "MxUsdOpacity_03" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MaterialX/Materials/USD_Opacity_03>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (0, 0, 1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "MxUsdOpacity_04" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MaterialX/Materials/USD_Opacity_04>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (2.5, 0, 1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "MxUsdOpacity_05" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MaterialX/Materials/USD_Opacity_05>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (5.0, 0, 1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "UsdOpacity_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MaterialX/Materials/USD_Opacity_06>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (-1.5, 0, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "UsdOpacity_07" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MaterialX/Materials/USD_Opacity_07>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (1.5, 0, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}

def Scope "Materials" {
    def Material "MaterialX" (
        references = [
            @./mtlxFiles/opacityMaterials.mtlx@</MaterialX>,
        ]
    )
    {
    }
}

def Xform "lights" {
    def DomeLight "DomeLight"
    {
        asset inputs:texture:file = @./StinsonBeach.hdr@
        float xformOp:rotateX:Zup = 90
        uniform token[] xformOpOrder = ["xformOp:rotateX:Zup"]
    }
    def SphereLight "Light"
    {
        float inputs:radius = 25
        float inputs:intensity = 5
        Vec3f xformOp:translate = (0, -50, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}

def Camera "Camera" {
    double3 xformOp:translate = (0, 0, 35)
    float xformOp:rotateX:Zup = 90
    uniform token[] xformOpOrder = ["xformOp:rotateX:Zup","xformOp:translate"]
}