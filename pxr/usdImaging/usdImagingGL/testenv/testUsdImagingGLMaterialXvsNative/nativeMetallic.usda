#usda 1.0
(
    upAxis = "Z"
)

def Scope "UsdNative" {
    def Sphere "UsdGold_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/USD_Gold_01>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (-5.0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "UsdGold_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/USD_Gold_02>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (-2.5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "UsdGold_03" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/USD_Gold_03>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "UsdGold_04" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/USD_Gold_04>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (2.5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
    def Sphere "UsdGold_05" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/USD_Gold_05>
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        double3 xformOp:translate = (5.0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}

def Scope "Materials" {
    def Material "USD_Gold_01" {
        token outputs:surface.connect = </Materials/USD_Gold_01/Surface.outputs:surface>

        def Shader "Surface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.944, 0.776, 0.373)
            int inputs:useSpecularWorkflow = 0
            color3f inputs:specularColor = (0.0, 0.0, 0.0)
            float inputs:metallic = 1.0
            float inputs:roughness = 0.0
            float inputs:clearcoat = 0.0
            float inputs:clearcoatRoughness = 0.01
            float inputs:opacity = 1
            float inputs:opacityThreshold = 0        
            float inputs:ior = 50

            token outputs:surface
        }
    }

    def Material "USD_Gold_02" {
        token outputs:surface.connect = </Materials/USD_Gold_02/Surface.outputs:surface>

        def Shader "Surface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.944, 0.776, 0.373)
            int inputs:useSpecularWorkflow = 0
            color3f inputs:specularColor = (0.0, 0.0, 0.0)
            float inputs:metallic = 1.0
            float inputs:roughness = 0.25
            float inputs:clearcoat = 0.0
            float inputs:clearcoatRoughness = 0.01
            float inputs:opacity = 1
            float inputs:opacityThreshold = 0        
            float inputs:ior = 50

            token outputs:surface
        }
    }

    def Material "USD_Gold_03" {
        token outputs:surface.connect = </Materials/USD_Gold_03/Surface.outputs:surface>

        def Shader "Surface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.944, 0.776, 0.373)
            int inputs:useSpecularWorkflow = 0
            color3f inputs:specularColor = (0.0, 0.0, 0.0)
            float inputs:metallic = 1.0
            float inputs:roughness = 0.5
            float inputs:clearcoat = 0.0
            float inputs:clearcoatRoughness = 0.01
            float inputs:opacity = 1
            float inputs:opacityThreshold = 0        
            float inputs:ior = 50

            token outputs:surface
        }
    }

    def Material "USD_Gold_04" {
        token outputs:surface.connect = </Materials/USD_Gold_04/Surface.outputs:surface>

        def Shader "Surface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.944, 0.776, 0.373)
            int inputs:useSpecularWorkflow = 0
            color3f inputs:specularColor = (0.0, 0.0, 0.0)
            float inputs:metallic = 1.0
            float inputs:roughness = 0.75
            float inputs:clearcoat = 0.0
            float inputs:clearcoatRoughness = 0.01
            float inputs:opacity = 1
            float inputs:opacityThreshold = 0        
            float inputs:ior = 50

            token outputs:surface
        }
    }
    def Material "USD_Gold_05" {
        token outputs:surface.connect = </Materials/USD_Gold_05/Surface.outputs:surface>

        def Shader "Surface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.944, 0.776, 0.373)
            int inputs:useSpecularWorkflow = 0
            color3f inputs:specularColor = (0.0, 0.0, 0.0)
            float inputs:metallic = 1.0
            float inputs:roughness = 1.0
            float inputs:clearcoat = 0.0
            float inputs:clearcoatRoughness = 0.01
            float inputs:opacity = 1
            float inputs:opacityThreshold = 0        
            float inputs:ior = 50

            token outputs:surface
        }
    }
}

def Xform "lights" {
    def DomeLight "DomeLight"
    {
        asset inputs:texture:file = @./StinsonBeach.hdr@
        float xformOp:rotateX:Zup = 90
        uniform token[] xformOpOrder = ["xformOp:rotateX:Zup"]
    }
    def SphereLight "Light"
    {
        float inputs:radius = 25
        float inputs:intensity = 5
        Vec3f xformOp:translate = (0, -50, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}

def Camera "Camera" {
    double3 xformOp:translate = (0, 0, 35)
    float xformOp:rotateX:Zup = 90
    uniform token[] xformOpOrder = ["xformOp:rotateX:Zup","xformOp:translate"]
}