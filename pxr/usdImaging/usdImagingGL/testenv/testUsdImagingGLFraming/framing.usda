#usda 1.0
(
    defaultPrim = "Cubes"
    upAxis = "Y"
    startFrame = 1
    endFrame = 100
    doc = """A test scene for camera framing."""
)

def Camera "main_cam"
{
    token projection = "perspective"

    float focalLength = 50.0
    float focusDistance = 30.0
    float fStop = 100.0
    float horizontalAperture = 40
    float horizontalApertureOffset = 10
    float verticalAperture = 30
    float verticalApertureOffset = 5

    double3 xformOp:translate = (0, -3, 30)
    uniform token[] xformOpOrder = ["xformOp:translate"]
}

def Camera "OrthoCam"
{
    token projection = "orthographic"

    float horizontalAperture = 240
    float horizontalApertureOffset = 60
    float verticalAperture = 180
    float verticalApertureOffset = -20

    double3 xformOp:translate = (0, 2, 30)
    uniform token[] xformOpOrder = ["xformOp:translate"]
}

def Xform "Lights"
{
    def SphereLight "Left"
    {
        float inputs:exposure = 2.0
        float inputs:radius = 40.0
        float inputs:intensity = 1.0
        color3f inputs:color = (1.0, 1.0, 1.0)

        double3 xformOp:scale = (1.0, 1.0, 1.0)
        double3 xformOp:translate = (10, 10, 40)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
    }
}

def Scope "Cubes"
{
    def Cube "TopRight"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(0,1,0)]
        double3 xformOp:translate = (17.5, 8.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "TopRightOutside"
    {
        float3[] extent = [(-1.5, -1.5, -1.5), (1.5, 1.5, 1.5)]
        double size = 3
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(1,0,0)]
        double3 xformOp:translate = (19.5, 10.5, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "BottomRight"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(0,1,0)]
        double3 xformOp:translate = (17.5, -8.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "BottomRightOutside"
    {
        float3[] extent = [(-1.5, -1.5, -1.5), (1.5, 1.5, 1.5)]
        double size = 3
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(1,0,0)]
        double3 xformOp:translate = (19.5, -10.5, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "TopLeft"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(0,1,0)]
        double3 xformOp:translate = (-5.5, 8.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "TopLeftOutside"
    {
        float3[] extent = [(-1.5, -1.5, -1.5), (1.5, 1.5, 1.5)]
        double size = 3
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(1,0,0)]
        double3 xformOp:translate = (-7.5, 10.5, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "BottomLeft"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(0,1,0)]
        double3 xformOp:translate = (-5.5, -8.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "BottomLeftOutside"
    {
        float3[] extent = [(-1.5, -1.5, -1.5), (1.5, 1.5, 1.5)]
        double size = 3
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(1,0,0)]
        double3 xformOp:translate = (-7.5, -10.5, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "A"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(0,1,0)]
        double3 xformOp:translate = (-0.5, -4.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "B"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(1,1,0)]
        double3 xformOp:translate = (-2.5, -0.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "C"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(0,0,1)]
        double3 xformOp:translate = (3.5, -3.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "D"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(0,0.5,0.5)]
        double3 xformOp:translate = (1.5, 4.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "E"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        double size = 1
        color3f[] primvars:displayColor (interpolation = "constant")
        color3f[] primvars:displayColor = [(1,0,1)]
        double3 xformOp:translate = (5.5, 5.5, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}
