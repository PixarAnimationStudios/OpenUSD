#usda 1.0
(
    upAxis = "Z"
)

def Capsule "MyCapsule"
{
    float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Sphere "MySphere"
{
    float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-4, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Cylinder "MyCylinder"
{
    float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-8, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Cube "MyCube"
{
    float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-12, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Cone "MyCone"
{
    float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-16, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def PointInstancer "MyPI"
{
    float3[] extent = [(-5, -1, -5), (1, 1, -3)]
    point3f[] positions = [(0, 0, -4), (-4, 0, -4)]
    int[] protoIndices = [0, 0]
    rel prototypes = </MyPI/MyProto>

    def Sphere "MyProto"
    {
        float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    }
}

