#usda 1.0
(
    upAxis = "Z"
)

def Sphere "Default" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
    rel material:binding = </MaterialX/Materials/Default>

    color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
    matrix4d xformOp:transform = ( (1, 0, 0, 0), 
                                   (0, 1, 0, 0), 
                                   (0, 0, 1, 0), 
                                   (-0.5, 2, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Sphere "Glass" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
    rel material:binding = </MaterialX/Materials/Glass>

    color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
    matrix4d xformOp:transform = ( (1, 0, 0, 0), 
                                   (0, 1, 0, 0), 
                                   (0, 0, 1, 0), 
                                   (-1.5, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Sphere "USD_Default" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
    rel material:binding = </MaterialX/Materials/USD_Default>
    
    color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
    matrix4d xformOp:transform = ( (1, 0, 0, 0), 
                                   (0, 1, 0, 0), 
                                   (0, 0, 1, 0), 
                                   (2.5, 2, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Sphere "USD_Glass" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
    rel material:binding = </MaterialX/Materials/USD_Glass>

    color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
    matrix4d xformOp:transform = ( (1, 0, 0, 0), 
                                   (0, 1, 0, 0), 
                                   (0, 0, 1, 0), 
                                   (1.5, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Scope "MaterialX" (
    references = [
        @./glass.mtlx@</MaterialX>,
    ]
)
{
}

def Xform "lights" 
{
    def DomeLight "DomeLight"
    {
        asset inputs:texture:file = @./StinsonBeach.hdr@
        float xformOp:rotateX:Zup = 90
        uniform token[] xformOpOrder = ["xformOp:rotateX:Zup"]
    }
}
