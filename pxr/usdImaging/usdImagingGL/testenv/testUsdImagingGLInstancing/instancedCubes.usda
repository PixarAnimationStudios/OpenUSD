#usda 1.0
(
    endFrame = 1
    startFrame = 1
    upAxis = "Z"
)

def DomeLight "Light"
{
    asset inputs:texture:file = @lightGray.png@
}

def Xform "Cube"
{
    custom matrix4d xformOp:transform = ( (0.7, 0.5, 0.5, 0), (-0.7, 0.5, 0.5, 0), (0, -0.7, 0.7, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Cube "geom" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        custom rel material:binding = </Cube/Shaders/Blue>
    }

    def Scope "Shaders"
    {
        def Material "Blue"
        {
            token outputs:surface.connect = </Cube/Shaders/Blue/PreviewSurface.outputs:surface>

            def Shader "PreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0, 0, 1)
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 1
                float inputs:displacement = 0
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0.1
                float3 inputs:normal = (0, 0, 1)
                float inputs:occlusion = 1
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                color3f inputs:specularColor = (0, 0, 0.5)
                int inputs:useSpecularWorkflow = 0
                token outputs:surface
            }
        }
    }
}

def Xform "Cubes"
{
    custom matrix4d xformOp:transform = ( (0.7, 0.5, 0.5, 0), (-0.7, 0.5, 0.5, 0), (0, -0.7, 0.7, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def "pCube1" (
        instanceable = true
        references = </Cube>
    )
    {
        custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (6, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "pCube2" (
        instanceable = true
        references = </Cube>
    )
    {
        custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 6, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "pCube3" (
        instanceable = true
        references = </Cube>
    )
    {
        custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-6, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "pCube4" (
        instanceable = true
        references = </Cube>
    )
    {
        custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -6, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "pCube5" (
        instanceable = true
        references = </Cube>
    )
    {
        custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 6, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "pCube6" (
        instanceable = true
        references = </Cube>
    )
    {
        custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, -6, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

