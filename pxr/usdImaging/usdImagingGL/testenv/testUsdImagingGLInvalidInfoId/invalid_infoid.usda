#usda 1.0
(
    defaultPrim = "Scene"
    endTimeCode = 1
    startTimeCode = 1
    upAxis = "Y"
)

def Scope "Scene" (
    kind = "component"
)
{
    def Scope "Looks"
    {
        def Material "mat"
        {
            token outputs:surface.connect = </Scene/Looks/mat/Surface.outputs:surface>

            def Shader "Surface"
            {
                # This shader violates UsdShade syntax:
                # 1. FOO_BAR is not a known 'info:id' of a Sdr registered shader.
                # 2. info:filename is deprecated. It should instead use
                #    info:glslfx:sourceAsset and info:implementationSource
                # We expect warnings to be printed for this material and we
                # expect the backend to render with a fallback shader.
                uniform asset info:filename = @invalid_infoid.glslfx@
                uniform token info:id = "FOO_BAR"
                uniform token info:implementationSource = "id"
                token outputs:surface
            }
        }
    }

    def Xform "Geom"
    {
        def Sphere "SphereWithFloatRadius"
        {
            rel material:binding = </Scene/Looks/mat>
            color3f[] primvars:displayColor = [(0, 0, 1)]
            float radius = 2
            custom double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }
    }
}

