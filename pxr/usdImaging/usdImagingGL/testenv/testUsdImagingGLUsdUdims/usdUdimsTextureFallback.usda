#usda 1.0
(
    defaultPrim = "Scene"
    upAxis = "Y"
)

def Scope "Scene" (
        kind = "component"
)
{
    def Scope "Looks"
    {
        def Material "MainMaterial"
        {
            token outputs:surface.connect = </Scene/Looks/MainMaterial/PbrPreview.outputs:surface>

            def Shader "PbrPreview"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect  = </Scene/Looks/MainMaterial/Diffuse.outputs:rgb>
                token outputs:surface
            }

            def Shader "Diffuse"
            {
                uniform token info:id = "UsdUVTexture"
                float4 inputs:fallback = (0, 0, 1, 1)
                asset inputs:file = @missingTexture_<UDIM>.jpg@
                float2 inputs:st.connect = </Scene/Looks/MainMaterial/Primvar.outputs:result>
                float3 outputs:rgb
            }

            def Shader "Primvar"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                string inputs:varname = "st"
                float2 outputs:result
            }
        }
    }

    def Xform "Geom"
    {
        def Mesh "Plane" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Scene/Looks/MainMaterial>
            float2[] primvars:st = [(0, 0), (10, 0), (10, 2), (0, 2)] (interpolation = "vertex")
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 2, 3]
            point3f[] points = [(0,0,0), (10,0,0), (10,2,0), (0,2,0)]
        }
    }
}
