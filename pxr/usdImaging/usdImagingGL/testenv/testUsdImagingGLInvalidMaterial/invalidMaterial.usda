#usda 1.0
(
    upAxis = "Y"
)

def DistantLight "Sun"
{
    # Use default intensity and direction (light is emitted along -Z).
    # The latter is fine since the stage is Y up.
}

def Xform "Cubes"
{
    def Cube "RedCube" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        custom rel material:binding = </Materials/Red>
        custom double3 xformOp:translate = (-2,0,0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "BuggyCube" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        custom rel material:binding = </Materials/Buggy>
        custom double3 xformOp:translate = (2,0,0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}

def Scope "Materials"
{
    def Material "Red" (
    )
    {
        token outputs:surface.connect = </Materials/Red/PbrPreview.outputs:surface>

        def Shader "PbrPreview"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.8, 0, 0)
            token outputs:surface
        }
    }

    def Material "Buggy"
    {
        token outputs:surface.connect = </Materials/Buggy/Surface.outputs:surface>

        def Shader "Surface"
        {
            uniform asset info:glslfx:sourceAsset = @buggyShader.glslfx@
            uniform token info:implementationSource = "sourceAsset"
            uniform float3 inputs:diffuseColor = (1, 0, 1)
            token outputs:surface
        }
    }
}

