#usda 1.0
(
    defaultPrim = "Scene"
    endTimeCode = 1
    startTimeCode = 1
    upAxis = "Z"
)

class Mesh "Plane" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    float3[] extent = [(-2, 0, -2), (2, 0, 2)]
    int[] faceVertexCounts = [4]
    int[] faceVertexIndices = [0, 1, 2, 3]
    rel material:binding = </Scene/Looks/Material>
    point3f[] points = [(-2, 0, -2), (2, 0, -2), (2, 0, 2), (-2, 0, 2)]
    color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
        interpolation = "vertex"
    )
}

def Xform "Scene" (
    kind = "component"
)
{
    def Scope "Looks"
    {
        def Material "Material1"
        {
            token outputs:surface.connect = </Scene/Looks/Material1/PbrPreview.outputs:surface>

            def Shader "PbrPreview"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect = </Scene/Looks/Material1/Texture.outputs:rgb>
                float inputs:roughness = 1
                token outputs:surface
            }

            def Shader "Primvar"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "st"
                float2 outputs:result
            }

            def Shader "Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @texLinear.png@
                float2 inputs:st.connect = </Scene/Looks/Material1/Primvar.outputs:result>
                token inputs:sourceColorSpace = "raw"
                float3 outputs:rgb
            }
        }

        def Material "Material2"
        {
            token outputs:surface.connect = </Scene/Looks/Material2/PbrPreview.outputs:surface>

            def Shader "PbrPreview"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect = </Scene/Looks/Material2/Texture.outputs:rgb>
                float inputs:roughness = 1
                token outputs:surface
            }

            def Shader "Primvar"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                string inputs:varname = "st"
                float2 outputs:result
            }

            def Shader "Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @texSRGB.png@
                float2 inputs:st.connect = </Scene/Looks/Material2/Primvar.outputs:result>
                token inputs:sourceColorSpace = "sRGB"
                float3 outputs:rgb
            }
        }
    }

    def Xform "Geom"
    {
        def "Plane1" (
            references = </Plane>
        )
        {
            double3 xformOp:translate = ( -2.25, 0, 2.25)
            uniform token[] xformOpOrder = ["xformOp:translate"]

            rel material:binding = </Scene/Looks/Material1>
        }

        def "Plane2" (
            references = </Plane>
        )
        {
            double3 xformOp:translate = ( 2.25, 0, 2.25)
            uniform token[] xformOpOrder = ["xformOp:translate"]

            rel material:binding = </Scene/Looks/Material2>
        }
    }
}

