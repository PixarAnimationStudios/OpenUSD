#usda 1.0
(
    endFrame = 2
    startFrame = 1
    upAxis = "Z"
)

def Mesh "Mesh" (
    active = false
)
{
    float3[] extent = [(-2, -2, -2), (2, 2, 2)]
    token faceVaryingLinearInterpolation = "boundaries"
    int[] faceVertexCounts = [4]
    int[] faceVertexIndices = [0, 1, 3, 2]
    token interpolateBoundary = "edgeAndCorner"
    point3f[] points = [(-2, -2, -2), (2, -2, -2), (-2, -2, 2), (2, -2, 2)]
    uniform token subdivisionScheme = "catmullClark"
}

def Xform "Meshes" (
    active = false
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    def Mesh "Mesh_1" (
        active = true
        references = </Mesh>
    )
    {
        color3f[] primvars:displayColor2 = [(0, 0.1, 0.9), (0.9, 0.1, 0), (0.1, 0.9, 0), (0, 0.9, 0.9)] (
            interpolation = "vertex"
        )
        custom float2[] primvars:map1_uv = [(0, 1), (1, 1), (0, 0), (1, 0)] (
            interpolation = "vertex"
        )
    }

    def Mesh "Mesh_2" (
        active = true
        references = </Mesh>
    )
    {
        color3f[] primvars:displayColor2 = [(0.1, 0.1, 0), (0, 1, 0), (1, 0, 0), (0.9, 0, 0)] (
            interpolation = "vertex"
        )
        custom float2[] primvars:map1_uv = [(0, 1), (0.4, 1), (0, 0), (0.4, 0)] (
            interpolation = "vertex"
        )
        custom double3 xformOp:translate = (0, 0, -4.25)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}

def Xform "Parent" (
    active = true
)
{
    def Scope "Materials"
    {
        def Material "UvMat"
        {
            token outputs:surface.connect = </Parent/Materials/UvMat/Surface.outputs:surface>

            def Shader "Surface"
            {
                uniform asset info:glslfx:sourceAsset = @shaders-surface.glslfx@
                uniform token info:implementationSource = "sourceAsset"
                uniform float3 inputs:diffuseColor = (1, 1, 1)
                add uniform float3 inputs:diffuseColor.connect = </Parent/Materials/UvMat/Tex.outputs:color>
                token outputs:surface
            }

            def Shader "Tex"
            {
                uniform token info:id = "HwUvTexture_1"
                uniform asset inputs:file = @badtexture.jpg@
                add uniform float2 inputs:uv.connect = </Parent/Materials/UvMat/Primvar.outputs:result>
                float3 outputs:color
            }

            def Shader "Primvar"
            {
                uniform token info:id = "HwPrimvar_1"
                uniform token inputs:varname = "map1_uv"
                float2 outputs:result
            }
        }

        def Material "FallbackMat"
        {
            token outputs:surface.connect = </Parent/Materials/FallbackMat/Surface.outputs:surface>

            def Shader "Surface"
            {
                uniform asset info:glslfx:sourceAsset = @shaders-surface.glslfx@
                uniform token info:implementationSource = "sourceAsset"
                uniform float3 inputs:diffuseColor = (1, 0, 1)
                token outputs:surface
            }
        }
    }

    def Xform "Meshes"
    {
        def "UV" (
            active = true
            instanceable = false
            references = </Meshes>
        )
        {
            rel material:binding = </Parent/Materials/UvMat>
            custom double3 xformOp:translate = (-4.25, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }

        def "Fallback" (
            active = true
            instanceable = true
            references = </Meshes>
        )
        {
            rel material:binding = </Parent/Materials/FallbackMat>
            custom double3 xformOp:translate = (4.25, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }
    }
}

