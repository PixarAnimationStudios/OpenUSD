#usda 1.0

def Xform "Geom"
{
    def Mesh "Subdiv" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent = [(-1.21273, -1.21273, -1.21273), (1.21273, 1.21273, 1.21273)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
        rel material:binding = </Materials/MyMaterial>
        point3f[] points = [(-1.21273, -1.21273, -1.21273), (1.21273, -1.21273, -1.21273), (-1.21273, -1.21273, 1.21273), (1.21273, -1.21273, 1.21273), (-1.21273, 1.21273, 1.21273), (1.21273, 1.21273, 1.21273), (-1.21273, 1.21273, -1.21273), (1.21273, 1.21273, -1.21273)]
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
    }
}

def Scope "Materials"
{
    def Material "MyMaterial"
    {
        token outputs:surface.connect = </Materials/MyMaterial/MySurface.outputs:surface>

        def Shader "MySurface"
        {
            uniform asset info:glslfx:sourceAsset = @basicDrawing/newInputShaderEncoding.glslfx@
            uniform token info:implementationSource = "sourceAsset"
            float inputs:time = 1
            token outputs:surface
        }
    }
}

