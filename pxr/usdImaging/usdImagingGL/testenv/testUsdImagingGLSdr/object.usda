#usda 1.0
(
    upAxis = "Z"
)
def Xform "Geom"
{
    def Mesh "Plane" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Materials/MyMaterial>

        float3[] extent = [(-1, -1, -1), (1, 1, 1)]
        token subdivisionScheme = "none"
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 1, 3, 2]
        point3f[] points = [(-1,-1,-1), (1, -1, -1), (-1, -1, 1), (1, -1, 1)]
        normal3f[] primvars:normals = [(-1,-1,-1), (1, -1, -1), (-1, -1, 1), (1, -1, 1)] (interpolation="vertex")
        color3f[] primvars:displayColor = [(0.1, 0.5, 0.8)]
        texCoord2f[] primvars:st = [(0, 1), (1, 1), (0, 0), (1, 0)] (interpolation = "vertex")
    }
}

def Scope "Materials"
{
    def Material "MyMaterial"
    {
        token outputs:surface.connect = </Materials/MyMaterial/MySurface.outputs:surface>

        def Shader "MySurface"
        {
            uniform token info:implementationSource = "sourceAsset"
            uniform asset info:glslfx:sourceAsset = @surface_texture.glslfx@
            
            color3f inputs:diffuseColor = (0,1,0)
            color3f inputs:diffuseColor.connect = </Materials/MyMaterial/MyTexture.outputs:rgb>
            token outputs:surface
        }

        def Shader "MyTexture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @WoodPlanks.jpg@
            float4 inputs:fallback = (1,0,1,1)
            float2 inputs:st.connect = </Materials/MyMaterial/MyPrimvar.outputs:result>
            float3 outputs:rgb
        }

        def Shader "MyPrimvar"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            string inputs:varname = "st"
            float2 outputs:result
       }
    }
}
