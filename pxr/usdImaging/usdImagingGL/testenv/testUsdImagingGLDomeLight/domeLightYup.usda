#usda 1.0
(
    defaultPrim = "Scene"
    endTimeCode = 1
    startTimeCode = 1
    upAxis = "Y"
)

def Xform "Scene" (
    kind = "component"
)
{
    def Scope "Looks"
    {
        def Material "Material_0"
        {
            token outputs:surface.connect = </Scene/Looks/Material_0/PbrPreview.outputs:surface>

            def Shader "PbrPreview"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.5, 0.5, 0.5)
                float inputs:roughness = 0.0
                float inputs:metallic = 0.0
                color3f inputs:specularColor = (1, 0, 0)
                int inputs:useSpecularWorkflow = 0
                token outputs:surface
            }
        }
    }

    def Xform "Geom"
    {
        def Xform "Geom0"
        {
            def Sphere "pSphere0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                rel material:binding = </Scene/Looks/Material_0>
                color3f[] primvars:displayColor = [(0, 1, 0)]
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }
        }
    }

    def Xform "lights" 
    {
        def DomeLight "DomeLight"
        {
            asset inputs:texture:file = "testImage.png"
        }
    }

    def Camera "FrontCamera"
    {
        double3 xformOp:translate = (0, 0, 7)
            float xformOp:rotateZ:rot = 0 # rotate to the back view
            float xformOp:rotateX:Zup = 90 # change to Zup
        uniform token[] xformOpOrder = ["xformOp:rotateZ:rot", "xformOp:rotateX:Zup","xformOp:translate"]
    }
    
    def Camera "BackCamera"
    {
        double3 xformOp:translate = (0, 0, 7)
            float xformOp:rotateZ:rot = 180 # rotate to the back view
            float xformOp:rotateX:Zup = 90 # change to Zup
        uniform token[] xformOpOrder = ["xformOp:rotateZ:rot", "xformOp:rotateX:Zup","xformOp:translate"]
    }
}
