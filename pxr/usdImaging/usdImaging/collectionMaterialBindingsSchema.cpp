//
// Copyright 2023 Pixar
//
// Licensed under the Apache License, Version 2.0 (the "Apache License")
// with the following modification; you may not use this file except in
// compliance with the Apache License and the following modification to it:
// Section 6. Trademarks. is deleted and replaced with:
//
// 6. Trademarks. This License does not grant permission to use the trade
//    names, trademarks, service marks, or product names of the Licensor
//    and its affiliates, except as required to comply with Section 4(c) of
//    the License and to reproduce the content of the NOTICE file.
//
// You may obtain a copy of the Apache License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Apache License with the above modification is
// distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied. See the Apache License for the specific
// language governing permissions and limitations under the Apache License.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdGen/schema.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#include "pxr/usdImaging/usdImaging/collectionMaterialBindingsSchema.h"
#include "pxr/imaging/hd/retainedDataSource.h"

#include "pxr/base/trace/trace.h"

// --(BEGIN CUSTOM CODE: Includes)--

#include "pxr/usdImaging/usdImaging/collectionMaterialBindingSchema.h"

// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

TF_DEFINE_PUBLIC_TOKENS(UsdImagingCollectionMaterialBindingsSchemaTokens,
    USD_IMAGING_COLLECTION_MATERIAL_BINDINGS_SCHEMA_TOKENS);

// --(BEGIN CUSTOM CODE: Schema Methods)--

TfTokenVector
UsdImagingCollectionMaterialBindingsSchema::GetPurposes()
{
    if (HdContainerDataSourceHandle h = GetContainer()) {
        return h->GetNames();
    }

    return {};
}

UsdImagingCollectionMaterialBindingVectorSchema
UsdImagingCollectionMaterialBindingsSchema::GetCollectionMaterialBindings()
{
    return GetCollectionMaterialBindings(
            UsdImagingCollectionMaterialBindingsSchemaTokens->allPurpose);
}

UsdImagingCollectionMaterialBindingVectorSchema
UsdImagingCollectionMaterialBindingsSchema::GetCollectionMaterialBindings(
    TfToken const &purpose)
{
    return UsdImagingCollectionMaterialBindingVectorSchema(
            _GetTypedDataSource<HdVectorDataSource>(purpose));
}

// --(END CUSTOM CODE: Schema Methods)--




/*static*/
UsdImagingCollectionMaterialBindingsSchema
UsdImagingCollectionMaterialBindingsSchema::GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer)
{
    return UsdImagingCollectionMaterialBindingsSchema(
        fromParentContainer
        ? HdContainerDataSource::Cast(fromParentContainer->Get(
                UsdImagingCollectionMaterialBindingsSchemaTokens->collectionMaterialBindings))
        : nullptr);
}

/*static*/
const TfToken &
UsdImagingCollectionMaterialBindingsSchema::GetSchemaToken()
{
    return UsdImagingCollectionMaterialBindingsSchemaTokens->collectionMaterialBindings;
}

/*static*/
const HdDataSourceLocator &
UsdImagingCollectionMaterialBindingsSchema::GetDefaultLocator()
{
    static const HdDataSourceLocator locator(GetSchemaToken());
    return locator;
} 
PXR_NAMESPACE_CLOSE_SCOPE