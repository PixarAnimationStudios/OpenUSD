//
// Copyright 2023 Pixar
//
// Licensed under the Apache License, Version 2.0 (the "Apache License")
// with the following modification; you may not use this file except in
// compliance with the Apache License and the following modification to it:
// Section 6. Trademarks. is deleted and replaced with:
//
// 6. Trademarks. This License does not grant permission to use the trade
//    names, trademarks, service marks, or product names of the Licensor
//    and its affiliates, except as required to comply with Section 4(c) of
//    the License and to reproduce the content of the NOTICE file.
//
// You may obtain a copy of the Apache License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Apache License with the above modification is
// distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied. See the Apache License for the specific
// language governing permissions and limitations under the Apache License.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdGen/schema.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#ifndef PXR_USD_IMAGING_USD_IMAGING_DIRECT_MATERIAL_BINDINGS_SCHEMA_H
#define PXR_USD_IMAGING_USD_IMAGING_DIRECT_MATERIAL_BINDINGS_SCHEMA_H

#include "pxr/usdImaging/usdImaging/api.h"

#include "pxr/imaging/hd/schema.h" 

// --(BEGIN CUSTOM CODE: Includes)--

#include "pxr/usdImaging/usdImaging/directMaterialBindingSchema.h"

// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

//-----------------------------------------------------------------------------

// --(BEGIN CUSTOM CODE: Declares)--
// --(END CUSTOM CODE: Declares)--

//-----------------------------------------------------------------------------

#define USD_IMAGING_DIRECT_MATERIAL_BINDINGS_SCHEMA_TOKENS \
    (directMaterialBindings) \
    ((allPurpose, "")) \

TF_DECLARE_PUBLIC_TOKENS(UsdImagingDirectMaterialBindingsSchemaTokens, USDIMAGING_API,
    USD_IMAGING_DIRECT_MATERIAL_BINDINGS_SCHEMA_TOKENS);

//-----------------------------------------------------------------------------
class UsdImagingDirectMaterialBindingsSchema : public HdSchema
{
public:
    UsdImagingDirectMaterialBindingsSchema(HdContainerDataSourceHandle container)
    : HdSchema(container) {}

// --(BEGIN CUSTOM CODE: Schema Methods)--

    /// Returns the purposes for which bindings may be available.
    /// \note This API is preferable to schema.GetContainer()->GetNames().
    USDIMAGING_API
    TfTokenVector GetPurposes();

    /// Returns the 'allPurpose' binding.
    USDIMAGING_API
    UsdImagingDirectMaterialBindingSchema
    GetDirectMaterialBinding();

    /// Returns the binding for the requested purpose.
    USDIMAGING_API
    UsdImagingDirectMaterialBindingSchema
    GetDirectMaterialBinding(const TfToken &purpose);

// --(END CUSTOM CODE: Schema Methods)--

    USDIMAGING_API
    static HdContainerDataSourceHandle
    BuildRetained(
        size_t count,
        const TfToken *names,
        const HdDataSourceBaseHandle *values);


    /// Retrieves a container data source with the schema's default name token
    /// "directMaterialBindings" from the parent container and constructs a
    /// UsdImagingDirectMaterialBindingsSchema instance.
    /// Because the requested container data source may not exist, the result
    /// should be checked with IsDefined() or a bool comparison before use.
    USDIMAGING_API
    static UsdImagingDirectMaterialBindingsSchema GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer);

    /// Returns a token where the container representing this schema is found in
    /// a container by default.
    USDIMAGING_API
    static const TfToken &GetSchemaToken();

    /// Returns an HdDataSourceLocator (relative to the prim-level data source)
    /// where the container representing this schema is found by default.
    USDIMAGING_API
    static const HdDataSourceLocator &GetDefaultLocator();

};

PXR_NAMESPACE_CLOSE_SCOPE

#endif