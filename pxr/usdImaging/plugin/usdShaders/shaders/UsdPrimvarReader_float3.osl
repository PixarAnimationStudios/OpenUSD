//
// Copyright 2019 Pixar
//
// Licensed under the Apache License, Version 2.0 (the "Apache License")
// with the following modification; you may not use this file except in
// compliance with the Apache License and the following modification to it:
// Section 6. Trademarks. is deleted and replaced with:
//
// 6. Trademarks. This License does not grant permission to use the trade
//    names, trademarks, service marks, or product names of the Licensor
//    and its affiliates, except as required to comply with Section 4(c) of
//    the License and to reproduce the content of the NOTICE file.
//
// You may obtain a copy of the Apache License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Apache License with the above modification is
// distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied. See the Apache License for the specific
// language governing permissions and limitations under the Apache License.
//

//
// Note: This shader needs to stay in sync with usdImaging's usdShaders as
// defined by the shaderDefs.usda file.  Thus, we must work precisely in this
// part of the shader space to ensure that properties defined here have the
// same types as their usd definition.  Use of special metadata like 'role' is
// necessary to make some of the types match.  Please see Sdr overview
// documentation for more information about different metadata tags that are
// used to inform property type translation.
//

shader UsdPrimvarReader_float3
[[
    string category="generator",
    string primvars="$varname",
]]
(
    string varname = ""
    [[
        int connectable = 0,
        string help = "Name of requested primvar."
    ]],

    color fallback = color(0.0)
    [[
        string help = "return value if primvar not found.",
        string role = "none"
    ]],

    output color result = 0.0
    [[
        string widget = "null",
        string role = "none"
    ]]
)
{
    result = fallback;
    getattribute("primvar", varname, result);
}
