#usda 1.0

def "World"
{
    def "Objects"
    {
        def PointInstancer "Instance1"
        {
            quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0)]
            point3f[] positions = [(2, 0, 0), (2, 0, 0)]
            int[] protoIndices = [0, 1]
            prepend rel prototypes = [
                </World/Objects/Instance1/proto/proto_Cube1_id0>,
                </World/Objects/Instance1/proto/proto_Cube2_id1>,
            ]
            float3[] scales = [(1, 1, 1), (1, 1, 1)]
            custom rel scenePrimPaths:World:Objects:Instance1:proto:proto_Cube1_id0
            prepend rel scenePrimPaths:World:Objects:Instance1:proto:proto_Cube1_id0 = </World/Objects/Instance1/Cube1>
            custom rel scenePrimPaths:World:Objects:Instance1:proto:proto_Cube2_id1
            prepend rel scenePrimPaths:World:Objects:Instance1:proto:proto_Cube2_id1 = </World/Objects/Instance1/Cube2>
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "proto"
            {
                def Mesh "proto_Cube1_id0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </World/Looks/PreviewSurface1>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }

                def Mesh "proto_Cube2_id1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </World/Looks/PreviewSurface1>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }
            }
        }

        def PointInstancer "Instance2"
        {
            quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0)]
            point3f[] positions = [(0, 2, 0), (0, 2, 0)]
            int[] protoIndices = [0, 1]
            prepend rel prototypes = [
                </World/Objects/Instance2/proto/proto_Cube1_id0>,
                </World/Objects/Instance2/proto/proto_Cube2_id1>,
            ]
            float3[] scales = [(1, 1, 1), (1, 1, 1)]
            custom rel scenePrimPaths:World:Objects:Instance2:proto:proto_Cube1_id0
            prepend rel scenePrimPaths:World:Objects:Instance2:proto:proto_Cube1_id0 = </World/Objects/Instance2/Cube1>
            custom rel scenePrimPaths:World:Objects:Instance2:proto:proto_Cube2_id1
            prepend rel scenePrimPaths:World:Objects:Instance2:proto:proto_Cube2_id1 = </World/Objects/Instance2/Cube2>
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "proto"
            {
                def Mesh "proto_Cube1_id0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </World/Looks/PreviewSurface2>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }

                def Mesh "proto_Cube2_id1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </World/Looks/PreviewSurface2>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }
            }
        }

        def PointInstancer "Instance5"
        {
            quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0)]
            point3f[] positions = [(2, 2, 2), (2, 2, 2)]
            int[] protoIndices = [0, 1]
            prepend rel prototypes = [
                </World/Objects/Instance5/proto/proto_Cube1_id0>,
                </World/Objects/Instance5/proto/proto_Cube2_id1>,
            ]
            float3[] scales = [(1, 1, 1), (1, 1, 1)]
            custom rel scenePrimPaths:World:Objects:Instance5:proto:proto_Cube1_id0
            prepend rel scenePrimPaths:World:Objects:Instance5:proto:proto_Cube1_id0 = </World/Objects/Instance5/Cube1>
            custom rel scenePrimPaths:World:Objects:Instance5:proto:proto_Cube2_id1
            prepend rel scenePrimPaths:World:Objects:Instance5:proto:proto_Cube2_id1 = </World/Objects/Instance5/Cube2>
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "proto"
            {
                def Mesh "proto_Cube1_id0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </Flattened_Prototype_1/PreviewSurface1>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }

                def Mesh "proto_Cube2_id1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </Flattened_Prototype_1/PreviewSurface2>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }
            }
        }

        def PointInstancer "Instance6"
        {
            quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0)]
            point3f[] positions = [(4, 4, 4), (4, 4, 4)]
            int[] protoIndices = [0, 1]
            prepend rel prototypes = [
                </World/Objects/Instance6/proto/proto_Cube1_id0>,
                </World/Objects/Instance6/proto/proto_Cube2_id1>,
            ]
            float3[] scales = [(1, 1, 1), (1, 1, 1)]
            custom rel scenePrimPaths:World:Objects:Instance6:proto:proto_Cube1_id0
            prepend rel scenePrimPaths:World:Objects:Instance6:proto:proto_Cube1_id0 = </World/Objects/Instance6/Cube1>
            custom rel scenePrimPaths:World:Objects:Instance6:proto:proto_Cube2_id1
            prepend rel scenePrimPaths:World:Objects:Instance6:proto:proto_Cube2_id1 = </World/Objects/Instance6/Cube2>
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "proto"
            {
                def Mesh "proto_Cube1_id0" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </Flattened_Prototype_1/PreviewSurface1>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }

                def Mesh "proto_Cube2_id1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    custom uniform bool displayStyle:displacementEnabled = 1
                    custom uniform bool displayStyle:flatShadingEnabled = 0
                    custom uniform int displayStyle:refineLevel = 0
                    uniform bool doubleSided = 0
                    token faceVaryingLinearInterpolation = "cornersPlus1"
                    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                    int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                    token interpolateBoundary = "edgeAndCorner"
                    rel material:binding = </Flattened_Prototype_1/PreviewSurface2>
                    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                        interpolation = "faceVarying"
                    )
                    uniform token orientation = "rightHanded"
                    point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                        interpolation = "faceVarying"
                    )
                    int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                    uniform token purpose = "default"
                    uniform token subdivisionScheme = "none"
                    token triangleSubdivisionRule = "catmullClark"
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }
            }
        }
    }

    def "Prototypes"
    {
        def "Mesh1"
        {
            def Mesh "Cube1"
            {
                custom uniform bool displayStyle:displacementEnabled = 1
                custom uniform bool displayStyle:flatShadingEnabled = 0
                custom uniform int displayStyle:refineLevel = 0
                uniform bool doubleSided = 0
                token faceVaryingLinearInterpolation = "cornersPlus1"
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                token interpolateBoundary = "edgeAndCorner"
                normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                    interpolation = "faceVarying"
                )
                uniform token orientation = "rightHanded"
                point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                uniform token purpose = "default"
                uniform token subdivisionScheme = "none"
                token triangleSubdivisionRule = "catmullClark"
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "Cube2"
            {
                custom uniform bool displayStyle:displacementEnabled = 1
                custom uniform bool displayStyle:flatShadingEnabled = 0
                custom uniform int displayStyle:refineLevel = 0
                uniform bool doubleSided = 0
                token faceVaryingLinearInterpolation = "cornersPlus1"
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                token interpolateBoundary = "edgeAndCorner"
                normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                    interpolation = "faceVarying"
                )
                uniform token orientation = "rightHanded"
                point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                uniform token purpose = "default"
                uniform token subdivisionScheme = "none"
                token triangleSubdivisionRule = "catmullClark"
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "Mesh2"
        {
            def Mesh "Cube1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                custom uniform bool displayStyle:displacementEnabled = 1
                custom uniform bool displayStyle:flatShadingEnabled = 0
                custom uniform int displayStyle:refineLevel = 0
                uniform bool doubleSided = 0
                token faceVaryingLinearInterpolation = "cornersPlus1"
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                token interpolateBoundary = "edgeAndCorner"
                rel material:binding = </World/Prototypes/Mesh2/PreviewSurface1>
                normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                    interpolation = "faceVarying"
                )
                uniform token orientation = "rightHanded"
                point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                uniform token purpose = "default"
                uniform token subdivisionScheme = "none"
                token triangleSubdivisionRule = "catmullClark"
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "Cube2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                custom uniform bool displayStyle:displacementEnabled = 1
                custom uniform bool displayStyle:flatShadingEnabled = 0
                custom uniform int displayStyle:refineLevel = 0
                uniform bool doubleSided = 0
                token faceVaryingLinearInterpolation = "cornersPlus1"
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
                token interpolateBoundary = "edgeAndCorner"
                rel material:binding = </World/Prototypes/Mesh2/PreviewSurface2>
                normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                    interpolation = "faceVarying"
                )
                uniform token orientation = "rightHanded"
                point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
                float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                uniform token purpose = "default"
                uniform token subdivisionScheme = "none"
                token triangleSubdivisionRule = "catmullClark"
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Material "PreviewSurface1"
            {
                custom uniform string[] _terminals = ["/World/Prototypes/Mesh2/PreviewSurface1/Shader"]
                token outputs:surface.connect = </World/Prototypes/Mesh2/PreviewSurface1/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0, 0, 0)
                    color3f inputs:emissiveColor = (1, 1, 1)
                    token outputs:surface
                }
            }

            def Material "PreviewSurface2"
            {
                custom uniform string[] _terminals = ["/World/Prototypes/Mesh2/PreviewSurface2/Shader"]
                token outputs:surface.connect = </World/Prototypes/Mesh2/PreviewSurface2/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0, 0, 0)
                    color3f inputs:emissiveColor = (1, 1, 1)
                    token outputs:surface
                }
            }
        }
    }

    def "Looks"
    {
        def Material "PreviewSurface1"
        {
            custom uniform string[] _terminals = ["/World/Looks/PreviewSurface1/Shader"]
            token outputs:surface.connect = </World/Looks/PreviewSurface1/Shader.outputs:surface>

            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0, 0, 0)
                color3f inputs:emissiveColor = (1, 0, 0)
                token outputs:surface
            }
        }

        def Material "PreviewSurface2"
        {
            custom uniform string[] _terminals = ["/World/Looks/PreviewSurface2/Shader"]
            token outputs:surface.connect = </World/Looks/PreviewSurface2/Shader.outputs:surface>

            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0, 0, 0)
                color3f inputs:emissiveColor = (0, 0, 1)
                token outputs:surface
            }
        }
    }
}

over "Flattened_Prototype_1"
{
    def Material "PreviewSurface1"
    {
        custom uniform string[] _terminals = ["/__Prototype_1/PreviewSurface1/Shader"]
        token outputs:surface.connect = </Flattened_Prototype_1/PreviewSurface1/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0, 0, 0)
            color3f inputs:emissiveColor = (1, 1, 1)
            token outputs:surface
        }
    }

    def Material "PreviewSurface2"
    {
        custom uniform string[] _terminals = ["/__Prototype_1/PreviewSurface2/Shader"]
        token outputs:surface.connect = </Flattened_Prototype_1/PreviewSurface2/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0, 0, 0)
            color3f inputs:emissiveColor = (1, 1, 1)
            token outputs:surface
        }
    }
}

