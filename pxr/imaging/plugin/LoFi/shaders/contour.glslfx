-- glslfx version 0.1

//
// Copyright 2020 benmalartre
//
// Unlicensed 
//

#import $TOOLS/LoFi/shaders/common.glslfx

--- --------------------------------------------------------------------------
-- configuration
{
    "techniques": {
        "default": {
            "vertex": {
                "source": [ "Common.Camera",
                            "Contour.Vertex" ]
            },
            "geometry": {
              "source": [ "Common.Camera",
                            "Contour.Geometry" ]
            },
            "fragment": {
                "source": [ "Common.Camera",
                            "Contour.Fragment" ]
            }
        }
    }
}

--- --------------------------------------------------------------------------
-- glsl Contour.Vertex

void main()
{
  mat4 projViewModel = GetProjectionMatrix() * GetViewMatrix() * GetModelMatrix();
  vec4 p = projViewModel * vec4(LOFI_GET_position(), 1.0);

  gl_Position = p;

  LOFI_SET_position(p.xyz/p.w);
}


--- --------------------------------------------------------------------------
-- glsl Contour.Geometry

layout(lines) in;
layout(triangle_strip, max_vertices = 4) out;

void main()
{
  float width = 0.0025;
  vec3 c = GetViewPoint();
  vec3 start = LOFI_GET_position(0);
  vec3 end = LOFI_GET_position(1);
  vec3 normal = normalize(((start+end)*0.5 ) - c);
  vec3 lhs = cross(normalize(end-start), normal) * width;

  gl_Position = vec4(start+lhs, 1.0);
  EmitVertex();
  gl_Position = vec4(start-lhs, 1.0);
  EmitVertex();
  gl_Position = vec4(end+lhs, 1.0);
  EmitVertex();
  gl_Position = vec4(end-lhs, 1.0);
  EmitVertex();
  EndPrimitive();
}

--- --------------------------------------------------------------------------
-- glsl Contour.Fragment
void main()
{
  LOFI_SET_result(vec4(0.0,0.0,0.0,1.0));
}
