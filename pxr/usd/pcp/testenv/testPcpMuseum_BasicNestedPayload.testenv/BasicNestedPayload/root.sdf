#sdf 1.4.32
(
    """
    This museum case demonstrates the behavior when payloads 
    are nested in namespace.
    """
)

def Scope "Set" (
    """
    In this example, the referenced set has a payload
    that has an opinion about a prop and a payloaded
    reference to that prop. Loading the prop's payload
    should not override the opinion defined directly
    in the prop.
    """
    references = @./set.sdf@</Set>
)
{
}

def Scope "Set2" (
    """
    This example verifies that descendant payload opinions 
    are stronger than ancestral payload opinions.
    """
    payload = @./set_payload.sdf@</Set>
)
{
    def Scope "Prop" (
        payload = @./prop_payload.sdf@</Prop>
    )
    {
    }
}

def Scope "Set3" (
    """
    This example simply verifies that local opinions are stronger
    than the opinions expressed in the payloads.
    """
    references = @./set.sdf@</Set>
)
{
    over "Prop"
    {
        over "PropScope"
        {
            string x = "from root"
        }
    }        
}
