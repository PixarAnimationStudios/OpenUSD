#sdf 1.4.32
(
    """
    This file has several examples of invalid opinions at
    relocation source locations.
    """
)

def "CharRig" (
    """
    CharRig has a reference to a nested PathRig.
    The Path prim under the PathRig is relocated to the anim scope,
    but there is also an illegal override at the old location.
    This should be reported as an error and ignored.
    """
    relocates = {
        </CharRig/Rig/PathRig/Path>: </CharRig/Anim/Path>
    }
)
{
    def Scope "Anim"
    {
    }

    def Scope "Rig"
    {
        def Scope "PathRig" (
            add references = @./pathRig.sdf@</PathRig>
        )
        {
            over "Path" (
                doc = "This opinion is prohibited, and should cause and error."
                add references = @./bogus.sdf@</Bogus>
            )
            {
            }
        }
    }
}

def "VariantAtRelocateSource" (
    """
    The child prim Inherit inherits from the prim Sibling/Class,
    and the prim Sibling was relocated from Child/Child2.

    During composition, the ancestral variant set and selection authored on
    Child should contribute opinions, but the variant on Child/Child2 should
    not. This is because composition prohibits opinions over the source of a
    relocated prim, and Child/Child2 is the source for the relocated prim
    Sibling.
    """
    references = @./ref.sdf@</Ref>
    relocates = {
        <Child/Child2> : <Sibling>
    }
)
{
    over "Child" (
        variantSets = "child"
        variants = {
            string child = "a"
        }
    )
    {
        variantSet "child" = {
            "a" {
                over "Child2"
                {
                    over "Class"
                    {
                    }
                }
            }
        }

        over "Child2" (
            variantSets = "child2"
            variants = {
                string child2 = "a"
            }
        )
        {
            variantSet "child2" = {
                "a" {
                    over "Class"
                    {
                    }
                }
            }
        }
    }

    over "Sibling"
    {
        over "Class"
        {
        }
    }
    
    def "Inherit" (
        inherits = </VariantAtRelocateSource/Sibling/Class>
    )
    {
    }
}
