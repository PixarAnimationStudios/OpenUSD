#usda 1.0

def "MaterialX"
{
    def "NodeGraphs"
    {
        def NodeGraph "nodegraph1" (
            doc = "this is a nodegraph"
        )
        {
            color3f outputs:diffuse (
                doc = "this is an output"
            )

            def Shader "img1"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @layer1.tif@ (
                    connectability = "interfaceOnly"
                    doc = "foo"
                )
                color3f outputs:result
            }

            def Shader "img2"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @layer2.tif@ (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "img3"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @mask1.tif@ (
                    connectability = "interfaceOnly"
                )
                float outputs:result
            }

            def Shader "n0"
            {
                uniform token info:id = "ND_mix_color3"
                color3f inputs:bg.connect = </MaterialX/NodeGraphs/nodegraph1/img2.outputs:result>
                color3f inputs:fg.connect = </MaterialX/NodeGraphs/nodegraph1/img1.outputs:result>
                float inputs:mix.connect = </MaterialX/NodeGraphs/nodegraph1/img3.outputs:result>
                color3f outputs:result
            }
        }

        def NodeGraph "nodegraph2"
        {
            color3f outputs:diffuse

            def Shader "img1"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @multilayer.tif@ (
                    connectability = "interfaceOnly"
                )
                string inputs:layer = "diffuse1" (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "img2"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @multilayer.tif@ (
                    connectability = "interfaceOnly"
                )
                string inputs:layer = "diffuse2" (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "img3"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @multilayer.tif@ (
                    connectability = "interfaceOnly"
                )
                string inputs:layer = "areamask" (
                    connectability = "interfaceOnly"
                )
                float outputs:result
            }

            def Shader "n3"
            {
                uniform token info:id = "ND_mix_color3"
                color3f inputs:bg.connect = </MaterialX/NodeGraphs/nodegraph2/img2.outputs:result>
                color3f inputs:fg.connect = </MaterialX/NodeGraphs/nodegraph2/img1.outputs:result>
                float inputs:mix.connect = </MaterialX/NodeGraphs/nodegraph2/img3.outputs:result>
                color3f outputs:result
            }
        }

        def NodeGraph "nodegraph3"
        {
            color3f outputs:albedo.connect = </MaterialX/NodeGraphs/nodegraph3/n11.outputs:result>
            float outputs:areamask.connect = </MaterialX/NodeGraphs/nodegraph3/img3.outputs:result>

            def Shader "img1"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @%diffalbedo@ (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "c1"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0, 0, 0) (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "img2"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @%dirtcolor@ (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "img3"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @%areamask@ (
                    connectability = "interfaceOnly"
                )
                float outputs:result
            }

            def Shader "img4"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @%noisemask@ (
                    connectability = "interfaceOnly"
                )
                float outputs:result
            }

            def Shader "n5"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.8, 1, 1.3) (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "add1"
            {
                uniform token info:id = "ND_add_color3"
                color3f inputs:in1.connect = </MaterialX/NodeGraphs/nodegraph3/img1.outputs:result>
                color3f inputs:in2.connect = </MaterialX/NodeGraphs/nodegraph3/c1.outputs:result>
                color3f outputs:result
            }

            def Shader "n6"
            {
                uniform token info:id = "ND_multiply_color3"
                color3f inputs:in1.connect = </MaterialX/NodeGraphs/nodegraph3/n5.outputs:result>
                color3f inputs:in2.connect = </MaterialX/NodeGraphs/nodegraph3/add1.outputs:result>
                color3f outputs:result
            }

            def Shader "n7"
            {
                uniform token info:id = "ND_contrast_color3"
                color3f inputs:amount = (0, 0, 0)
                color3f inputs:in.connect = </MaterialX/NodeGraphs/nodegraph3/img2.outputs:result>
                color3f inputs:pivot = (0.5, 0.5, 0.5) (
                    connectability = "interfaceOnly"
                )
                color3f outputs:result
            }

            def Shader "n8"
            {
                uniform token info:id = "ND_mix_color3"
                color3f inputs:bg.connect = </MaterialX/NodeGraphs/nodegraph3/n6.outputs:result>
                color3f inputs:fg.connect = </MaterialX/NodeGraphs/nodegraph3/n7.outputs:result>
                float inputs:mix.connect = </MaterialX/NodeGraphs/nodegraph3/img3.outputs:result>
                color3f outputs:result
            }

            def Shader "t1"
            {
                uniform token info:id = "ND_texcoord_vector2"
                float2 outputs:result
            }

            def Shader "n9"
            {
                uniform token info:id = "ND_noise2d_color3"
                vector3f inputs:amplitude = (0.03, 0.04, 0.06) (
                    connectability = "interfaceOnly"
                )
                float2 inputs:texcoord
                color3f outputs:result
            }

            def Shader "n10"
            {
                uniform token info:id = "ND_inside_color3"
                color3f inputs:in.connect = </MaterialX/NodeGraphs/nodegraph3/n9.outputs:result>
                float inputs:mask.connect = </MaterialX/NodeGraphs/nodegraph3/img4.outputs:result>
                color3f outputs:result
            }

            def Shader "n11"
            {
                uniform token info:id = "ND_add_color3"
                color3f inputs:in1.connect = </MaterialX/NodeGraphs/nodegraph3/n10.outputs:result>
                color3f inputs:in2.connect = </MaterialX/NodeGraphs/nodegraph3/n8.outputs:result>
                color3f outputs:result
            }
        }
    }
}


