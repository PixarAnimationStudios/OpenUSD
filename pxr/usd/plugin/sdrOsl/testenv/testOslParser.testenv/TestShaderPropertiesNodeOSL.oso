OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: -o TestShaderPropertiesNodeOSL.oso
shader TestShaderPropertiesNodeOSL	%meta{string,help,"This node is used for testing shader property typecorrectness"} 
param	int	inputInt	1		%read{2147483647,-1} %write{2147483647,-1}
param	string	inputString	"foo"		%read{2147483647,-1} %write{2147483647,-1}
param	float	inputFloat	1		%read{2147483647,-1} %write{2147483647,-1}
param	color	inputColor	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
param	point	inputPoint	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	normal	inputNormal	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
param	vector	inputVector	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	matrix	inputMatrix	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	struct TestStruct	inputStruct			%read{2147483647,-1} %write{2147483647,-1} %struct{"TestStruct"} %structfields{foo} %structfieldtypes{"f"} %structnfields{1}
param	float	inputStruct.foo	0		%read{2147483647,-1} %write{2147483647,-1} %mystruct{inputStruct} %mystructfield{0}
param	float	inputVstruct	0		%read{2147483647,-1} %write{2147483647,-1}
param	float	inputVstruct_parameter	0		%meta{string,vstructmember,"inputVstruct.parameter"}  %read{2147483647,-1} %write{2147483647,-1}
param	int[3]	inputIntArray	1 2 3		%read{2147483647,-1} %write{2147483647,-1}
param	string[4]	inputStringArray	"foo" "bar" "baz" "moo"		%read{2147483647,-1} %write{2147483647,-1}
param	float[5]	inputFloatArray	1 2 3 4 5		%read{2147483647,-1} %write{2147483647,-1}
param	color[2]	inputColorArray	1 1 1 1 1 1		%read{2147483647,-1} %write{2147483647,-1}
param	point[2]	inputPointArray	0 0 0 0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	normal[2]	inputNormalArray	1 1 1 1 1 1		%read{2147483647,-1} %write{2147483647,-1}
param	vector[2]	inputVectorArray	0 0 0 0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	matrix[2]	inputMatrixArray	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1		%read{2147483647,-1} %write{2147483647,-1}
param	float[2]	inputFloat2	1 2		%read{2147483647,-1} %write{2147483647,-1}
param	float[3]	inputFloat3	1 2 3		%read{2147483647,-1} %write{2147483647,-1}
param	float[4]	inputFloat4	1 2 3 4		%read{2147483647,-1} %write{2147483647,-1}
param	string	inputAsset	"filename"		%meta{string,widget,"filename"}  %read{2147483647,-1} %write{2147483647,-1}
param	string[2]	inputAssetArray	"test" "files"		%meta{string,widget,"fileInput"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	inputColorRoleNone	1 2 3		%meta{string,role,"none"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	inputPointRoleNone	0 0 0		%meta{string,role,"none"}  %read{2147483647,-1} %write{0,0} %initexpr
param	color	inputNormalRoleNone	0 0 0		%meta{string,role,"none"}  %read{2147483647,-1} %write{1,1} %initexpr
param	color	inputVectorRoleNone	0 0 0		%meta{string,role,"none"}  %read{2147483647,-1} %write{2,2} %initexpr
oparam	float	outputSurface	1		%meta{string,renderType,"terminal surface"}  %read{2147483647,-1} %write{2147483647,-1}
const	point	$const1	1 2 3		%read{0,0} %write{2147483647,-1}
const	normal	$const2	1 2 3		%read{1,1} %write{2147483647,-1}
const	vector	$const3	1 2 3		%read{2,2} %write{2147483647,-1}
code inputPointRoleNone
# TestShaderPropertiesNodeOSL.osl:64
#     ]],
	assign		inputPointRoleNone $const1 	%filename{"TestShaderPropertiesNodeOSL.osl"} %line{64} %argrw{"wr"}
code inputNormalRoleNone
# TestShaderPropertiesNodeOSL.osl:68
#     ]],
	assign		inputNormalRoleNone $const2 	%filename{"TestShaderPropertiesNodeOSL.osl"} %line{68} %argrw{"wr"}
code inputVectorRoleNone
# TestShaderPropertiesNodeOSL.osl:72
#     ]],
	assign		inputVectorRoleNone $const3 	%filename{"TestShaderPropertiesNodeOSL.osl"} %line{72} %argrw{"wr"}
code ___main___
	end
