#usda 1.0
(
    defaultPrim = "Cube"
    doc = "untitled"
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "Cube"
{
    float3[] extent.timeSamples = {
        0: [(-1, -1, -1), (1, 1, 1)],
    }
    int[] faceVertexCounts.timeSamples = {
        0: [4, 4, 4, 4, 4, 4],
    }
    int[] faceVertexIndices.timeSamples = {
        0: [2, 3, 1, 0, 6, 7, 3, 2, 4, 5, 7, 6, 0, 1, 5, 4, 0, 4, 6, 2, 5, 1, 3, 7],
    }
    uniform token orientation = "leftHanded"
    point3f[] points (
        interpolation = "vertex"
    )
    point3f[] points.timeSamples = {
        0: [(-1, -1, 1), (-1, 1, 1), (-1, -1, -1), (-1, 1, -1), (1, -1, 1), (1, 1, 1), (1, -1, -1), (1, 1, -1)],
    }
    float2[] primvars:uv (
        interpolation = "faceVarying"
    )
    float2[] primvars:uv.timeSamples = {
        0: [(0.9999134, 0.25004348), (0.7499567, 0.2500434), (0.74995667, 0.50000006), (0.9999133, 0.5000001), (0.25004333, 0.25004333), (0.25004333, 0.000086587555), (0.000086587555, 0.000086587555), (0.000086587555, 0.25004333), (0.25004333, 0.50000006), (0.5, 0.50000006), (0.50000006, 0.25004336), (0.000086587555, 0.50000006), (0.000086587555, 0.7499568), (0.25004333, 0.7499568)],
    }
    int[] primvars:uv:indices (
        interpolation = "faceVarying"
    )
    int[] primvars:uv:indices.timeSamples = {
        0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 4, 11, 12, 13, 8, 11, 8, 4, 7, 9, 2, 1, 10],
    }
    uniform token subdivisionScheme = "none"
    custom bool userProperties:meshtype
    bool userProperties:meshtype.timeSamples = {
        0: 0,
    }
    token visibility.timeSamples = {
        0: "inherited",
    }
    custom bool xform:inherits
    bool xform:inherits.timeSamples = {
        0: 0,
    }
    custom uchar xform:ops
    uchar xform:ops.timeSamples = {
        0: 48,
    }
    custom matrix4d xform:vals
    matrix4d xform:vals.timeSamples = {
        0: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
    }
}

