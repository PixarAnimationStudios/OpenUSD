#usda 1.0

(
    upAxis = "Y"
    doc = """Test for basis curve conversion to and from Abc."""
)


def Xform "Linear" {
    def Scope "Ribbons"{
        def BasisCurves "VaryingWidth" (){
            uniform token type = "linear"
            int[] curveVertexCounts = [7]
            point3f[] points = [(0, 0, 0), (1, 1, 0), (1, 2, 0), (0, 3, 0), (-1, 4, 0), (-1, 5, 0), (0, 6, 0)]
            float[] widths = [0, .5, .5, .8, .5, .5, 0] (interpolation = "varying") 
            normal3f[] normals = [(1, 0, 0), (.98, 0, .44), (.98, 0, .44), (.707, 0, .707), (.98, 0, .44), (.98, 0, .44), (1, 0, 0)] (interpolation = "varying")
            color3f[] primvars:displayColor = [(0, 1, 0)]
        }
    }
}



def Scope "Cubic"{
    def Scope "Ribbons"{
        def BasisCurves "VertexWidth" (){
            uniform token type = "cubic"
            uniform token basis = "bezier"
            int[] curveVertexCounts = [7]
            point3f[] points = [(0, 0, 0), (1, 1, 0), (1, 2, 0), (0, 3, 0), (-1, 4, 0), (-1, 5, 0), (0, 6, 0)]
            float[] widths = [0, .5, .5, .8, .5, .5, 0] (interpolation = "vertex")
            normal3f[] normals = [(1, 0, 0), (.98, 0, .44), (.707, 0, .707)] (interpolation = "varying")
            color3f[] primvars:displayColor = [(1, 1, 0)]
        }
    }
}
