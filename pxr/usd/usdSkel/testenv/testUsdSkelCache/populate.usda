#usda 1.0

def SkelAnimation "Anim1" 
{
    uniform token[] blendShapes = ["override", "shape"]
}

def SkelAnimation "Anim2" {}

def SkelAnimation "InactiveAnim" (active=false) {}

def Skeleton "Skel1" {}

def Skeleton "Skel2" {}

def Skeleton "InactiveSkel" (active=false) {}

def Scope "InstancedModelAnimBindings" (
    instanceable = true
)
{
    def SkelAnimation "Anim" {}
   
    def Skeleton "Inherit" {}

    def Skeleton "Override" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:animationSource = <../Anim>
    }
}

def SkelRoot "AnimBinding"
{
    def Scope "Scope" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:animationSource = </Anim1>

        def Skeleton "Inherit" {}
    
        def Skeleton "Override" (
            prepend apiSchemas = ["SkelBindingAPI"]
        )
        {
            rel skel:animationSource = </Anim2>
        }

        def Skeleton "Block" (
            prepend apiSchemas = ["SkelBindingAPI"]
        )
        {
            rel skel:animationSource = None
        }
    }

    def Skeleton "Unbound" {}
    
    def Skeleton "BoundToInactiveAnim" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:animationSource = </InactiveAnim>
    }

    over "Instance" (
        add references = </InstancedModelAnimBindings>
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:animationSource = </Anim1>
    }
}

def Scope "InstancedModelSkelBindings" (
    instanceable = true
)
{
    def Skeleton "Skel" {}
   
    def Mesh "Inherit" {}

    def Mesh "Override" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:skeleton = <../Skel>
        uniform matrix4d primvars:skel:geomBindTransform = ((1,0,0,0),(0,1,0,0),(0,0,1,0),(0,0,0,1))
        uniform int[] primvars:skel:jointIndices = []
        uniform float[] primvars:skel:jointWeights = []
        uniform token[] skel:joints = ["override"]
        uniform token[] skel:blendShapes = ["override"]
        rel skel:blendShapeTargets = []
    }
}

def SkelRoot "SkelBinding"(
    prepend apiSchemas = ["SkelBindingAPI"]
)
{
    rel skel:animationSource = </Anim1>

    def Scope "Scope" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:skeleton = </Skel1>
        uniform matrix4d primvars:skel:geomBindTransform = ((1,0,0,0),(0,1,0,0),(0,0,1,0),(0,0,0,1))
        uniform int[] primvars:skel:jointIndices = []
        uniform float[] primvars:skel:jointWeights = []
        uniform token[] skel:joints = ["scope"]
        uniform token[] skel:blendShapes = ["ignored"]
        rel skel:blendShapeTargets = []

        def Mesh "Inherit" {}
    
        def Mesh "Override" (
            prepend apiSchemas = ["SkelBindingAPI"]
        )
        {
            rel skel:skeleton = </Skel2>
            uniform matrix4d primvars:skel:geomBindTransform = ((1,0,0,0),(0,1,0,0),(0,0,1,0),(0,0,0,1))
            uniform int[] primvars:skel:jointIndices = []
            uniform float[] primvars:skel:jointWeights = []
            uniform token[] skel:joints = ["override"]
            uniform token[] skel:blendShapes = ["shape"]
            rel skel:blendShapeTargets = []
        }

        def Mesh "Block" (
            prepend apiSchemas = ["SkelBindingAPI"]
        )
        {
            rel skel:skeleton = None
            uniform matrix4d primvars:skel:geomBindTransform = None
            uniform int[] primvars:skel:jointIndices = None
            uniform float[] primvars:skel:jointWeights = None
            uniform token[] skel:joints = None
            uniform token[] skel:blendShapes = None
            rel skel:blendShapeTargets = None
        }
   }

    def Mesh "Unbound" {}
    
    def Mesh "BoundToInactiveSkel" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:skeleton = </InactiveSkel>
    }

    over "Instance" (
        add references = </InstancedModelSkelBindings>
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        rel skel:skeleton = </Skel1>
        uniform matrix4d primvars:skel:geomBindTransform = ((1,0,0,0),(0,1,0,0),(0,0,1,0),(0,0,0,1))
        uniform int[] primvars:skel:jointIndices = []
        uniform float[] primvars:skel:jointWeights = []
        uniform token[] skel:joints = ["instance"]
        uniform token[] skel:blendShapes = ["ignored"]
        rel skel:blendShapeTargets = []
    }
}
