#usda 1.0
(
    endTimeCode = 30
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "Root" (
    kind = "component"
)
{
    float3[] extentsHint.timeSamples = {
        1: [(-0.55, -1.1, -0.55), (0.6, 1.1, 0.6)],
        2: [(-0.55, -1.1, -0.55), (0.6, 1.1065071, 0.61312914)],
        3: [(-0.55, -1.1, -0.55), (0.6, 1.1231614, 0.6478765)],
        4: [(-0.55, -1.1, -0.55), (0.6, 1.1452192, 0.6969908)],
        5: [(-0.55, -1.1, -0.55), (0.6, 1.1681643, 0.7532618)],
        6: [(-0.55, -1.1, -0.55), (0.6, 1.1884793, 0.8099986)],
        7: [(-0.55, -1.1, -0.55), (0.6, 1.2040887, 0.86140347)],
        8: [(-0.55, -1.1, -0.55), (0.6, 1.2144165, 0.90273696)],
        9: [(-0.55, -1.1, -0.55), (0.6, 1.2200208, 0.9301543)],
        10: [(-0.55, -1.1, -0.55), (0.6, 1.2217903, 0.9401407)],
    }
    rel skel:skeleton = </Root/Skeleton>

    def Skeleton "Skeleton"
    {
        uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, 0, 1) ), ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (2, 0, 0, 1) )]
        uniform token[] joints = ["joint1", "joint1/joint2", "joint1/joint2/joint3"]
        uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, 0, 1) ), ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (1, 0, 0, 1) )]
        rel skel:animationSource = </Root/Skeleton/Animation>

        def SkelAnimation "Animation"
        {
            float3[] extent.timeSamples = {
                1: [(-8.881784e-16, -1, 0), (0, 1, 4.440892e-16)],
                2: [(-8.8548644e-16, -1, 0), (0, 0.99992824, 0.011980047)],
                3: [(-8.77966e-16, -1, 0), (0, 0.9990293, 0.04405114)],
                4: [(-8.6628537e-16, -1, 0), (0, 0.99590486, 0.0904073)],
                5: [(-8.512596e-16, -1, 0), (0, 0.98941684, 0.14510126)],
                6: [(-8.341171e-16, -1, 0), (0, 0.97935027, 0.20217088)],
                7: [(-8.1660954e-16, -1, 0), (0, 0.9667337, 0.25578493)],
                8: [(-8.0096155e-16, -1, 0), (0, 0.95381016, 0.3004101)],
                9: [(-7.8970147e-16, -1, 0), (0, 0.94367975, 0.3308602)],
                10: [(-7.8540797e-16, -1, 0), (0, 0.93965006, 0.34213713)],
                11: [(-0.008673679, -1, 0), (0, 0.9396149, 0.34212375)],
                12: [(-0.032211367, -1, 0), (0, 0.9391626, 0.34195903)],
                13: [(-0.06686227, -1, 0), (0, 0.93754745, 0.34137106)],
                14: [(-0.10882605, -1, 0), (0, 0.9340696, 0.34010422)],
                15: [(-0.15427072, -1, 0), (0, 0.9284015, 0.33804023)],
                16: [(-0.19939104, -1, 0), (0, 0.9207824, 0.33526555)],
                17: [(-0.24048574, -1, 0), (0, 0.91207445, 0.33209455)],
                18: [(-0.2740113, -1, 0), (0, 0.903687, 0.3290404)],
                19: [(-0.2965753, -1, 0), (0, 0.8973754, 0.32674214)],
                20: [(-0.30484772, -1, 0), (0, 0.89492446, 0.3258497)],
                21: [(-0.30484772, -1, 0), (0, 0.89492446, 0.3258497)],
                22: [(-0.30484763, -1, 0), (0, 0.8949245, 0.32584968)],
                23: [(-0.30484766, -1, 0), (0, 0.8949245, 0.3258497)],
                24: [(-0.30484772, -1, 0), (0, 0.89492446, 0.32584974)],
                25: [(-0.3048477, -1, 0), (0, 0.8949245, 0.3258497)],
                26: [(-0.3048477, -1, 0), (0, 0.8949245, 0.3258497)],
                27: [(-0.30484763, -1, 0), (0, 0.8949245, 0.32584968)],
                28: [(-0.30484766, -1, 0), (0, 0.8949245, 0.32584968)],
                29: [(-0.30484766, -1, 0), (0, 0.8949245, 0.32584968)],
                30: [(-0.30484766, -1, 0), (0, 0.8949245, 0.3258497)],
            }
            uniform token[] joints = ["joint1", "joint1/joint2", "joint1/joint2/joint3"]
            quatf[] rotations.timeSamples = {
                1: [(0.5, 0.5, 0.5, 0.5), (1, 0, 0, 0), (0.5, -0.5, -0.5, -0.5)],
                2: [(0.5, 0.5, 0.5, 0.5), (0.99998206, 0, 0, 0.0059874505), (0.5, -0.5, -0.5, -0.5)],
                3: [(0.5, 0.5, 0.5, 0.5), (0.9997573, 0, 0, 0.022032166), (0.5, -0.5, -0.5, -0.5)],
                4: [(0.5, 0.5, 0.5, 0.5), (0.9989757, 0, 0, 0.04524994), (0.5, -0.5, -0.5, -0.5)],
                5: [(0.5, 0.5, 0.5, 0.5), (0.9973507, 0, 0, 0.07274352), (0.5, -0.5, -0.5, -0.5)],
                6: [(0.5, 0.5, 0.5, 0.5), (0.9948242, 0, 0, 0.10161159), (0.5, -0.5, -0.5, -0.5)],
                7: [(0.5, 0.5, 0.5, 0.5), (0.99164855, 0, 0, 0.12896946), (0.5, -0.5, -0.5, -0.5)],
                8: [(0.5, 0.5, 0.5, 0.5), (0.9883851, 0, 0, 0.15197003), (0.5, -0.5, -0.5, -0.5)],
                9: [(0.5, 0.5, 0.5, 0.5), (0.9858194, 0, 0, 0.16780986), (0.5, -0.5, -0.5, -0.5)],
                10: [(0.5, 0.5, 0.5, 0.5), (0.98479694, 0, 0, 0.1737094), (0.5, -0.5, -0.5, -0.5)],
                11: [(0.5, 0.5, 0.5, 0.5), (0.9847693, -0.0060739038, 0.0033323904, 0.17372827), (0.5, -0.5, -0.5, -0.5)],
                12: [(0.5, 0.5, 0.5, 0.5), (0.98440933, -0.022794377, 0.012332357, 0.17397308), (0.5, -0.5, -0.5, -0.5)],
                13: [(0.5, 0.5, 0.5, 0.5), (0.98309743, -0.047886964, 0.025488343, 0.17486162), (0.5, -0.5, -0.5, -0.5)],
                14: [(0.5, 0.5, 0.5, 0.5), (0.98019844, -0.07903047, 0.041256294, 0.17681383), (0.5, -0.5, -0.5, -0.5)],
                15: [(0.5, 0.5, 0.5, 0.5), (0.9753132, -0.11386365, 0.058064535, 0.18007703), (0.5, -0.5, -0.5, -0.5)],
                16: [(0.5, 0.5, 0.5, 0.5), (0.9684434, -0.15002865, 0.07434445, 0.18461232), (0.5, -0.5, -0.5, -0.5)],
                17: [(0.5, 0.5, 0.5, 0.5), (0.9600648, -0.18523708, 0.08857696, 0.1900445), (0.5, -0.5, -0.5, -0.5)],
                18: [(0.5, 0.5, 0.5, 0.5), (0.9511102, -0.21733138, 0.09933574, 0.19567554), (0.5, -0.5, -0.5, -0.5)],
                19: [(0.5, 0.5, 0.5, 0.5), (0.9428679, -0.24431108, 0.10530581, 0.2005567), (0.5, -0.5, -0.5, -0.5)],
                20: [(0.5, 0.5, 0.5, 0.5), (0.93680716, -0.26430017, 0.10526084, 0.20361213), (0.5, -0.5, -0.5, -0.5)],
                21: [(0.5, 0.5, 0.5, 0.5), (0.9323757, -0.27953127, 0.10192881, 0.20530044), (0.5, -0.5, -0.5, -0.5)],
                22: [(0.5, 0.5, 0.5, 0.5), (0.9280986, -0.2934199, 0.09885244, 0.20679928), (0.5, -0.5, -0.5, -0.5)],
                23: [(0.5, 0.5, 0.5, 0.5), (0.9240588, -0.30590457, 0.09605568, 0.20811309), (0.5, -0.5, -0.5, -0.5)],
                24: [(0.5, 0.5, 0.5, 0.5), (0.9203373, -0.31692496, 0.093561925, 0.20924607), (0.5, -0.5, -0.5, -0.5)],
                25: [(0.5, 0.5, 0.5, 0.5), (0.9170122, -0.32642126, 0.09139402, 0.21020201), (0.5, -0.5, -0.5, -0.5)],
                26: [(0.5, 0.5, 0.5, 0.5), (0.9141572, -0.33433342, 0.08957415, 0.21098393), (0.5, -0.5, -0.5, -0.5)],
                27: [(0.5, 0.5, 0.5, 0.5), (0.9118408, -0.34060043, 0.08812382, 0.2115938), (0.5, -0.5, -0.5, -0.5)],
                28: [(0.5, 0.5, 0.5, 0.5), (0.9101248, -0.34515962, 0.08706377, 0.21203218), (0.5, -0.5, -0.5, -0.5)],
                29: [(0.5, 0.5, 0.5, 0.5), (0.9090633, -0.34794572, 0.0864139, 0.21229787), (0.5, -0.5, -0.5, -0.5)],
                30: [(0.5, 0.5, 0.5, 0.5), (0.9087012, -0.34889027, 0.08619322, 0.21238756), (0.5, -0.5, -0.5, -0.5)],
            }
            half3[] scales.timeSamples = {
                1: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                2: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                3: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                4: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                5: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                6: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                7: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                8: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                9: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                10: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                11: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                12: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                13: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                14: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                15: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                16: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                17: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                18: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                19: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                20: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                21: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                22: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                23: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                24: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                25: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                26: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                27: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                28: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                29: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                30: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
            }
            float3[] translations.timeSamples = {
                1: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                2: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                3: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                4: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                5: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                6: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                7: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                8: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                9: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                10: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                11: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                12: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                13: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                14: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                15: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                16: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                17: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                18: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                19: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                20: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                21: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                22: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                23: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                24: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                25: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                26: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                27: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                28: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                29: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                30: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
            }
        }
    }

    def Mesh "Mesh"
    {
        float3[] extent.timeSamples = {
            1: [(-0.5, -1, -0.5), (0.5, 1, 0.5)],
            2: [(-0.5, -1, -0.5), (0.5, 1.0059156, 0.5119388)],
            3: [(-0.5, -1, -0.5), (0.5, 1.0210559, 0.5435682)],
            4: [(-0.5, -1, -0.5), (0.5, 1.0411085, 0.5883596)],
            5: [(-0.5, -1, -0.5), (0.5, 1.0619676, 0.63980997)],
            6: [(-0.5, -1, -0.5), (0.5, 1.0804359, 0.69184643)],
            7: [(-0.5, -1, -0.5), (0.5, 1.0946262, 0.7391516)],
            8: [(-0.5, -1, -0.5), (0.5, 1.1040151, 0.7773149)],
            9: [(-0.5, -1, -0.5), (0.5, 1.1091099, 0.8027003)],
            10: [(-0.5, -1, -0.5), (0.5, 1.1107185, 0.811962)],
        }
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
        point3f[] points = [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.5), (-0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 1, 0.5), (-0.5, 1, 0.5), (-0.5, 1, 0.5), (0.5, 1, 0.5), (0.5, 1, -0.5), (-0.5, 1, -0.5), (-0.5, 1, -0.5), (0.5, 1, -0.5), (0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0, -0.5), (0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 0, -0.5), (0.5, 1, -0.5), (0.5, 1, 0.5), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, 0, 0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, 0.5), (-0.5, 1, 0.5), (-0.5, 1, -0.5)]
        point3f[] points.timeSamples = {
            1: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.5), (-0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 1, 0.5), (-0.5, 1, 0.5), (-0.5, 1, 0.5), (0.5, 1, 0.5), (0.5, 1, -0.5), (-0.5, 1, -0.5), (-0.5, 1, -0.5), (0.5, 1, -0.5), (0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0, -0.5), (0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 0, -0.5), (0.5, 1, -0.5), (0.5, 1, 0.5), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, 0, 0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, 0.5), (-0.5, 1, 0.5), (-0.5, 1, -0.5)],
            2: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.0029936715, 0.49998206), (-0.5, -0.0029936715, 0.49998206), (-0.5, -0.0029936715, 0.49998206), (0.5, -0.0029936715, 0.49998206), (0.5, 0.99394095, 0.5119388), (-0.5, 0.99394095, 0.5119388), (-0.5, 0.99394095, 0.5119388), (0.5, 0.99394095, 0.5119388), (0.5, 1.0059156, -0.48798946), (-0.5, 1.0059156, -0.48798946), (-0.5, 1.0059156, -0.48798946), (0.5, 1.0059156, -0.48798946), (0.5, 0.0029936715, -0.49998206), (-0.5, 0.0029936715, -0.49998206), (-0.5, 0.0029936715, -0.49998206), (0.5, 0.0029936715, -0.49998206), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.0029936715, -0.49998206), (0.5, -0.0029936715, 0.49998206), (0.5, -0.0029936715, 0.49998206), (0.5, 0.0029936715, -0.49998206), (0.5, 1.0059156, -0.48798946), (0.5, 0.99394095, 0.5119388), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.0029936715, 0.49998206), (-0.5, 0.0029936715, -0.49998206), (-0.5, 0.0029936715, -0.49998206), (-0.5, -0.0029936715, 0.49998206), (-0.5, 0.99394095, 0.5119388), (-0.5, 1.0059156, -0.48798946)],
            3: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.011013409, 0.4997573), (-0.5, -0.011013409, 0.4997573), (-0.5, -0.011013409, 0.4997573), (0.5, -0.011013409, 0.4997573), (0.5, 0.9770023, 0.5435682), (-0.5, 0.9770023, 0.5435682), (-0.5, 0.9770023, 0.5435682), (0.5, 0.9770023, 0.5435682), (0.5, 1.0210559, -0.45546094), (-0.5, 1.0210559, -0.45546094), (-0.5, 1.0210559, -0.45546094), (0.5, 1.0210559, -0.45546094), (0.5, 0.011013409, -0.4997573), (-0.5, 0.011013409, -0.4997573), (-0.5, 0.011013409, -0.4997573), (0.5, 0.011013409, -0.4997573), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.011013409, -0.4997573), (0.5, -0.011013409, 0.4997573), (0.5, -0.011013409, 0.4997573), (0.5, 0.011013409, -0.4997573), (0.5, 1.0210559, -0.45546094), (0.5, 0.9770023, 0.5435682), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.011013409, 0.4997573), (-0.5, 0.011013409, -0.4997573), (-0.5, 0.011013409, -0.4997573), (-0.5, -0.011013409, 0.4997573), (-0.5, 0.9770023, 0.5435682), (-0.5, 1.0210559, -0.45546094)],
            4: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.022601794, 0.49897623), (-0.5, -0.022601794, 0.49897623), (-0.5, -0.022601794, 0.49897623), (0.5, -0.022601794, 0.49897623), (0.5, 0.9507013, 0.5883596), (-0.5, 0.9507013, 0.5883596), (-0.5, 0.9507013, 0.5883596), (0.5, 0.9507013, 0.5883596), (0.5, 1.0411085, -0.40754527), (-0.5, 1.0411085, -0.40754527), (-0.5, 1.0411085, -0.40754527), (0.5, 1.0411085, -0.40754527), (0.5, 0.022601794, -0.49897623), (-0.5, 0.022601794, -0.49897623), (-0.5, 0.022601794, -0.49897623), (0.5, 0.022601794, -0.49897623), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.022601794, -0.49897623), (0.5, -0.022601794, 0.49897623), (0.5, -0.022601794, 0.49897623), (0.5, 0.022601794, -0.49897623), (0.5, 1.0411085, -0.40754527), (0.5, 0.9507013, 0.5883596), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.022601794, 0.49897623), (-0.5, 0.022601794, -0.49897623), (-0.5, 0.022601794, -0.49897623), (-0.5, -0.022601794, 0.49897623), (-0.5, 0.9507013, 0.5883596), (-0.5, 1.0411085, -0.40754527)],
            5: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.0362754, 0.4973542), (-0.5, -0.0362754, 0.4973542), (-0.5, -0.0362754, 0.4973542), (0.5, -0.0362754, 0.4973542), (0.5, 0.91686594, 0.63980997), (-0.5, 0.91686594, 0.63980997), (-0.5, 0.91686594, 0.63980997), (0.5, 0.91686594, 0.63980997), (0.5, 1.0619676, -0.34960678), (-0.5, 1.0619676, -0.34960678), (-0.5, 1.0619676, -0.34960678), (0.5, 1.0619676, -0.34960678), (0.5, 0.0362754, -0.4973542), (-0.5, 0.0362754, -0.4973542), (-0.5, 0.0362754, -0.4973542), (0.5, 0.0362754, -0.4973542), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.0362754, -0.4973542), (0.5, -0.0362754, 0.4973542), (0.5, -0.0362754, 0.4973542), (0.5, 0.0362754, -0.4973542), (0.5, 1.0619676, -0.34960678), (0.5, 0.91686594, 0.63980997), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.0362754, 0.4973542), (-0.5, 0.0362754, -0.4973542), (-0.5, 0.0362754, -0.4973542), (-0.5, -0.0362754, 0.4973542), (-0.5, 0.91686594, 0.63980997), (-0.5, 1.0619676, -0.34960678)],
            6: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.050542835, 0.49483752), (-0.5, -0.050542835, 0.49483752), (-0.5, -0.050542835, 0.49483752), (0.5, -0.050542835, 0.49483752), (0.5, 0.8782645, 0.69184643), (-0.5, 0.8782645, 0.69184643), (-0.5, 0.8782645, 0.69184643), (0.5, 0.8782645, 0.69184643), (0.5, 1.0804359, -0.28750372), (-0.5, 1.0804359, -0.28750372), (-0.5, 1.0804359, -0.28750372), (0.5, 1.0804359, -0.28750372), (0.5, 0.050542835, -0.49483752), (-0.5, 0.050542835, -0.49483752), (-0.5, 0.050542835, -0.49483752), (0.5, 0.050542835, -0.49483752), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.050542835, -0.49483752), (0.5, -0.050542835, 0.49483752), (0.5, -0.050542835, 0.49483752), (0.5, 0.050542835, -0.49483752), (0.5, 1.0804359, -0.28750372), (0.5, 0.8782645, 0.69184643), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.050542835, 0.49483752), (-0.5, 0.050542835, -0.49483752), (-0.5, 0.050542835, -0.49483752), (-0.5, -0.050542835, 0.49483752), (-0.5, 0.8782645, 0.69184643), (-0.5, 1.0804359, -0.28750372)],
            7: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.06394619, 0.49168342), (-0.5, -0.06394619, 0.49168342), (-0.5, -0.06394619, 0.49168342), (0.5, -0.06394619, 0.49168342), (0.5, 0.8388414, 0.7391516), (-0.5, 0.8388414, 0.7391516), (-0.5, 0.8388414, 0.7391516), (0.5, 0.8388414, 0.7391516), (0.5, 1.0946262, -0.22758213), (-0.5, 1.0946262, -0.22758213), (-0.5, 1.0946262, -0.22758213), (0.5, 1.0946262, -0.22758213), (0.5, 0.06394619, -0.49168342), (-0.5, 0.06394619, -0.49168342), (-0.5, 0.06394619, -0.49168342), (0.5, 0.06394619, -0.49168342), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.06394619, -0.49168342), (0.5, -0.06394619, 0.49168342), (0.5, -0.06394619, 0.49168342), (0.5, 0.06394619, -0.49168342), (0.5, 1.0946262, -0.22758213), (0.5, 0.8388414, 0.7391516), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.06394619, 0.49168342), (-0.5, 0.06394619, -0.49168342), (-0.5, 0.06394619, -0.49168342), (-0.5, -0.06394619, 0.49168342), (-0.5, 0.8388414, 0.7391516), (-0.5, 1.0946262, -0.22758213)],
            8: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.075102456, 0.48845255), (-0.5, -0.075102456, 0.48845255), (-0.5, -0.075102456, 0.48845255), (0.5, -0.075102456, 0.48845255), (0.5, 0.8036053, 0.7773149), (-0.5, 0.8036053, 0.7773149), (-0.5, 0.8036053, 0.7773149), (0.5, 0.8036053, 0.7773149), (0.5, 1.1040151, -0.17649528), (-0.5, 1.1040151, -0.17649528), (-0.5, 1.1040151, -0.17649528), (0.5, 1.1040151, -0.17649528), (0.5, 0.075102456, -0.48845255), (-0.5, 0.075102456, -0.48845255), (-0.5, 0.075102456, -0.48845255), (0.5, 0.075102456, -0.48845255), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.075102456, -0.48845255), (0.5, -0.075102456, 0.48845255), (0.5, -0.075102456, 0.48845255), (0.5, 0.075102456, -0.48845255), (0.5, 1.1040151, -0.17649528), (0.5, 0.8036053, 0.7773149), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.075102456, 0.48845255), (-0.5, 0.075102456, -0.48845255), (-0.5, 0.075102456, -0.48845255), (-0.5, -0.075102456, 0.48845255), (-0.5, 0.8036053, 0.7773149), (-0.5, 1.1040151, -0.17649528)],
            9: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.08271511, 0.48591992), (-0.5, -0.08271511, 0.48591992), (-0.5, -0.08271511, 0.48591992), (0.5, -0.08271511, 0.48591992), (0.5, 0.7782495, 0.8027003), (-0.5, 0.7782495, 0.8027003), (-0.5, 0.7782495, 0.8027003), (0.5, 0.7782495, 0.8027003), (0.5, 1.1091099, -0.14097941), (-0.5, 1.1091099, -0.14097941), (-0.5, 1.1091099, -0.14097941), (0.5, 1.1091099, -0.14097941), (0.5, 0.08271511, -0.48591992), (-0.5, 0.08271511, -0.48591992), (-0.5, 0.08271511, -0.48591992), (0.5, 0.08271511, -0.48591992), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.08271511, -0.48591992), (0.5, -0.08271511, 0.48591992), (0.5, -0.08271511, 0.48591992), (0.5, 0.08271511, -0.48591992), (0.5, 1.1091099, -0.14097941), (0.5, 0.7782495, 0.8027003), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.08271511, 0.48591992), (-0.5, 0.08271511, -0.48591992), (-0.5, 0.08271511, -0.48591992), (-0.5, -0.08271511, 0.48591992), (-0.5, 0.7782495, 0.8027003), (-0.5, 1.1091099, -0.14097941)],
            10: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.085534245, 0.4849125), (-0.5, -0.085534245, 0.4849125), (-0.5, -0.085534245, 0.4849125), (0.5, -0.085534245, 0.4849125), (0.5, 0.76858157, 0.811962), (-0.5, 0.76858157, 0.811962), (-0.5, 0.76858157, 0.811962), (0.5, 0.76858157, 0.811962), (0.5, 1.1107185, -0.12768805), (-0.5, 1.1107185, -0.12768805), (-0.5, 1.1107185, -0.12768805), (0.5, 1.1107185, -0.12768805), (0.5, 0.085534245, -0.4849125), (-0.5, 0.085534245, -0.4849125), (-0.5, 0.085534245, -0.4849125), (0.5, 0.085534245, -0.4849125), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.085534245, -0.4849125), (0.5, -0.085534245, 0.4849125), (0.5, -0.085534245, 0.4849125), (0.5, 0.085534245, -0.4849125), (0.5, 1.1107185, -0.12768805), (0.5, 0.76858157, 0.811962), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.085534245, 0.4849125), (-0.5, 0.085534245, -0.4849125), (-0.5, 0.085534245, -0.4849125), (-0.5, -0.085534245, 0.4849125), (-0.5, 0.76858157, 0.811962), (-0.5, 1.1107185, -0.12768805)],
        }
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (1, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
    }

    def Mesh "MeshWithNormals"
    {
        float3[] extent.timeSamples = {
            1: [(0.45, -1, 0.45), (0.55, 1, 0.55)],
            2: [(0.45, -1, 0.44998384), (0.55, 0.9945397, 0.56193525)],
            3: [(0.45, -1, 0.44978154), (0.55, 0.979205, 0.5935197)],
            4: [(0.45, -1, 0.4490786), (0.55, 0.95522165, 0.63815486)],
            5: [(0.45, -1, 0.44761878), (0.55, 0.9241211, 0.68928087)],
            6: [(0.45, -1, 0.44535378), (0.55, 0.8883731, 0.7408139)],
            7: [(0.45, -1, 0.44251508), (0.55, 0.8516306, 0.78748834)],
            8: [(0.45, -1, 0.4396073), (0.55, 0.8186258, 0.8250055)],
            9: [(0.45, -1, 0.43732792), (0.55, 0.7947925, 0.8498843)],
            10: [(0.45, -1, 0.43642125), (0.55, 0.7856884, 0.85894454)],
        }
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [1, 4, 5, 0, 4, 8, 9, 5, 8, 10, 11, 9, 10, 6, 7, 11, 6, 2, 3, 7, 2, 1, 0, 3, 2, 6, 4, 1, 6, 10, 8, 4, 0, 5, 7, 3, 5, 9, 11, 7]
        normal3f[] normals = [(-1, -1, 1), (1, -1, 1), (1, -1, -1), (-1, -1, -1), (1, 0, 1), (-1, 0, 1), (1, 0, -1), (-1, 0, -1), (1, 1, 1), (-1, 1, 1), (1, 1, -1), (-1, 1, -1)] (
            interpolation = "vertex"
        )
        normal3f[] normals.timeSamples = {
            1: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, 0, 0.70710677), (-0.70710677, 0, 0.70710677), (0.70710677, 0, -0.70710677), (-0.70710677, 0, -0.70710677), (0.57735026, 0.57735026, 0.57735026), (-0.57735026, 0.57735026, 0.57735026), (0.57735026, 0.57735026, -0.57735026), (-0.57735026, 0.57735026, -0.57735026)],
            2: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.7071131, -0.0042337286, 0.70708776), (-0.7071131, -0.0042337286, 0.70708776), (0.7071131, 0.0042337286, -0.70708776), (-0.7071131, 0.0042337286, -0.70708776), (0.57735026, 0.5703953, 0.5842225), (-0.57735026, 0.5703953, 0.5842225), (0.57735026, 0.5842225, -0.5703953), (-0.57735026, 0.5842225, -0.5703953)],
            3: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70719266, -0.015577204, 0.70684934), (-0.70719266, -0.015577204, 0.70684934), (0.70719266, 0.015577204, -0.70684934), (-0.70719266, 0.015577204, -0.70684934), (0.57735026, 0.5513554, 0.6022242), (-0.57735026, 0.5513554, 0.6022242), (0.57735026, 0.6022242, -0.5513554), (-0.57735026, 0.6022242, -0.5513554)],
            4: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70746905, -0.031980142, 0.7060205), (-0.70746905, -0.031980142, 0.7060205), (0.70746905, 0.031980142, -0.7060205), (-0.70746905, 0.031980142, -0.7060205), (0.57735026, 0.52278936, 0.62718254), (-0.57735026, 0.52278936, 0.62718254), (0.57735026, 0.62718254, -0.52278936), (-0.57735026, 0.62718254, -0.52278936)],
            5: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70804405, -0.051369164, 0.70429736), (-0.70804405, -0.051369164, 0.70429736), (0.70804405, 0.051369164, -0.70429736), (-0.70804405, 0.051369164, -0.70429736), (0.57735026, 0.48746556, 0.6550145), (-0.57735026, 0.48746556, 0.6550145), (0.57735026, 0.6550145, -0.48746556), (-0.57735026, 0.6550145, -0.48746556)],
            6: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.7089391, -0.07166358, 0.7016193), (-0.7089391, -0.07166358, 0.7016193), (0.7089391, 0.07166358, -0.7016193), (-0.7089391, 0.07166358, -0.7016193), (0.57735026, 0.44870442, 0.6821518), (-0.57735026, 0.44870442, 0.6821518), (0.57735026, 0.68215173, -0.4487044), (-0.57735026, 0.68215173, -0.4487044)],
            7: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.7100656, -0.090811975, 0.698255), (-0.7100656, -0.090811975, 0.698255), (0.7100656, 0.090811975, -0.698255), (-0.7100656, 0.090811975, -0.698255), (0.57735026, 0.4104666, 0.70582145), (-0.57735026, 0.4104666, 0.70582145), (0.57735026, 0.70582145, -0.4104666), (-0.57735026, 0.70582145, -0.4104666)],
            8: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.7112251, -0.10682951, 0.6947995), (-0.7112251, -0.10682951, 0.6947995), (0.7112251, 0.10682951, -0.6947995), (-0.7112251, 0.10682951, -0.6947995), (0.57735026, 0.37724093, 0.72412425), (-0.57735026, 0.37724093, 0.72412425), (0.57735026, 0.72412425, -0.37724093), (-0.57735026, 0.72412425, -0.37724093)],
            9: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.71213806, -0.117809154, 0.69208413), (-0.71213806, -0.117809154, 0.69208413), (0.71213806, 0.117809154, -0.69208413), (-0.71213806, 0.117809154, -0.69208413), (0.57735026, 0.35381135, 0.7358561), (-0.57735026, 0.35381135, 0.7358561), (0.57735026, 0.7358561, -0.35381135), (-0.57735026, 0.7358561, -0.35381135)],
            10: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.7125021, -0.12188667, 0.69100237), (-0.7125021, -0.12188667, 0.69100237), (0.7125021, 0.12188667, -0.69100237), (-0.7125021, 0.12188667, -0.69100237), (0.57735026, 0.34497437, 0.7400401), (-0.57735026, 0.34497437, 0.7400401), (0.57735026, 0.7400401, -0.34497437), (-0.57735026, 0.7400401, -0.34497437)],
        }
        point3f[] points = [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, 0, 0.55), (0.45, 0, 0.55), (0.55, 0, 0.45), (0.45, 0, 0.45), (0.55, 1, 0.55), (0.45, 1, 0.55), (0.55, 1, 0.45), (0.45, 1, 0.45)]
        point3f[] points.timeSamples = {
            1: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, 0, 0.55), (0.45, 0, 0.55), (0.55, 0, 0.45), (0.45, 0, 0.45), (0.55, 1, 0.55), (0.45, 1, 0.55), (0.55, 1, 0.45), (0.45, 1, 0.45)],
            2: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.0032930386, 0.5499803), (0.45, -0.0032930386, 0.5499803), (0.55, -0.0026943043, 0.44998384), (0.45, -0.0026943043, 0.44998384), (0.55, 0.9933422, 0.56193525), (0.45, 0.9933422, 0.56193525), (0.55, 0.9945397, 0.4619424), (0.45, 0.9945397, 0.4619424)],
            3: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.01211475, 0.54973304), (0.45, -0.01211475, 0.54973304), (0.55, -0.009912068, 0.44978154), (0.45, -0.009912068, 0.44978154), (0.55, 0.97479963, 0.5935197), (0.45, 0.97479963, 0.5935197), (0.55, 0.979205, 0.49361676), (0.45, 0.979205, 0.49361676)],
            4: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.024861975, 0.54887384), (0.45, -0.024861975, 0.54887384), (0.55, -0.020341614, 0.4490786), (0.45, -0.020341614, 0.4490786), (0.55, 0.94618094, 0.63815486), (0.45, 0.94618094, 0.63815486), (0.55, 0.95522165, 0.5385644), (0.45, 0.95522165, 0.5385644)],
            5: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.039902944, 0.54708964), (0.45, -0.039902944, 0.54708964), (0.55, -0.03264786, 0.44761878), (0.45, -0.03264786, 0.44761878), (0.55, 0.90961087, 0.68928087), (0.45, 0.90961087, 0.68928087), (0.55, 0.9241211, 0.5903391), (0.45, 0.9241211, 0.5903391)],
            6: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.05559712, 0.5443213), (0.45, -0.05559712, 0.5443213), (0.55, -0.04548855, 0.44535378), (0.45, -0.04548855, 0.44535378), (0.55, 0.8681559, 0.7408139), (0.45, 0.8681559, 0.7408139), (0.55, 0.8883731, 0.6428789), (0.45, 0.8883731, 0.6428789)],
            7: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.070340805, 0.54085183), (0.45, -0.070340805, 0.54085183), (0.55, -0.057551567, 0.44251508), (0.45, -0.057551567, 0.44251508), (0.55, 0.8260521, 0.78748834), (0.45, 0.8260521, 0.78748834), (0.55, 0.8516306, 0.6908149), (0.45, 0.8516306, 0.6908149)],
            8: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.0826127, 0.53729784), (0.45, -0.0826127, 0.53729784), (0.55, -0.06759221, 0.4396073), (0.45, -0.06759221, 0.4396073), (0.55, 0.7885848, 0.8250055), (0.45, 0.7885848, 0.8250055), (0.55, 0.8186258, 0.7296244), (0.45, 0.8186258, 0.7296244)],
            9: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.090986624, 0.5345119), (0.45, -0.090986624, 0.5345119), (0.55, -0.07444359, 0.43732792), (0.45, -0.07444359, 0.43732792), (0.55, 0.7617065, 0.8498843), (0.45, 0.7617065, 0.8498843), (0.55, 0.7947925, 0.7555163), (0.45, 0.7947925, 0.7555163)],
            10: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.09408767, 0.53340375), (0.45, -0.09408767, 0.53340375), (0.55, -0.07698082, 0.43642125), (0.45, -0.07698082, 0.43642125), (0.55, 0.75147474, 0.85894454), (0.45, 0.75147474, 0.85894454), (0.55, 0.7856884, 0.7649795), (0.45, 0.7856884, 0.7649795)],
        }
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (1, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2] (
            elementSize = 2
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 0, 1, 0, 1, 0, 1, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 0, 1, 0, 1, 0, 1, 0] (
            elementSize = 2
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
    }

    def BasisCurves "Curves"
    {
        int[] curveVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        float3[] extent.timeSamples = {
            1: [(-0.55, -1.1, -0.55), (0.55, 1.0999999, 0.55)],
            2: [(-0.55, -1.1, -0.55), (0.55, 1.1065071, 0.5631327)],
            3: [(-0.55, -1.1, -0.55), (0.55, 1.1231614, 0.59792507)],
            4: [(-0.55, -1.1, -0.55), (0.55, 1.1452192, 0.6471956)],
            5: [(-0.55, -1.1, -0.55), (0.55, 1.1681643, 0.703791)],
            6: [(-0.55, -1.1, -0.55), (0.55, 1.1884793, 0.76103103)],
            7: [(-0.55, -1.1, -0.55), (0.55, 1.2040887, 0.8130668)],
            8: [(-0.55, -1.1, -0.55), (0.55, 1.2144165, 0.8550464)],
            9: [(-0.55, -1.1, -0.55), (0.55, 1.2200208, 0.8829703)],
            10: [(-0.55, -1.1, -0.55), (0.55, 1.2217903, 0.8931582)],
        }
        point3f[] points = [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.5), (-0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 1, 0.5), (-0.5, 1, 0.5), (-0.5, 1, 0.5), (0.5, 1, 0.5), (0.5, 1, -0.5), (-0.5, 1, -0.5), (-0.5, 1, -0.5), (0.5, 1, -0.5), (0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0, -0.5), (0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 0, -0.5), (0.5, 1, -0.5), (0.5, 1, 0.5), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, 0, 0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, 0.5), (-0.5, 1, 0.5), (-0.5, 1, -0.5)]
        point3f[] points.timeSamples = {
            1: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, 0, 0.55), (-0.55, 0, 0.55), (-0.55, 0, 0.55), (0.55, 0, 0.55), (0.55, 1.0999999, 0.55), (-0.55, 1.0999999, 0.55), (-0.55, 1.0999999, 0.55), (0.55, 1.0999999, 0.55), (0.55, 1.0999999, -0.55), (-0.55, 1.0999999, -0.55), (-0.55, 1.0999999, -0.55), (0.55, 1.0999999, -0.55), (0.55, 0, -0.55), (-0.55, 0, -0.55), (-0.55, 0, -0.55), (0.55, 0, -0.55), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0, -0.55), (0.55, 0, 0.55), (0.55, 0, 0.55), (0.55, 0, -0.55), (0.55, 1.0999999, -0.55), (0.55, 1.0999999, 0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, 0, 0.55), (-0.55, 0, -0.55), (-0.55, 0, -0.55), (-0.55, 0, 0.55), (-0.55, 1.0999999, 0.55), (-0.55, 1.0999999, -0.55)],
            2: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.0032930386, 0.5499803), (-0.55, -0.0032930386, 0.5499803), (-0.55, -0.0032930386, 0.5499803), (0.55, -0.0032930386, 0.5499803), (0.55, 1.0933349, 0.5631327), (-0.55, 1.0933349, 0.5631327), (-0.55, 1.0933349, 0.5631327), (0.55, 1.0933349, 0.5631327), (0.55, 1.1065071, -0.5367884), (-0.55, 1.1065071, -0.5367884), (-0.55, 1.1065071, -0.5367884), (0.55, 1.1065071, -0.5367884), (0.55, 0.0032930386, -0.5499803), (-0.55, 0.0032930386, -0.5499803), (-0.55, 0.0032930386, -0.5499803), (0.55, 0.0032930386, -0.5499803), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.0032930386, -0.5499803), (0.55, -0.0032930386, 0.5499803), (0.55, -0.0032930386, 0.5499803), (0.55, 0.0032930386, -0.5499803), (0.55, 1.1065071, -0.5367884), (0.55, 1.0933349, 0.5631327), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.0032930386, 0.5499803), (-0.55, 0.0032930386, -0.5499803), (-0.55, 0.0032930386, -0.5499803), (-0.55, -0.0032930386, 0.5499803), (-0.55, 1.0933349, 0.5631327), (-0.55, 1.1065071, -0.5367884)],
            3: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.01211475, 0.54973304), (-0.55, -0.01211475, 0.54973304), (-0.55, -0.01211475, 0.54973304), (0.55, -0.01211475, 0.54973304), (0.55, 1.0747025, 0.59792507), (-0.55, 1.0747025, 0.59792507), (-0.55, 1.0747025, 0.59792507), (0.55, 1.0747025, 0.59792507), (0.55, 1.1231614, -0.5010071), (-0.55, 1.1231614, -0.5010071), (-0.55, 1.1231614, -0.5010071), (0.55, 1.1231614, -0.5010071), (0.55, 0.01211475, -0.54973304), (-0.55, 0.01211475, -0.54973304), (-0.55, 0.01211475, -0.54973304), (0.55, 0.01211475, -0.54973304), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.01211475, -0.54973304), (0.55, -0.01211475, 0.54973304), (0.55, -0.01211475, 0.54973304), (0.55, 0.01211475, -0.54973304), (0.55, 1.1231614, -0.5010071), (0.55, 1.0747025, 0.59792507), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.01211475, 0.54973304), (-0.55, 0.01211475, -0.54973304), (-0.55, 0.01211475, -0.54973304), (-0.55, -0.01211475, 0.54973304), (-0.55, 1.0747025, 0.59792507), (-0.55, 1.1231614, -0.5010071)],
            4: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.024861975, 0.54887384), (-0.55, -0.024861975, 0.54887384), (-0.55, -0.024861975, 0.54887384), (0.55, -0.024861975, 0.54887384), (0.55, 1.0457714, 0.6471956), (-0.55, 1.0457714, 0.6471956), (-0.55, 1.0457714, 0.6471956), (0.55, 1.0457714, 0.6471956), (0.55, 1.1452192, -0.4482998), (-0.55, 1.1452192, -0.4482998), (-0.55, 1.1452192, -0.4482998), (0.55, 1.1452192, -0.4482998), (0.55, 0.024861975, -0.54887384), (-0.55, 0.024861975, -0.54887384), (-0.55, 0.024861975, -0.54887384), (0.55, 0.024861975, -0.54887384), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.024861975, -0.54887384), (0.55, -0.024861975, 0.54887384), (0.55, -0.024861975, 0.54887384), (0.55, 0.024861975, -0.54887384), (0.55, 1.1452192, -0.4482998), (0.55, 1.0457714, 0.6471956), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.024861975, 0.54887384), (-0.55, 0.024861975, -0.54887384), (-0.55, 0.024861975, -0.54887384), (-0.55, -0.024861975, 0.54887384), (-0.55, 1.0457714, 0.6471956), (-0.55, 1.1452192, -0.4482998)],
            5: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.039902944, 0.54708964), (-0.55, -0.039902944, 0.54708964), (-0.55, -0.039902944, 0.54708964), (0.55, -0.039902944, 0.54708964), (0.55, 1.0085524, 0.703791), (-0.55, 1.0085524, 0.703791), (-0.55, 1.0085524, 0.703791), (0.55, 1.0085524, 0.703791), (0.55, 1.1681643, -0.3845675), (-0.55, 1.1681643, -0.3845675), (-0.55, 1.1681643, -0.3845675), (0.55, 1.1681643, -0.3845675), (0.55, 0.039902944, -0.54708964), (-0.55, 0.039902944, -0.54708964), (-0.55, 0.039902944, -0.54708964), (0.55, 0.039902944, -0.54708964), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.039902944, -0.54708964), (0.55, -0.039902944, 0.54708964), (0.55, -0.039902944, 0.54708964), (0.55, 0.039902944, -0.54708964), (0.55, 1.1681643, -0.3845675), (0.55, 1.0085524, 0.703791), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.039902944, 0.54708964), (-0.55, 0.039902944, -0.54708964), (-0.55, 0.039902944, -0.54708964), (-0.55, -0.039902944, 0.54708964), (-0.55, 1.0085524, 0.703791), (-0.55, 1.1681643, -0.3845675)],
            6: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.05559712, 0.5443213), (-0.55, -0.05559712, 0.5443213), (-0.55, -0.05559712, 0.5443213), (0.55, -0.05559712, 0.5443213), (0.55, 0.96609086, 0.76103103), (-0.55, 0.96609086, 0.76103103), (-0.55, 0.96609086, 0.76103103), (0.55, 0.96609086, 0.76103103), (0.55, 1.1884793, -0.31625414), (-0.55, 1.1884793, -0.31625414), (-0.55, 1.1884793, -0.31625414), (0.55, 1.1884793, -0.31625414), (0.55, 0.05559712, -0.5443213), (-0.55, 0.05559712, -0.5443213), (-0.55, 0.05559712, -0.5443213), (0.55, 0.05559712, -0.5443213), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.05559712, -0.5443213), (0.55, -0.05559712, 0.5443213), (0.55, -0.05559712, 0.5443213), (0.55, 0.05559712, -0.5443213), (0.55, 1.1884793, -0.31625414), (0.55, 0.96609086, 0.76103103), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.05559712, 0.5443213), (-0.55, 0.05559712, -0.5443213), (-0.55, 0.05559712, -0.5443213), (-0.55, -0.05559712, 0.5443213), (-0.55, 0.96609086, 0.76103103), (-0.55, 1.1884793, -0.31625414)],
            7: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.070340805, 0.54085183), (-0.55, -0.070340805, 0.54085183), (-0.55, -0.070340805, 0.54085183), (0.55, -0.070340805, 0.54085183), (0.55, 0.92272544, 0.8130668), (-0.55, 0.92272544, 0.8130668), (-0.55, 0.92272544, 0.8130668), (0.55, 0.92272544, 0.8130668), (0.55, 1.2040887, -0.25034037), (-0.55, 1.2040887, -0.25034037), (-0.55, 1.2040887, -0.25034037), (0.55, 1.2040887, -0.25034037), (0.55, 0.070340805, -0.54085183), (-0.55, 0.070340805, -0.54085183), (-0.55, 0.070340805, -0.54085183), (0.55, 0.070340805, -0.54085183), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.070340805, -0.54085183), (0.55, -0.070340805, 0.54085183), (0.55, -0.070340805, 0.54085183), (0.55, 0.070340805, -0.54085183), (0.55, 1.2040887, -0.25034037), (0.55, 0.92272544, 0.8130668), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.070340805, 0.54085183), (-0.55, 0.070340805, -0.54085183), (-0.55, 0.070340805, -0.54085183), (-0.55, -0.070340805, 0.54085183), (-0.55, 0.92272544, 0.8130668), (-0.55, 1.2040887, -0.25034037)],
            8: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.0826127, 0.53729784), (-0.55, -0.0826127, 0.53729784), (-0.55, -0.0826127, 0.53729784), (0.55, -0.0826127, 0.53729784), (0.55, 0.88396573, 0.8550464), (-0.55, 0.88396573, 0.8550464), (-0.55, 0.88396573, 0.8550464), (0.55, 0.88396573, 0.8550464), (0.55, 1.2144165, -0.19414485), (-0.55, 1.2144165, -0.19414485), (-0.55, 1.2144165, -0.19414485), (0.55, 1.2144165, -0.19414485), (0.55, 0.0826127, -0.53729784), (-0.55, 0.0826127, -0.53729784), (-0.55, 0.0826127, -0.53729784), (0.55, 0.0826127, -0.53729784), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.0826127, -0.53729784), (0.55, -0.0826127, 0.53729784), (0.55, -0.0826127, 0.53729784), (0.55, 0.0826127, -0.53729784), (0.55, 1.2144165, -0.19414485), (0.55, 0.88396573, 0.8550464), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.0826127, 0.53729784), (-0.55, 0.0826127, -0.53729784), (-0.55, 0.0826127, -0.53729784), (-0.55, -0.0826127, 0.53729784), (-0.55, 0.88396573, 0.8550464), (-0.55, 1.2144165, -0.19414485)],
            9: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.090986624, 0.5345119), (-0.55, -0.090986624, 0.5345119), (-0.55, -0.090986624, 0.5345119), (0.55, -0.090986624, 0.5345119), (0.55, 0.85607433, 0.8829703), (-0.55, 0.85607433, 0.8829703), (-0.55, 0.85607433, 0.8829703), (0.55, 0.85607433, 0.8829703), (0.55, 1.2200208, -0.1550774), (-0.55, 1.2200208, -0.1550774), (-0.55, 1.2200208, -0.1550774), (0.55, 1.2200208, -0.1550774), (0.55, 0.090986624, -0.5345119), (-0.55, 0.090986624, -0.5345119), (-0.55, 0.090986624, -0.5345119), (0.55, 0.090986624, -0.5345119), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.090986624, -0.5345119), (0.55, -0.090986624, 0.5345119), (0.55, -0.090986624, 0.5345119), (0.55, 0.090986624, -0.5345119), (0.55, 1.2200208, -0.1550774), (0.55, 0.85607433, 0.8829703), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.090986624, 0.5345119), (-0.55, 0.090986624, -0.5345119), (-0.55, 0.090986624, -0.5345119), (-0.55, -0.090986624, 0.5345119), (-0.55, 0.85607433, 0.8829703), (-0.55, 1.2200208, -0.1550774)],
            10: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.09408767, 0.53340375), (-0.55, -0.09408767, 0.53340375), (-0.55, -0.09408767, 0.53340375), (0.55, -0.09408767, 0.53340375), (0.55, 0.8454396, 0.8931582), (-0.55, 0.8454396, 0.8931582), (-0.55, 0.8454396, 0.8931582), (0.55, 0.8454396, 0.8931582), (0.55, 1.2217903, -0.1404569), (-0.55, 1.2217903, -0.1404569), (-0.55, 1.2217903, -0.1404569), (0.55, 1.2217903, -0.1404569), (0.55, 0.09408767, -0.53340375), (-0.55, 0.09408767, -0.53340375), (-0.55, 0.09408767, -0.53340375), (0.55, 0.09408767, -0.53340375), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.09408767, -0.53340375), (0.55, -0.09408767, 0.53340375), (0.55, -0.09408767, 0.53340375), (0.55, 0.09408767, -0.53340375), (0.55, 1.2217903, -0.1404569), (0.55, 0.8454396, 0.8931582), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.09408767, 0.53340375), (-0.55, 0.09408767, -0.53340375), (-0.55, 0.09408767, -0.53340375), (-0.55, -0.09408767, 0.53340375), (-0.55, 0.8454396, 0.8931582), (-0.55, 1.2217903, -0.1404569)],
        }
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 1.1, 0), (1.1, 0, 0, 0), (0, 1.1, 0, 0), (1, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
    }

    def Sphere "Sphere"
    {
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 0.1, 0), (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0.5, 0.5, 1) )
        int[] primvars:skel:jointIndices = [0] (
            elementSize = 1
            interpolation = "constant"
        )
        float[] primvars:skel:jointWeights = [1] (
            elementSize = 1
            interpolation = "constant"
        )
        matrix4d xformOp:transform.timeSamples = {
            1: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            2: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            3: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            4: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            5: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            6: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            7: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            8: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            9: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            10: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Cube "Cube"
    {
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 0.1, 0), (0.1, 0, 0, 0), (0, 0.1, 0, 0), (1, 0.5, 0.5, 1) )
        int[] primvars:skel:jointIndices = [0, 1] (
            elementSize = 2
            interpolation = "constant"
        )
        float[] primvars:skel:jointWeights = [0.5, 0.5] (
            elementSize = 2
            interpolation = "constant"
        )
        uniform token[] skel:joints = ["joint1", "joint1/joint2"]
        matrix4d xformOp:transform.timeSamples = {
            1: ( (0.10000002384185791, 0, 0, 0), (0, 0.10000002384185791, 0, 0), (0, 0, 0.10000002384185791, 0), (0.5, 0, 0.5, 1) ),
            2: ( (0.10000002384185791, 0, 0, 0), (0, 0.09999644011259079, 0.0005987286567687988, 0), (0, -0.0005987344775348902, 0.09999644756317139, 0), (0.5, -0.0029936714563518763, 0.4999820590019226, 1) ),
            3: ( (0.10000002384185791, 0, 0, 0), (0, 0.09995148330926895, 0.0022026896476745605, 0), (0, -0.0022026821970939636, 0.09995150566101074, 0), (0.5, -0.011013409122824669, 0.4997572898864746, 1) ),
            4: ( (0.10000002384185791, 0, 0, 0), (0, 0.09979526698589325, 0.00452035665512085, 0), (0, -0.004520360380411148, 0.09979522228240967, 0), (0.5, -0.022601794451475143, 0.4989762306213379, 1) ),
            5: ( (0.10000002384185791, 0, 0, 0), (0, 0.09947086125612259, 0.007255077362060547, 0), (0, -0.007255081087350845, 0.09947085380554199, 0), (0.5, -0.03627540171146393, 0.4973542094230652, 1) ),
            6: ( (0.10000002384185791, 0, 0, 0), (0, 0.0989675298333168, 0.010108590126037598, 0), (0, -0.010108567774295807, 0.0989675521850586, 0), (0.5, -0.050542835146188736, 0.49483752250671387, 1) ),
            7: ( (0.10000002384185791, 0, 0, 0), (0, 0.09833671152591705, 0.012789249420166016, 0), (0, -0.012789241969585419, 0.09833675622940063, 0), (0.5, -0.0639461874961853, 0.4916834235191345, 1) ),
            8: ( (0.10000002384185791, 0, 0, 0), (0, 0.09769053757190704, 0.015020489692687988, 0), (0, -0.015020497143268585, 0.09769052267074585, 0), (0.5, -0.07510245591402054, 0.4884525537490845, 1) ),
            9: ( (0.10000002384185791, 0, 0, 0), (0, 0.09718400239944458, 0.016543060541152954, 0), (0, -0.01654302328824997, 0.09718397259712219, 0), (0.5, -0.08271510899066925, 0.48591992259025574, 1) ),
            10: ( (0.10000002384185791, 0, 0, 0), (0, 0.09698252379894257, 0.01710689067840576, 0), (0, -0.017106853425502777, 0.09698253870010376, 0), (0.5, -0.0855342447757721, 0.4849125146865845, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Cylinder "Cylinder"
    {
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 0.1, 0), (0.1, 0, 0, 0), (0, 0.1, 0, 0), (2, 0.5, 0.5, 1) )
        int[] primvars:skel:jointIndices = [0] (
            elementSize = 1
            interpolation = "constant"
        )
        float[] primvars:skel:jointWeights = [1] (
            elementSize = 1
            interpolation = "constant"
        )
        uniform token[] skel:joints = ["joint1/joint2/joint3"]
        matrix4d xformOp:transform.timeSamples = {
            1: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, 1, 0.5, 1) ),
            2: ( (0.1, 0, 0, 0), (0, 0.09999282956123352, 0.0011974685825407506, 0), (0, -0.0011974685825407506, 0.09999282956123352, 0), (0.5, 0.9939409526996315, 0.5119388336315751, 1) ),
            3: ( (0.1, 0, 0, 0), (0, 0.09990291595458985, 0.004405363649129868, 0), (0, -0.004405363649129868, 0.09990291595458985, 0), (0.5, 0.9770023413002491, 0.5435682162642479, 1) ),
            4: ( (0.1, 0, 0, 0), (0, 0.09959048628807068, 0.009040717780590058, 0), (0, -0.009040717780590058, 0.09959048628807068, 0), (0.5, 0.9507012739777565, 0.588359609246254, 1) ),
            5: ( (0.1, 0, 0, 0), (0, 0.0989416778087616, 0.014510160684585572, 0), (0, -0.014510160684585572, 0.0989416778087616, 0), (0.5, 0.9168659746646881, 0.6398099958896637, 1) ),
            6: ( (0.1, 0, 0, 0), (0, 0.09793501496315003, 0.020217134058475496, 0), (0, -0.020217134058475496, 0.09793501496315003, 0), (0.5, 0.8782644793391228, 0.6918464154005051, 1) ),
            7: ( (0.1, 0, 0, 0), (0, 0.09667337536811829, 0.025578474998474123, 0), (0, -0.025578474998474123, 0.09667337536811829, 0), (0.5, 0.8388413786888123, 0.7391516268253326, 1) ),
            8: ( (0.1, 0, 0, 0), (0, 0.09538102149963379, 0.030040982365608218, 0), (0, -0.030040982365608218, 0.09538102149963379, 0), (0.5, 0.8036053031682968, 0.7773149311542511, 1) ),
            9: ( (0.1, 0, 0, 0), (0, 0.0943679690361023, 0.033086043596267704, 0), (0, -0.033086043596267704, 0.0943679690361023, 0), (0.5, 0.7782494723796844, 0.8027002811431885, 1) ),
            10: ( (0.1, 0, 0, 0), (0, 0.0939650058746338, 0.034213697910308837, 0), (0, -0.034213697910308837, 0.0939650058746338, 0), (0.5, 0.7685815691947937, 0.8119620084762573, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

