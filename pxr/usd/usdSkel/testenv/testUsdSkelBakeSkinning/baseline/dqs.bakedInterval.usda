#usda 1.0
(
    endTimeCode = 30
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "Root" (
    prepend apiSchemas = ["SkelBindingAPI"]
    kind = "component"
)
{
    float3[] extentsHint.timeSamples = {
        1: [(-0.55, -1.1, -0.55), (1.1500001, 1.1, 0.6)],
        2: [(-0.55, -1.1, -0.55), (1.1500001, 1.1065071, 0.61312914)],
        3: [(-0.55, -1.1, -0.55), (1.1500001, 1.1231616, 0.6478765)],
        4: [(-0.55, -1.1, -0.55), (1.1500001, 1.1452192, 0.6969908)],
        5: [(-0.55, -1.1, -0.55), (1.1500001, 1.1681643, 0.7532618)],
        6: [(-0.55, -1.1, -0.55), (1.1500001, 1.1884793, 0.8099986)],
        7: [(-0.55, -1.1, -0.55), (1.1500001, 1.2040887, 0.86140347)],
        8: [(-0.55, -1.1, -0.55), (1.1500001, 1.2144166, 0.90273696)],
        9: [(-0.55, -1.1, -0.55), (1.1500001, 1.2200208, 0.9301543)],
        10: [(-0.55, -1.1, -0.55), (1.1500001, 1.2217904, 0.9401407)],
    }
    uniform token primvars:skel:skinningMethod = "dualQuaternion"
    rel skel:skeleton = </Root/Skeleton>

    def Skeleton "Skeleton" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, 0, 1) ), ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (2, 0, 0, 1) )]
        uniform token[] joints = ["joint1", "joint1/joint2", "joint1/joint2/joint3"]
        uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, 0, 1) ), ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (1, 0, 0, 1) )]
        rel skel:animationSource = </Root/Skeleton/Animation>

        def SkelAnimation "Animation"
        {
            float3[] extent.timeSamples = {
                1: [(-8.881784e-16, -1, 0), (0, 1, 4.440892e-16)],
                2: [(-8.8548644e-16, -1, 0), (0, 0.99992824, 0.011980047)],
                3: [(-8.77966e-16, -1, 0), (0, 0.9990293, 0.04405114)],
                4: [(-8.6628537e-16, -1, 0), (0, 0.99590486, 0.0904073)],
                5: [(-8.512596e-16, -1, 0), (0, 0.98941684, 0.14510126)],
                6: [(-8.341171e-16, -1, 0), (0, 0.97935027, 0.20217088)],
                7: [(-8.1660954e-16, -1, 0), (0, 0.9667337, 0.25578493)],
                8: [(-8.0096155e-16, -1, 0), (0, 0.95381016, 0.3004101)],
                9: [(-7.8970147e-16, -1, 0), (0, 0.94367975, 0.3308602)],
                10: [(-7.8540797e-16, -1, 0), (0, 0.93965006, 0.34213713)],
                11: [(-0.008673679, -1, 0), (0, 0.9396149, 0.34212375)],
                12: [(-0.032211367, -1, 0), (0, 0.9391626, 0.34195903)],
                13: [(-0.06686227, -1, 0), (0, 0.93754745, 0.34137106)],
                14: [(-0.10882605, -1, 0), (0, 0.9340696, 0.34010422)],
                15: [(-0.15427072, -1, 0), (0, 0.9284015, 0.33804023)],
                16: [(-0.19939104, -1, 0), (0, 0.9207824, 0.33526555)],
                17: [(-0.24048574, -1, 0), (0, 0.91207445, 0.33209455)],
                18: [(-0.2740113, -1, 0), (0, 0.903687, 0.3290404)],
                19: [(-0.2965753, -1, 0), (0, 0.8973754, 0.32674214)],
                20: [(-0.30484772, -1, 0), (0, 0.89492446, 0.3258497)],
                21: [(-0.30484772, -1, 0), (0, 0.89492446, 0.3258497)],
                22: [(-0.30484763, -1, 0), (0, 0.8949245, 0.32584968)],
                23: [(-0.30484766, -1, 0), (0, 0.8949245, 0.3258497)],
                24: [(-0.30484772, -1, 0), (0, 0.89492446, 0.32584974)],
                25: [(-0.3048477, -1, 0), (0, 0.8949245, 0.3258497)],
                26: [(-0.3048477, -1, 0), (0, 0.8949245, 0.3258497)],
                27: [(-0.30484763, -1, 0), (0, 0.8949245, 0.32584968)],
                28: [(-0.30484766, -1, 0), (0, 0.8949245, 0.32584968)],
                29: [(-0.30484766, -1, 0), (0, 0.8949245, 0.32584968)],
                30: [(-0.30484766, -1, 0), (0, 0.8949245, 0.3258497)],
            }
            uniform token[] joints = ["joint1", "joint1/joint2", "joint1/joint2/joint3"]
            quatf[] rotations.timeSamples = {
                1: [(0.5, 0.5, 0.5, 0.5), (1, 0, 0, 0), (0.5, -0.5, -0.5, -0.5)],
                2: [(0.5, 0.5, 0.5, 0.5), (0.99998206, 0, 0, 0.0059874505), (0.5, -0.5, -0.5, -0.5)],
                3: [(0.5, 0.5, 0.5, 0.5), (0.9997573, 0, 0, 0.022032166), (0.5, -0.5, -0.5, -0.5)],
                4: [(0.5, 0.5, 0.5, 0.5), (0.9989757, 0, 0, 0.04524994), (0.5, -0.5, -0.5, -0.5)],
                5: [(0.5, 0.5, 0.5, 0.5), (0.9973507, 0, 0, 0.07274352), (0.5, -0.5, -0.5, -0.5)],
                6: [(0.5, 0.5, 0.5, 0.5), (0.9948242, 0, 0, 0.10161159), (0.5, -0.5, -0.5, -0.5)],
                7: [(0.5, 0.5, 0.5, 0.5), (0.99164855, 0, 0, 0.12896946), (0.5, -0.5, -0.5, -0.5)],
                8: [(0.5, 0.5, 0.5, 0.5), (0.9883851, 0, 0, 0.15197003), (0.5, -0.5, -0.5, -0.5)],
                9: [(0.5, 0.5, 0.5, 0.5), (0.9858194, 0, 0, 0.16780986), (0.5, -0.5, -0.5, -0.5)],
                10: [(0.5, 0.5, 0.5, 0.5), (0.98479694, 0, 0, 0.1737094), (0.5, -0.5, -0.5, -0.5)],
                11: [(0.5, 0.5, 0.5, 0.5), (0.9847693, -0.0060739038, 0.0033323904, 0.17372827), (0.5, -0.5, -0.5, -0.5)],
                12: [(0.5, 0.5, 0.5, 0.5), (0.98440933, -0.022794377, 0.012332357, 0.17397308), (0.5, -0.5, -0.5, -0.5)],
                13: [(0.5, 0.5, 0.5, 0.5), (0.98309743, -0.047886964, 0.025488343, 0.17486162), (0.5, -0.5, -0.5, -0.5)],
                14: [(0.5, 0.5, 0.5, 0.5), (0.98019844, -0.07903047, 0.041256294, 0.17681383), (0.5, -0.5, -0.5, -0.5)],
                15: [(0.5, 0.5, 0.5, 0.5), (0.9753132, -0.11386365, 0.058064535, 0.18007703), (0.5, -0.5, -0.5, -0.5)],
                16: [(0.5, 0.5, 0.5, 0.5), (0.9684434, -0.15002865, 0.07434445, 0.18461232), (0.5, -0.5, -0.5, -0.5)],
                17: [(0.5, 0.5, 0.5, 0.5), (0.9600648, -0.18523708, 0.08857696, 0.1900445), (0.5, -0.5, -0.5, -0.5)],
                18: [(0.5, 0.5, 0.5, 0.5), (0.9511102, -0.21733138, 0.09933574, 0.19567554), (0.5, -0.5, -0.5, -0.5)],
                19: [(0.5, 0.5, 0.5, 0.5), (0.9428679, -0.24431108, 0.10530581, 0.2005567), (0.5, -0.5, -0.5, -0.5)],
                20: [(0.5, 0.5, 0.5, 0.5), (0.93680716, -0.26430017, 0.10526084, 0.20361213), (0.5, -0.5, -0.5, -0.5)],
                21: [(0.5, 0.5, 0.5, 0.5), (0.9323757, -0.27953127, 0.10192881, 0.20530044), (0.5, -0.5, -0.5, -0.5)],
                22: [(0.5, 0.5, 0.5, 0.5), (0.9280986, -0.2934199, 0.09885244, 0.20679928), (0.5, -0.5, -0.5, -0.5)],
                23: [(0.5, 0.5, 0.5, 0.5), (0.9240588, -0.30590457, 0.09605568, 0.20811309), (0.5, -0.5, -0.5, -0.5)],
                24: [(0.5, 0.5, 0.5, 0.5), (0.9203373, -0.31692496, 0.093561925, 0.20924607), (0.5, -0.5, -0.5, -0.5)],
                25: [(0.5, 0.5, 0.5, 0.5), (0.9170122, -0.32642126, 0.09139402, 0.21020201), (0.5, -0.5, -0.5, -0.5)],
                26: [(0.5, 0.5, 0.5, 0.5), (0.9141572, -0.33433342, 0.08957415, 0.21098393), (0.5, -0.5, -0.5, -0.5)],
                27: [(0.5, 0.5, 0.5, 0.5), (0.9118408, -0.34060043, 0.08812382, 0.2115938), (0.5, -0.5, -0.5, -0.5)],
                28: [(0.5, 0.5, 0.5, 0.5), (0.9101248, -0.34515962, 0.08706377, 0.21203218), (0.5, -0.5, -0.5, -0.5)],
                29: [(0.5, 0.5, 0.5, 0.5), (0.9090633, -0.34794572, 0.0864139, 0.21229787), (0.5, -0.5, -0.5, -0.5)],
                30: [(0.5, 0.5, 0.5, 0.5), (0.9087012, -0.34889027, 0.08619322, 0.21238756), (0.5, -0.5, -0.5, -0.5)],
            }
            half3[] scales.timeSamples = {
                1: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                2: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                3: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                4: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                5: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                6: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                7: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                8: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                9: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                10: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                11: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                12: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                13: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                14: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                15: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                16: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                17: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                18: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                19: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                20: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                21: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                22: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                23: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                24: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                25: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                26: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                27: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                28: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                29: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                30: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
            }
            float3[] translations.timeSamples = {
                1: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                2: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                3: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                4: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                5: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                6: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                7: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                8: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                9: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                10: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                11: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                12: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                13: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                14: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                15: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                16: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                17: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                18: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                19: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                20: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                21: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                22: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                23: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                24: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                25: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                26: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                27: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                28: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                29: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
                30: [(0, -1, 0), (1, 0, 0), (1, 0, 0)],
            }
        }
    }

    def Mesh "Mesh" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            1: [(-0.5, -1, -0.5), (0.5, 1, 0.5)],
            2: [(-0.5, -1, -0.5), (0.5, 1.0059156, 0.5119388)],
            3: [(-0.5, -1, -0.5), (0.5, 1.0210559, 0.5435682)],
            4: [(-0.5, -1, -0.5), (0.5, 1.0411085, 0.58835965)],
            5: [(-0.5, -1, -0.5), (0.5, 1.0619675, 0.63980997)],
            6: [(-0.5, -1, -0.5), (0.5, 1.0804359, 0.69184643)],
            7: [(-0.5, -1, -0.5), (0.5, 1.0946262, 0.73915166)],
            8: [(-0.5, -1, -0.5), (0.5, 1.1040151, 0.77731496)],
            9: [(-0.5, -1, -0.5), (0.5, 1.1091099, 0.8027003)],
            10: [(-0.5, -1, -0.5), (0.5, 1.1107186, 0.81196207)],
        }
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
        point3f[] points = [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.5), (-0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 1, 0.5), (-0.5, 1, 0.5), (-0.5, 1, 0.5), (0.5, 1, 0.5), (0.5, 1, -0.5), (-0.5, 1, -0.5), (-0.5, 1, -0.5), (0.5, 1, -0.5), (0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0, -0.5), (0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 0, -0.5), (0.5, 1, -0.5), (0.5, 1, 0.5), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, 0, 0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, 0.5), (-0.5, 1, 0.5), (-0.5, 1, -0.5)]
        point3f[] points.timeSamples = {
            1: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.5), (-0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 1, 0.5), (-0.5, 1, 0.5), (-0.5, 1, 0.5), (0.5, 1, 0.5), (0.5, 1, -0.5), (-0.5, 1, -0.5), (-0.5, 1, -0.5), (0.5, 1, -0.5), (0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0, -0.5), (0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 0, -0.5), (0.5, 1, -0.5), (0.5, 1, 0.5), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, 0, 0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, 0.5), (-0.5, 1, 0.5), (-0.5, 1, -0.5)],
            2: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.0029937224, 0.49999103), (-0.5, -0.0029937224, 0.49999103), (-0.5, -0.0029937224, 0.49999103), (0.5, -0.0029937224, 0.49999103), (0.5, 0.99394095, 0.5119388), (-0.5, 0.99394095, 0.5119388), (-0.5, 0.99394095, 0.5119388), (0.5, 0.99394095, 0.5119388), (0.5, 1.0059156, -0.48798946), (-0.5, 1.0059156, -0.48798946), (-0.5, 1.0059156, -0.48798946), (0.5, 1.0059156, -0.48798946), (0.5, 0.0029937278, -0.49999103), (-0.5, 0.0029937278, -0.49999103), (-0.5, 0.0029937278, -0.49999103), (0.5, 0.0029937278, -0.49999103), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.0029937278, -0.49999103), (0.5, -0.0029937224, 0.49999103), (0.5, -0.0029937224, 0.49999103), (0.5, 0.0029937278, -0.49999103), (0.5, 1.0059156, -0.48798946), (0.5, 0.99394095, 0.5119388), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.0029937224, 0.49999103), (-0.5, 0.0029937278, -0.49999103), (-0.5, 0.0029937278, -0.49999103), (-0.5, -0.0029937224, 0.49999103), (-0.5, 0.99394095, 0.5119388), (-0.5, 1.0059156, -0.48798946)],
            3: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.011016079, 0.49987864), (-0.5, -0.011016079, 0.49987864), (-0.5, -0.011016079, 0.49987864), (0.5, -0.011016079, 0.49987864), (0.5, 0.9770024, 0.5435682), (-0.5, 0.9770024, 0.5435682), (-0.5, 0.9770024, 0.5435682), (0.5, 0.9770024, 0.5435682), (0.5, 1.0210559, -0.45546094), (-0.5, 1.0210559, -0.45546094), (-0.5, 1.0210559, -0.45546094), (0.5, 1.0210559, -0.45546094), (0.5, 0.011016087, -0.49987864), (-0.5, 0.011016087, -0.49987864), (-0.5, 0.011016087, -0.49987864), (0.5, 0.011016087, -0.49987864), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.011016087, -0.49987864), (0.5, -0.011016079, 0.49987864), (0.5, -0.011016079, 0.49987864), (0.5, 0.011016087, -0.49987864), (0.5, 1.0210559, -0.45546094), (0.5, 0.9770024, 0.5435682), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.011016079, 0.49987864), (-0.5, 0.011016087, -0.49987864), (-0.5, 0.011016087, -0.49987864), (-0.5, -0.011016079, 0.49987864), (-0.5, 0.9770024, 0.5435682), (-0.5, 1.0210559, -0.45546094)],
            4: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.022624958, 0.49948785), (-0.5, -0.022624958, 0.49948785), (-0.5, -0.022624958, 0.49948785), (0.5, -0.022624958, 0.49948785), (0.5, 0.9507013, 0.58835965), (-0.5, 0.9507013, 0.58835965), (-0.5, 0.9507013, 0.58835965), (0.5, 0.9507013, 0.58835965), (0.5, 1.0411085, -0.40754527), (-0.5, 1.0411085, -0.40754527), (-0.5, 1.0411085, -0.40754527), (0.5, 1.0411085, -0.40754527), (0.5, 0.02262498, -0.49948785), (-0.5, 0.02262498, -0.49948785), (-0.5, 0.02262498, -0.49948785), (0.5, 0.02262498, -0.49948785), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.02262498, -0.49948785), (0.5, -0.022624958, 0.49948785), (0.5, -0.022624958, 0.49948785), (0.5, 0.02262498, -0.49948785), (0.5, 1.0411085, -0.40754527), (0.5, 0.9507013, 0.58835965), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.022624958, 0.49948785), (-0.5, 0.02262498, -0.49948785), (-0.5, 0.02262498, -0.49948785), (-0.5, -0.022624958, 0.49948785), (-0.5, 0.9507013, 0.58835965), (-0.5, 1.0411085, -0.40754527)],
            5: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.03637177, 0.49867535), (-0.5, -0.03637177, 0.49867535), (-0.5, -0.03637177, 0.49867535), (0.5, -0.03637177, 0.49867535), (0.5, 0.91686594, 0.63980997), (-0.5, 0.91686594, 0.63980997), (-0.5, 0.91686594, 0.63980997), (0.5, 0.91686594, 0.63980997), (0.5, 1.0619675, -0.34960678), (-0.5, 1.0619675, -0.34960678), (-0.5, 1.0619675, -0.34960678), (0.5, 1.0619675, -0.34960678), (0.5, 0.036371753, -0.49867535), (-0.5, 0.036371753, -0.49867535), (-0.5, 0.036371753, -0.49867535), (0.5, 0.036371753, -0.49867535), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.036371753, -0.49867535), (0.5, -0.03637177, 0.49867535), (0.5, -0.03637177, 0.49867535), (0.5, 0.036371753, -0.49867535), (0.5, 1.0619675, -0.34960678), (0.5, 0.91686594, 0.63980997), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.03637177, 0.49867535), (-0.5, 0.036371753, -0.49867535), (-0.5, 0.036371753, -0.49867535), (-0.5, -0.03637177, 0.49867535), (-0.5, 0.91686594, 0.63980997), (-0.5, 1.0619675, -0.34960678)],
            6: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.050805792, 0.4974121), (-0.5, -0.050805792, 0.4974121), (-0.5, -0.050805792, 0.4974121), (0.5, -0.050805792, 0.4974121), (0.5, 0.8782645, 0.69184643), (-0.5, 0.8782645, 0.69184643), (-0.5, 0.8782645, 0.69184643), (0.5, 0.8782645, 0.69184643), (0.5, 1.0804359, -0.28750375), (-0.5, 1.0804359, -0.28750375), (-0.5, 1.0804359, -0.28750375), (0.5, 1.0804359, -0.28750375), (0.5, 0.050805807, -0.4974121), (-0.5, 0.050805807, -0.4974121), (-0.5, 0.050805807, -0.4974121), (0.5, 0.050805807, -0.4974121), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.050805807, -0.4974121), (0.5, -0.050805792, 0.4974121), (0.5, -0.050805792, 0.4974121), (0.5, 0.050805807, -0.4974121), (0.5, 1.0804359, -0.28750375), (0.5, 0.8782645, 0.69184643), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.050805792, 0.4974121), (-0.5, 0.050805807, -0.4974121), (-0.5, 0.050805807, -0.4974121), (-0.5, -0.050805792, 0.4974121), (-0.5, 0.8782645, 0.69184643), (-0.5, 1.0804359, -0.28750375)],
            7: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.06448472, 0.49582428), (-0.5, -0.06448472, 0.49582428), (-0.5, -0.06448472, 0.49582428), (0.5, -0.06448472, 0.49582428), (0.5, 0.8388414, 0.73915166), (-0.5, 0.8388414, 0.73915166), (-0.5, 0.8388414, 0.73915166), (0.5, 0.8388414, 0.73915166), (0.5, 1.0946262, -0.22758213), (-0.5, 1.0946262, -0.22758213), (-0.5, 1.0946262, -0.22758213), (0.5, 1.0946262, -0.22758213), (0.5, 0.06448473, -0.49582428), (-0.5, 0.06448473, -0.49582428), (-0.5, 0.06448473, -0.49582428), (0.5, 0.06448473, -0.49582428), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.06448473, -0.49582428), (0.5, -0.06448472, 0.49582428), (0.5, -0.06448472, 0.49582428), (0.5, 0.06448473, -0.49582428), (0.5, 1.0946262, -0.22758213), (0.5, 0.8388414, 0.73915166), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.06448472, 0.49582428), (-0.5, 0.06448473, -0.49582428), (-0.5, 0.06448473, -0.49582428), (-0.5, -0.06448472, 0.49582428), (-0.5, 0.8388414, 0.73915166), (-0.5, 1.0946262, -0.22758213)],
            8: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.075985014, 0.49419254), (-0.5, -0.075985014, 0.49419254), (-0.5, -0.075985014, 0.49419254), (0.5, -0.075985014, 0.49419254), (0.5, 0.8036053, 0.77731496), (-0.5, 0.8036053, 0.77731496), (-0.5, 0.8036053, 0.77731496), (0.5, 0.8036053, 0.77731496), (0.5, 1.1040151, -0.17649528), (-0.5, 1.1040151, -0.17649528), (-0.5, 1.1040151, -0.17649528), (0.5, 1.1040151, -0.17649528), (0.5, 0.075985014, -0.49419254), (-0.5, 0.075985014, -0.49419254), (-0.5, 0.075985014, -0.49419254), (0.5, 0.075985014, -0.49419254), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.075985014, -0.49419254), (0.5, -0.075985014, 0.49419254), (0.5, -0.075985014, 0.49419254), (0.5, 0.075985014, -0.49419254), (0.5, 1.1040151, -0.17649528), (0.5, 0.8036053, 0.77731496), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.075985014, 0.49419254), (-0.5, 0.075985014, -0.49419254), (-0.5, 0.075985014, -0.49419254), (-0.5, -0.075985014, 0.49419254), (-0.5, 0.8036053, 0.77731496), (-0.5, 1.1040151, -0.17649528)],
            9: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.08390493, 0.4929097), (-0.5, -0.08390493, 0.4929097), (-0.5, -0.08390493, 0.4929097), (0.5, -0.08390493, 0.4929097), (0.5, 0.7782495, 0.8027003), (-0.5, 0.7782495, 0.8027003), (-0.5, 0.7782495, 0.8027003), (0.5, 0.7782495, 0.8027003), (0.5, 1.1091099, -0.14097941), (-0.5, 1.1091099, -0.14097941), (-0.5, 1.1091099, -0.14097941), (0.5, 1.1091099, -0.14097941), (0.5, 0.08390494, -0.4929097), (-0.5, 0.08390494, -0.4929097), (-0.5, 0.08390494, -0.4929097), (0.5, 0.08390494, -0.4929097), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.08390494, -0.4929097), (0.5, -0.08390493, 0.4929097), (0.5, -0.08390493, 0.4929097), (0.5, 0.08390494, -0.4929097), (0.5, 1.1091099, -0.14097941), (0.5, 0.7782495, 0.8027003), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.08390493, 0.4929097), (-0.5, 0.08390494, -0.4929097), (-0.5, 0.08390494, -0.4929097), (-0.5, -0.08390493, 0.4929097), (-0.5, 0.7782495, 0.8027003), (-0.5, 1.1091099, -0.14097941)],
            10: [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -0.08685469, 0.49239847), (-0.5, -0.08685469, 0.49239847), (-0.5, -0.08685469, 0.49239847), (0.5, -0.08685469, 0.49239847), (0.5, 0.7685816, 0.81196207), (-0.5, 0.7685816, 0.81196207), (-0.5, 0.7685816, 0.81196207), (0.5, 0.7685816, 0.81196207), (0.5, 1.1107186, -0.12768805), (-0.5, 1.1107186, -0.12768805), (-0.5, 1.1107186, -0.12768805), (0.5, 1.1107186, -0.12768805), (0.5, 0.08685472, -0.49239847), (-0.5, 0.08685472, -0.49239847), (-0.5, 0.08685472, -0.49239847), (0.5, 0.08685472, -0.49239847), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0.08685472, -0.49239847), (0.5, -0.08685469, 0.49239847), (0.5, -0.08685469, 0.49239847), (0.5, 0.08685472, -0.49239847), (0.5, 1.1107186, -0.12768805), (0.5, 0.7685816, 0.81196207), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, -0.08685469, 0.49239847), (-0.5, 0.08685472, -0.49239847), (-0.5, 0.08685472, -0.49239847), (-0.5, -0.08685469, 0.49239847), (-0.5, 0.7685816, 0.81196207), (-0.5, 1.1107186, -0.12768805)],
        }
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (1, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
    }

    def Mesh "MeshWithFaceVaryingNormals" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            1: [(1.05, -1, 0.45), (1.1500001, 1, 0.55)],
            2: [(1.05, -1, 0.4499919), (1.1500001, 0.9945397, 0.56193525)],
            3: [(1.05, -1, 0.44989076), (1.1500001, 0.979205, 0.5935197)],
            4: [(1.05, -1, 0.44953907), (1.1500001, 0.95522165, 0.63815486)],
            5: [(1.05, -1, 0.4488078), (1.1500001, 0.924121, 0.6892808)],
            6: [(1.05, -1, 0.44767085), (1.1500001, 0.8883731, 0.740814)],
            7: [(1.05, -1, 0.44624186), (1.1500001, 0.8516306, 0.78748834)],
            8: [(1.05, -1, 0.4447733), (1.1500001, 0.8186258, 0.8250055)],
            9: [(1.05, -1, 0.4436187), (1.1500001, 0.79479253, 0.8498843)],
            10: [(1.05, -1, 0.44315863), (1.1500001, 0.78568846, 0.85894454)],
        }
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [1, 4, 5, 0, 4, 8, 9, 5, 8, 10, 11, 9, 10, 6, 7, 11, 6, 2, 3, 7, 2, 1, 0, 3, 2, 6, 4, 1, 6, 10, 8, 4, 0, 5, 7, 3, 5, 9, 11, 7]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, 0), (-0, 0, -1), (-0, 0, -1), (0, -0, -1), (-0, -0, -1), (-0, 0, -1), (-0, -0, -1), (0, -0, -1), (0, -0, -1), (-0, -1, -0), (0, -1, -0), (-0, -1, -0), (-0, -1, 0), (1, -0, -0), (1, 0, 0), (1, -0, -0), (1, -0, -0), (1, 0, 0), (1, 0, 0), (1, -0, -0), (1, -0, -0), (-1, -0, -0), (-1, -0, 0), (-1, 0, -0), (-1, 0, -0), (-1, -0, 0), (-1, -0, 0), (-1, -0, -0), (-1, 0, -0)] (
            interpolation = "faceVarying"
        )
        normal3f[] normals.timeSamples = {
            1: [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)],
            2: [(0, 0, 1), (-1.110223e-16, -0.0059874505, 0.99998206), (-1.110223e-16, -0.0059874505, 0.99998206), (0, 0, 1), (-1.110223e-16, -0.0059874505, 0.99998206), (-5.551115e-17, -0.011974686, 0.9999283), (-5.551115e-17, -0.011974686, 0.9999283), (-1.110223e-16, -0.0059874505, 0.99998206), (-1.110223e-16, 0.9999283, 0.011974686), (-1.110223e-16, 0.9999283, 0.011974686), (-1.110223e-16, 0.9999283, 0.011974686), (-1.110223e-16, 0.9999283, 0.011974686), (5.551115e-17, 0.011974686, -0.9999283), (1.110223e-16, 0.0059874505, -0.99998206), (1.110223e-16, 0.0059874505, -0.99998206), (5.551115e-17, 0.011974686, -0.9999283), (1.110223e-16, 0.0059874505, -0.99998206), (0, 0, -1), (0, 0, -1), (1.110223e-16, 0.0059874505, -0.99998206), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 1.110223e-16, 1.110223e-16), (1, 1.110223e-16, 1.110223e-16), (1, 0, 0), (1, 1.110223e-16, 1.110223e-16), (1, 1.6653345e-16, 1.110223e-16), (1, 1.6653345e-16, 1.110223e-16), (1, 1.110223e-16, 1.110223e-16), (-1, 0, 0), (-1, -1.110223e-16, -1.110223e-16), (-1, -1.110223e-16, -1.110223e-16), (-1, 0, 0), (-1, -1.110223e-16, -1.110223e-16), (-1, -1.6653345e-16, -1.110223e-16), (-1, -1.6653345e-16, -1.110223e-16), (-1, -1.110223e-16, -1.110223e-16)],
            3: [(0, 0, 1), (0, -0.022032166, 0.9997573), (0, -0.022032166, 0.9997573), (0, 0, 1), (0, -0.022032166, 0.9997573), (0, -0.044053636, 0.99902916), (0, -0.044053636, 0.99902916), (0, -0.022032166, 0.9997573), (0, 0.99902916, 0.044053636), (0, 0.99902916, 0.044053636), (0, 0.99902916, 0.044053636), (0, 0.99902916, 0.044053636), (0, 0.044053636, -0.99902916), (0, 0.022032166, -0.9997573), (0, 0.022032166, -0.9997573), (0, 0.044053636, -0.99902916), (0, 0.022032166, -0.9997573), (0, 0, -1), (0, 0, -1), (0, 0.022032166, -0.9997573), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 1.110223e-16), (1, 0, 1.110223e-16), (1, 0, 0), (1, 0, 1.110223e-16), (1, 0, 0), (1, 0, 0), (1, 0, 1.110223e-16), (-1, 0, 0), (-1, 0, -1.110223e-16), (-1, 0, -1.110223e-16), (-1, 0, 0), (-1, 0, -1.110223e-16), (-1, 0, 0), (-1, 0, 0), (-1, 0, -1.110223e-16)],
            4: [(0, 0, 1), (-5.551115e-17, -0.04524994, 0.9989757), (-5.551115e-17, -0.04524994, 0.9989757), (0, 0, 1), (-5.551115e-17, -0.04524994, 0.9989757), (1.110223e-16, -0.09040718, 0.99590486), (1.110223e-16, -0.09040718, 0.99590486), (-5.551115e-17, -0.04524994, 0.9989757), (1.110223e-16, 0.99590486, 0.09040718), (1.110223e-16, 0.99590486, 0.09040718), (1.110223e-16, 0.99590486, 0.09040718), (1.110223e-16, 0.99590486, 0.09040718), (-1.110223e-16, 0.09040718, -0.99590486), (5.551115e-17, 0.04524994, -0.9989757), (5.551115e-17, 0.04524994, -0.9989757), (-1.110223e-16, 0.09040718, -0.99590486), (5.551115e-17, 0.04524994, -0.9989757), (0, 0, -1), (0, 0, -1), (5.551115e-17, 0.04524994, -0.9989757), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, -5.551115e-17, 1.110223e-16), (1, -5.551115e-17, 1.110223e-16), (1, 0, 0), (1, -5.551115e-17, 1.110223e-16), (1, -1.110223e-16, -1.110223e-16), (1, -1.110223e-16, -1.110223e-16), (1, -5.551115e-17, 1.110223e-16), (-1, 0, 0), (-1, 5.551115e-17, -1.110223e-16), (-1, 5.551115e-17, -1.110223e-16), (-1, 0, 0), (-1, 5.551115e-17, -1.110223e-16), (-1, 1.110223e-16, 1.110223e-16), (-1, 1.110223e-16, 1.110223e-16), (-1, 5.551115e-17, -1.110223e-16)],
            5: [(0, 0, 1), (1.110223e-16, -0.07274352, 0.9973507), (1.110223e-16, -0.07274352, 0.9973507), (0, 0, 1), (1.110223e-16, -0.07274352, 0.9973507), (0, -0.1451016, 0.9894168), (0, -0.1451016, 0.9894168), (1.110223e-16, -0.07274352, 0.9973507), (0, 0.9894168, 0.1451016), (0, 0.9894168, 0.1451016), (0, 0.9894168, 0.1451016), (0, 0.9894168, 0.1451016), (0, 0.1451016, -0.9894168), (-1.110223e-16, 0.07274352, -0.9973507), (-1.110223e-16, 0.07274352, -0.9973507), (0, 0.1451016, -0.9894168), (-1.110223e-16, 0.07274352, -0.9973507), (0, 0, -1), (0, 0, -1), (-1.110223e-16, 0.07274352, -0.9973507), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 1.110223e-16, 0), (1, 1.110223e-16, 0), (1, 0, 0), (1, 1.110223e-16, 0), (1, 0, 0), (1, 0, 0), (1, 1.110223e-16, 0), (-1, 0, 0), (-1, -1.110223e-16, 0), (-1, -1.110223e-16, 0), (-1, 0, 0), (-1, -1.110223e-16, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.110223e-16, 0)],
            6: [(0, 0, 1), (5.551115e-17, -0.1016116, 0.9948242), (5.551115e-17, -0.1016116, 0.9948242), (0, 0, 1), (5.551115e-17, -0.1016116, 0.9948242), (0, -0.20217134, 0.97935015), (0, -0.20217134, 0.97935015), (5.551115e-17, -0.1016116, 0.9948242), (0, 0.97935015, 0.20217134), (0, 0.97935015, 0.20217134), (0, 0.97935015, 0.20217134), (0, 0.97935015, 0.20217134), (0, 0.20217134, -0.97935015), (-5.551115e-17, 0.1016116, -0.9948242), (-5.551115e-17, 0.1016116, -0.9948242), (0, 0.20217134, -0.97935015), (-5.551115e-17, 0.1016116, -0.9948242), (0, 0, -1), (0, 0, -1), (-5.551115e-17, 0.1016116, -0.9948242), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 5.551115e-17, -1.110223e-16), (1, 5.551115e-17, -1.110223e-16), (1, 0, 0), (1, 5.551115e-17, -1.110223e-16), (1, 0, 0), (1, 0, 0), (1, 5.551115e-17, -1.110223e-16), (-1, 0, 0), (-1, -5.551115e-17, 1.110223e-16), (-1, -5.551115e-17, 1.110223e-16), (-1, 0, 0), (-1, -5.551115e-17, 1.110223e-16), (-1, 0, 0), (-1, 0, 0), (-1, -5.551115e-17, 1.110223e-16)],
            7: [(0, 0, 1), (-1.110223e-16, -0.12896946, 0.99164855), (-1.110223e-16, -0.12896946, 0.99164855), (0, 0, 1), (-1.110223e-16, -0.12896946, 0.99164855), (-5.551115e-17, -0.25578475, 0.96673375), (-5.551115e-17, -0.25578475, 0.96673375), (-1.110223e-16, -0.12896946, 0.99164855), (-2.220446e-16, 0.96673375, 0.25578475), (-2.220446e-16, 0.96673375, 0.25578475), (-2.220446e-16, 0.96673375, 0.25578475), (-2.220446e-16, 0.96673375, 0.25578475), (5.551115e-17, 0.25578475, -0.96673375), (1.110223e-16, 0.12896946, -0.99164855), (1.110223e-16, 0.12896946, -0.99164855), (5.551115e-17, 0.25578475, -0.96673375), (1.110223e-16, 0.12896946, -0.99164855), (0, 0, -1), (0, 0, -1), (1.110223e-16, 0.12896946, -0.99164855), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 1.110223e-16, 1.110223e-16), (1, 1.110223e-16, 1.110223e-16), (1, 0, 0), (1, 1.110223e-16, 1.110223e-16), (1, 1.6653345e-16, 0), (1, 1.6653345e-16, 0), (1, 1.110223e-16, 1.110223e-16), (-1, 0, 0), (-1, -1.110223e-16, -1.110223e-16), (-1, -1.110223e-16, -1.110223e-16), (-1, 0, 0), (-1, -1.110223e-16, -1.110223e-16), (-1, -1.6653345e-16, 0), (-1, -1.6653345e-16, 0), (-1, -1.110223e-16, -1.110223e-16)],
            8: [(0, 0, 1), (0, -0.15197003, 0.9883851), (0, -0.15197003, 0.9883851), (0, 0, 1), (0, -0.15197003, 0.9883851), (5.551115e-17, -0.30040982, 0.9538102), (5.551115e-17, -0.30040982, 0.9538102), (0, -0.15197003, 0.9883851), (0, 0.9538102, 0.30040982), (0, 0.9538102, 0.30040982), (0, 0.9538102, 0.30040982), (0, 0.9538102, 0.30040982), (-5.551115e-17, 0.30040982, -0.9538102), (0, 0.15197003, -0.9883851), (0, 0.15197003, -0.9883851), (-5.551115e-17, 0.30040982, -0.9538102), (0, 0.15197003, -0.9883851), (0, 0, -1), (0, 0, -1), (0, 0.15197003, -0.9883851), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 5.551115e-17, 0), (1, 5.551115e-17, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -5.551115e-17, 0), (-1, -5.551115e-17, 0), (-1, 0, 0)],
            9: [(0, 0, 1), (-5.551115e-17, -0.16780987, 0.9858194), (-5.551115e-17, -0.16780987, 0.9858194), (0, 0, 1), (-5.551115e-17, -0.16780987, 0.9858194), (0, -0.33086044, 0.9436797), (0, -0.33086044, 0.9436797), (-5.551115e-17, -0.16780987, 0.9858194), (0, 0.9436797, 0.33086044), (0, 0.9436797, 0.33086044), (0, 0.9436797, 0.33086044), (0, 0.9436797, 0.33086044), (0, 0.33086044, -0.9436797), (5.551115e-17, 0.16780987, -0.9858194), (5.551115e-17, 0.16780987, -0.9858194), (0, 0.33086044, -0.9436797), (5.551115e-17, 0.16780987, -0.9858194), (0, 0, -1), (0, 0, -1), (5.551115e-17, 0.16780987, -0.9858194), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, -5.551115e-17, 1.110223e-16), (1, -5.551115e-17, 1.110223e-16), (1, 0, 0), (1, -5.551115e-17, 1.110223e-16), (1, 0, 0), (1, 0, 0), (1, -5.551115e-17, 1.110223e-16), (-1, 0, 0), (-1, 5.551115e-17, -1.110223e-16), (-1, 5.551115e-17, -1.110223e-16), (-1, 0, 0), (-1, 5.551115e-17, -1.110223e-16), (-1, 0, 0), (-1, 0, 0), (-1, 5.551115e-17, -1.110223e-16)],
            10: [(0, 0, 1), (0, -0.1737094, 0.98479694), (0, -0.1737094, 0.98479694), (0, 0, 1), (0, -0.1737094, 0.98479694), (5.551115e-17, -0.34213698, 0.93965006), (5.551115e-17, -0.34213698, 0.93965006), (0, -0.1737094, 0.98479694), (-1.110223e-16, 0.93965006, 0.34213698), (-1.110223e-16, 0.93965006, 0.34213698), (-1.110223e-16, 0.93965006, 0.34213698), (-1.110223e-16, 0.93965006, 0.34213698), (-5.551115e-17, 0.34213698, -0.93965006), (0, 0.1737094, -0.98479694), (0, 0.1737094, -0.98479694), (-5.551115e-17, 0.34213698, -0.93965006), (0, 0.1737094, -0.98479694), (0, 0, -1), (0, 0, -1), (0, 0.1737094, -0.98479694), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 1.110223e-16), (1, 0, 1.110223e-16), (1, 0, 0), (1, 0, 1.110223e-16), (1, 5.551115e-17, -1.110223e-16), (1, 5.551115e-17, -1.110223e-16), (1, 0, 1.110223e-16), (-1, 0, 0), (-1, 0, -1.110223e-16), (-1, 0, -1.110223e-16), (-1, 0, 0), (-1, 0, -1.110223e-16), (-1, -5.551115e-17, 1.110223e-16), (-1, -5.551115e-17, 1.110223e-16), (-1, 0, -1.110223e-16)],
        }
        point3f[] points = [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, 0, 0.55), (1.05, 0, 0.55), (1.1500001, 0, 0.45), (1.05, 0, 0.45), (1.1500001, 1, 0.55), (1.05, 1, 0.55), (1.1500001, 1, 0.45), (1.05, 1, 0.45)]
        point3f[] points.timeSamples = {
            1: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, 0, 0.55), (1.05, 0, 0.55), (1.1500001, 0, 0.45), (1.05, 0, 0.45), (1.1500001, 1, 0.55), (1.05, 1, 0.55), (1.1500001, 1, 0.45), (1.05, 1, 0.45)],
            2: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.0032930952, 0.5499902), (1.05, -0.0032930952, 0.5499902), (1.1500001, -0.00269435, 0.4499919), (1.05, -0.00269435, 0.4499919), (1.1500001, 0.9933422, 0.56193525), (1.05, 0.9933422, 0.56193525), (1.1500001, 0.9945397, 0.4619424), (1.05, 0.9945397, 0.4619424)],
            3: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.012117688, 0.5498665), (1.05, -0.012117688, 0.5498665), (1.1500001, -0.009914471, 0.44989076), (1.05, -0.009914471, 0.44989076), (1.1500001, 0.9747997, 0.5935197), (1.05, 0.9747997, 0.5935197), (1.1500001, 0.979205, 0.49361676), (1.05, 0.979205, 0.49361676)],
            4: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.024887456, 0.5494366), (1.05, -0.024887456, 0.5494366), (1.1500001, -0.020362461, 0.44953907), (1.05, -0.020362461, 0.44953907), (1.1500001, 0.94618094, 0.63815486), (1.05, 0.94618094, 0.63815486), (1.1500001, 0.95522165, 0.5385644), (1.05, 0.95522165, 0.5385644)],
            5: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.040008947, 0.54854286), (1.05, -0.040008947, 0.54854286), (1.1500001, -0.032734595, 0.4488078), (1.05, -0.032734595, 0.4488078), (1.1500001, 0.90961087, 0.6892808), (1.05, 0.90961087, 0.6892808), (1.1500001, 0.924121, 0.5903391), (1.05, 0.924121, 0.5903391)],
            6: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.055886373, 0.5471533), (1.05, -0.055886373, 0.5471533), (1.1500001, -0.04572521, 0.44767085), (1.05, -0.04572521, 0.44767085), (1.1500001, 0.86815596, 0.740814), (1.05, 0.86815596, 0.740814), (1.1500001, 0.8883731, 0.6428789), (1.05, 0.8883731, 0.6428789)],
            7: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.0709332, 0.5454067), (1.05, -0.0709332, 0.5454067), (1.1500001, -0.05803625, 0.44624186), (1.05, -0.05803625, 0.44624186), (1.1500001, 0.8260521, 0.78748834), (1.05, 0.8260521, 0.78748834), (1.1500001, 0.8516306, 0.6908149), (1.05, 0.8516306, 0.6908149)],
            8: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.08358351, 0.5436118), (1.05, -0.08358351, 0.5436118), (1.1500001, -0.06838651, 0.4447733), (1.05, -0.06838651, 0.4447733), (1.1500001, 0.7885848, 0.8250055), (1.05, 0.7885848, 0.8250055), (1.1500001, 0.8186258, 0.7296244), (1.05, 0.8186258, 0.7296244)],
            9: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.09229542, 0.5422007), (1.05, -0.09229542, 0.5422007), (1.1500001, -0.075514436, 0.4436187), (1.05, -0.075514436, 0.4436187), (1.1500001, 0.7617065, 0.8498843), (1.05, 0.7617065, 0.8498843), (1.1500001, 0.79479253, 0.7555163), (1.05, 0.79479253, 0.7555163)],
            10: [(1.05, -1, 0.55), (1.1500001, -1, 0.55), (1.1500001, -1, 0.45), (1.05, -1, 0.45), (1.1500001, -0.095540166, 0.5416383), (1.05, -0.095540166, 0.5416383), (1.1500001, -0.07816922, 0.44315863), (1.05, -0.07816922, 0.44315863), (1.1500001, 0.75147474, 0.85894454), (1.05, 0.75147474, 0.85894454), (1.1500001, 0.78568846, 0.76497954), (1.05, 0.78568846, 0.76497954)],
        }
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (1, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2] (
            elementSize = 2
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 0, 1, 0, 1, 0, 1, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 0, 1, 0, 1, 0, 1, 0] (
            elementSize = 2
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
    }

    def Mesh "MeshWithNormals" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            1: [(0.45, -1, 0.45), (0.55, 1, 0.55)],
            2: [(0.45, -1, 0.4499919), (0.55, 0.9945397, 0.56193525)],
            3: [(0.45, -1, 0.44989076), (0.55, 0.979205, 0.5935197)],
            4: [(0.45, -1, 0.44953907), (0.55, 0.95522165, 0.63815486)],
            5: [(0.45, -1, 0.4488078), (0.55, 0.924121, 0.6892808)],
            6: [(0.45, -1, 0.44767085), (0.55, 0.8883731, 0.740814)],
            7: [(0.45, -1, 0.44624186), (0.55, 0.8516306, 0.78748834)],
            8: [(0.45, -1, 0.4447733), (0.55, 0.8186258, 0.8250055)],
            9: [(0.45, -1, 0.4436187), (0.55, 0.79479253, 0.8498843)],
            10: [(0.45, -1, 0.44315863), (0.55, 0.78568846, 0.85894454)],
        }
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [1, 4, 5, 0, 4, 8, 9, 5, 8, 10, 11, 9, 10, 6, 7, 11, 6, 2, 3, 7, 2, 1, 0, 3, 2, 6, 4, 1, 6, 10, 8, 4, 0, 5, 7, 3, 5, 9, 11, 7]
        normal3f[] normals = [(-1, -1, 1), (1, -1, 1), (1, -1, -1), (-1, -1, -1), (1, 0, 1), (-1, 0, 1), (1, 0, -1), (-1, 0, -1), (1, 1, 1), (-1, 1, 1), (1, 1, -1), (-1, 1, -1)] (
            interpolation = "vertex"
        )
        normal3f[] normals.timeSamples = {
            1: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, 0, 0.70710677), (-0.70710677, 0, 0.70710677), (0.70710677, 0, -0.70710677), (-0.70710677, 0, -0.70710677), (0.57735026, 0.57735026, 0.57735026), (-0.57735026, 0.57735026, 0.57735026), (0.57735026, 0.57735026, -0.57735026), (-0.57735026, 0.57735026, -0.57735026)],
            2: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.004233767, 0.70709413), (-0.70710677, -0.004233767, 0.70709413), (0.70710677, 0.004233767, -0.70709413), (-0.70710677, 0.004233767, -0.70709413), (0.57735026, 0.5703953, 0.58422244), (-0.57735026, 0.5703953, 0.58422244), (0.57735026, 0.58422244, -0.5703953), (-0.57735026, 0.58422244, -0.5703953)],
            3: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.015579094, 0.70693517), (-0.70710677, -0.015579094, 0.70693517), (0.70710677, 0.015579094, -0.70693517), (-0.70710677, 0.015579094, -0.70693517), (0.57735026, 0.55135536, 0.6022241), (-0.57735026, 0.55135536, 0.6022241), (0.57735026, 0.6022241, -0.55135536), (-0.57735026, 0.6022241, -0.55135536)],
            4: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.03199654, 0.7063825), (-0.70710677, -0.03199654, 0.7063825), (0.70710677, 0.03199654, -0.7063825), (-0.70710677, 0.03199654, -0.7063825), (0.57735026, 0.52278936, 0.62718254), (-0.57735026, 0.52278936, 0.62718254), (0.57735026, 0.62718254, -0.52278936), (-0.57735026, 0.62718254, -0.52278936)],
            5: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.051437438, 0.70523345), (-0.70710677, -0.051437438, 0.70523345), (0.70710677, 0.051437438, -0.70523345), (-0.70710677, 0.051437438, -0.70523345), (0.57735026, 0.4874656, 0.65501446), (-0.57735026, 0.4874656, 0.65501446), (0.57735026, 0.65501446, -0.4874656), (-0.57735026, 0.65501446, -0.4874656)],
            6: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.07185025, 0.7034469), (-0.70710677, -0.07185025, 0.7034469), (0.70710677, 0.07185025, -0.7034469), (-0.70710677, 0.07185025, -0.7034469), (0.57735026, 0.4487044, 0.68215173), (-0.57735026, 0.4487044, 0.68215173), (0.57735026, 0.68215173, -0.4487044), (-0.57735026, 0.68215173, -0.4487044)],
            7: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.09119517, 0.70120144), (-0.70710677, -0.09119517, 0.70120144), (0.70710677, 0.09119517, -0.70120144), (-0.70710677, 0.09119517, -0.70120144), (0.57735026, 0.4104666, 0.7058214), (-0.57735026, 0.4104666, 0.7058214), (0.57735026, 0.7058214, -0.4104666), (-0.57735026, 0.7058214, -0.4104666)],
            8: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.10745904, 0.6988938), (-0.70710677, -0.10745904, 0.6988938), (0.70710677, 0.10745904, -0.6988938), (-0.70710677, 0.10745904, -0.6988938), (0.57735026, 0.3772409, 0.72412425), (-0.57735026, 0.3772409, 0.72412425), (0.57735026, 0.72412425, -0.3772409), (-0.57735026, 0.72412425, -0.3772409)],
            9: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.1186595, 0.69707954), (-0.70710677, -0.1186595, 0.69707954), (0.70710677, 0.1186595, -0.69707954), (-0.70710677, 0.1186595, -0.69707954), (0.57735026, 0.35381135, 0.7358561), (-0.57735026, 0.35381135, 0.7358561), (0.57735026, 0.7358561, -0.35381135), (-0.57735026, 0.7358561, -0.35381135)],
            10: [(-0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, 0.57735026), (0.57735026, -0.57735026, -0.57735026), (-0.57735026, -0.57735026, -0.57735026), (0.70710677, -0.1228311, 0.6963566), (-0.70710677, -0.1228311, 0.6963566), (0.70710677, 0.1228311, -0.6963566), (-0.70710677, 0.1228311, -0.6963566), (0.57735026, 0.34497434, 0.7400401), (-0.57735026, 0.34497434, 0.7400401), (0.57735026, 0.7400401, -0.34497434), (-0.57735026, 0.7400401, -0.34497434)],
        }
        point3f[] points = [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, 0, 0.55), (0.45, 0, 0.55), (0.55, 0, 0.45), (0.45, 0, 0.45), (0.55, 1, 0.55), (0.45, 1, 0.55), (0.55, 1, 0.45), (0.45, 1, 0.45)]
        point3f[] points.timeSamples = {
            1: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, 0, 0.55), (0.45, 0, 0.55), (0.55, 0, 0.45), (0.45, 0, 0.45), (0.55, 1, 0.55), (0.45, 1, 0.55), (0.55, 1, 0.45), (0.45, 1, 0.45)],
            2: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.0032930952, 0.5499902), (0.45, -0.0032930952, 0.5499902), (0.55, -0.00269435, 0.4499919), (0.45, -0.00269435, 0.4499919), (0.55, 0.9933422, 0.56193525), (0.45, 0.9933422, 0.56193525), (0.55, 0.9945397, 0.4619424), (0.45, 0.9945397, 0.4619424)],
            3: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.012117688, 0.5498665), (0.45, -0.012117688, 0.5498665), (0.55, -0.009914471, 0.44989076), (0.45, -0.009914471, 0.44989076), (0.55, 0.9747997, 0.5935197), (0.45, 0.9747997, 0.5935197), (0.55, 0.979205, 0.49361676), (0.45, 0.979205, 0.49361676)],
            4: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.024887456, 0.5494366), (0.45, -0.024887456, 0.5494366), (0.55, -0.020362461, 0.44953907), (0.45, -0.020362461, 0.44953907), (0.55, 0.94618094, 0.63815486), (0.45, 0.94618094, 0.63815486), (0.55, 0.95522165, 0.5385644), (0.45, 0.95522165, 0.5385644)],
            5: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.040008947, 0.54854286), (0.45, -0.040008947, 0.54854286), (0.55, -0.032734595, 0.4488078), (0.45, -0.032734595, 0.4488078), (0.55, 0.90961087, 0.6892808), (0.45, 0.90961087, 0.6892808), (0.55, 0.924121, 0.5903391), (0.45, 0.924121, 0.5903391)],
            6: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.055886373, 0.5471533), (0.45, -0.055886373, 0.5471533), (0.55, -0.04572521, 0.44767085), (0.45, -0.04572521, 0.44767085), (0.55, 0.86815596, 0.740814), (0.45, 0.86815596, 0.740814), (0.55, 0.8883731, 0.6428789), (0.45, 0.8883731, 0.6428789)],
            7: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.0709332, 0.5454067), (0.45, -0.0709332, 0.5454067), (0.55, -0.05803625, 0.44624186), (0.45, -0.05803625, 0.44624186), (0.55, 0.8260521, 0.78748834), (0.45, 0.8260521, 0.78748834), (0.55, 0.8516306, 0.6908149), (0.45, 0.8516306, 0.6908149)],
            8: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.08358351, 0.5436118), (0.45, -0.08358351, 0.5436118), (0.55, -0.06838651, 0.4447733), (0.45, -0.06838651, 0.4447733), (0.55, 0.7885848, 0.8250055), (0.45, 0.7885848, 0.8250055), (0.55, 0.8186258, 0.7296244), (0.45, 0.8186258, 0.7296244)],
            9: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.09229542, 0.5422007), (0.45, -0.09229542, 0.5422007), (0.55, -0.075514436, 0.4436187), (0.45, -0.075514436, 0.4436187), (0.55, 0.7617065, 0.8498843), (0.45, 0.7617065, 0.8498843), (0.55, 0.79479253, 0.7555163), (0.45, 0.79479253, 0.7555163)],
            10: [(0.45, -1, 0.55), (0.55, -1, 0.55), (0.55, -1, 0.45), (0.45, -1, 0.45), (0.55, -0.095540166, 0.5416383), (0.45, -0.095540166, 0.5416383), (0.55, -0.07816922, 0.44315863), (0.45, -0.07816922, 0.44315863), (0.55, 0.75147474, 0.85894454), (0.45, 0.75147474, 0.85894454), (0.55, 0.78568846, 0.76497954), (0.45, 0.78568846, 0.76497954)],
        }
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 1, 0), (1, 0, 0, 0), (0, 1, 0, 0), (1, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2] (
            elementSize = 2
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 0, 1, 0, 1, 0, 1, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 0, 1, 0, 1, 0, 1, 0] (
            elementSize = 2
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
    }

    def BasisCurves "Curves" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        int[] curveVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        float3[] extent.timeSamples = {
            1: [(-0.55, -1.1, -0.55), (0.55, 1.0999999, 0.55)],
            2: [(-0.55, -1.1, -0.55), (0.55, 1.1065071, 0.5631327)],
            3: [(-0.55, -1.1, -0.55), (0.55, 1.1231616, 0.59792507)],
            4: [(-0.55, -1.1, -0.55), (0.55, 1.1452192, 0.6471956)],
            5: [(-0.55, -1.1, -0.55), (0.55, 1.1681643, 0.70379096)],
            6: [(-0.55, -1.1, -0.55), (0.55, 1.1884793, 0.7610311)],
            7: [(-0.55, -1.1, -0.55), (0.55, 1.2040887, 0.8130668)],
            8: [(-0.55, -1.1, -0.55), (0.55, 1.2144166, 0.8550464)],
            9: [(-0.55, -1.1, -0.55), (0.55, 1.2200208, 0.8829703)],
            10: [(-0.55, -1.1, -0.55), (0.55, 1.2217904, 0.8931582)],
        }
        point3f[] points = [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.5), (-0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 1, 0.5), (-0.5, 1, 0.5), (-0.5, 1, 0.5), (0.5, 1, 0.5), (0.5, 1, -0.5), (-0.5, 1, -0.5), (-0.5, 1, -0.5), (0.5, 1, -0.5), (0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0, -0.5), (0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 0, -0.5), (0.5, 1, -0.5), (0.5, 1, 0.5), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, 0, 0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, 0.5), (-0.5, 1, 0.5), (-0.5, 1, -0.5)]
        point3f[] points.timeSamples = {
            1: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, 0, 0.55), (-0.55, 0, 0.55), (-0.55, 0, 0.55), (0.55, 0, 0.55), (0.55, 1.0999999, 0.55), (-0.55, 1.0999999, 0.55), (-0.55, 1.0999999, 0.55), (0.55, 1.0999999, 0.55), (0.55, 1.0999999, -0.55), (-0.55, 1.0999999, -0.55), (-0.55, 1.0999999, -0.55), (0.55, 1.0999999, -0.55), (0.55, 0, -0.55), (-0.55, 0, -0.55), (-0.55, 0, -0.55), (0.55, 0, -0.55), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0, -0.55), (0.55, 0, 0.55), (0.55, 0, 0.55), (0.55, 0, -0.55), (0.55, 1.0999999, -0.55), (0.55, 1.0999999, 0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, 0, 0.55), (-0.55, 0, -0.55), (-0.55, 0, -0.55), (-0.55, 0, 0.55), (-0.55, 1.0999999, 0.55), (-0.55, 1.0999999, -0.55)],
            2: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.0032930952, 0.5499902), (-0.55, -0.0032930952, 0.5499902), (-0.55, -0.0032930952, 0.5499902), (0.55, -0.0032930952, 0.5499902), (0.55, 1.0933349, 0.5631327), (-0.55, 1.0933349, 0.5631327), (-0.55, 1.0933349, 0.5631327), (0.55, 1.0933349, 0.5631327), (0.55, 1.1065071, -0.5367884), (-0.55, 1.1065071, -0.5367884), (-0.55, 1.1065071, -0.5367884), (0.55, 1.1065071, -0.5367884), (0.55, 0.0032931003, -0.5499902), (-0.55, 0.0032931003, -0.5499902), (-0.55, 0.0032931003, -0.5499902), (0.55, 0.0032931003, -0.5499902), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.0032931003, -0.5499902), (0.55, -0.0032930952, 0.5499902), (0.55, -0.0032930952, 0.5499902), (0.55, 0.0032931003, -0.5499902), (0.55, 1.1065071, -0.5367884), (0.55, 1.0933349, 0.5631327), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.0032930952, 0.5499902), (-0.55, 0.0032931003, -0.5499902), (-0.55, 0.0032931003, -0.5499902), (-0.55, -0.0032930952, 0.5499902), (-0.55, 1.0933349, 0.5631327), (-0.55, 1.1065071, -0.5367884)],
            3: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.012117688, 0.5498665), (-0.55, -0.012117688, 0.5498665), (-0.55, -0.012117688, 0.5498665), (0.55, -0.012117688, 0.5498665), (0.55, 1.0747025, 0.59792507), (-0.55, 1.0747025, 0.59792507), (-0.55, 1.0747025, 0.59792507), (0.55, 1.0747025, 0.59792507), (0.55, 1.1231616, -0.5010071), (-0.55, 1.1231616, -0.5010071), (-0.55, 1.1231616, -0.5010071), (0.55, 1.1231616, -0.5010071), (0.55, 0.012117696, -0.5498665), (-0.55, 0.012117696, -0.5498665), (-0.55, 0.012117696, -0.5498665), (0.55, 0.012117696, -0.5498665), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.012117696, -0.5498665), (0.55, -0.012117688, 0.5498665), (0.55, -0.012117688, 0.5498665), (0.55, 0.012117696, -0.5498665), (0.55, 1.1231616, -0.5010071), (0.55, 1.0747025, 0.59792507), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.012117688, 0.5498665), (-0.55, 0.012117696, -0.5498665), (-0.55, 0.012117696, -0.5498665), (-0.55, -0.012117688, 0.5498665), (-0.55, 1.0747025, 0.59792507), (-0.55, 1.1231616, -0.5010071)],
            4: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.024887456, 0.5494366), (-0.55, -0.024887456, 0.5494366), (-0.55, -0.024887456, 0.5494366), (0.55, -0.024887456, 0.5494366), (0.55, 1.0457714, 0.6471956), (-0.55, 1.0457714, 0.6471956), (-0.55, 1.0457714, 0.6471956), (0.55, 1.0457714, 0.6471956), (0.55, 1.1452192, -0.4482998), (-0.55, 1.1452192, -0.4482998), (-0.55, 1.1452192, -0.4482998), (0.55, 1.1452192, -0.4482998), (0.55, 0.024887478, -0.5494366), (-0.55, 0.024887478, -0.5494366), (-0.55, 0.024887478, -0.5494366), (0.55, 0.024887478, -0.5494366), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.024887478, -0.5494366), (0.55, -0.024887456, 0.5494366), (0.55, -0.024887456, 0.5494366), (0.55, 0.024887478, -0.5494366), (0.55, 1.1452192, -0.4482998), (0.55, 1.0457714, 0.6471956), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.024887456, 0.5494366), (-0.55, 0.024887478, -0.5494366), (-0.55, 0.024887478, -0.5494366), (-0.55, -0.024887456, 0.5494366), (-0.55, 1.0457714, 0.6471956), (-0.55, 1.1452192, -0.4482998)],
            5: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.040008947, 0.54854286), (-0.55, -0.040008947, 0.54854286), (-0.55, -0.040008947, 0.54854286), (0.55, -0.040008947, 0.54854286), (0.55, 1.0085524, 0.70379096), (-0.55, 1.0085524, 0.70379096), (-0.55, 1.0085524, 0.70379096), (0.55, 1.0085524, 0.70379096), (0.55, 1.1681643, -0.38456747), (-0.55, 1.1681643, -0.38456747), (-0.55, 1.1681643, -0.38456747), (0.55, 1.1681643, -0.38456747), (0.55, 0.04000893, -0.5485429), (-0.55, 0.04000893, -0.5485429), (-0.55, 0.04000893, -0.5485429), (0.55, 0.04000893, -0.5485429), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.04000893, -0.5485429), (0.55, -0.040008947, 0.54854286), (0.55, -0.040008947, 0.54854286), (0.55, 0.04000893, -0.5485429), (0.55, 1.1681643, -0.38456747), (0.55, 1.0085524, 0.70379096), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.040008947, 0.54854286), (-0.55, 0.04000893, -0.5485429), (-0.55, 0.04000893, -0.5485429), (-0.55, -0.040008947, 0.54854286), (-0.55, 1.0085524, 0.70379096), (-0.55, 1.1681643, -0.38456747)],
            6: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.055886373, 0.5471533), (-0.55, -0.055886373, 0.5471533), (-0.55, -0.055886373, 0.5471533), (0.55, -0.055886373, 0.5471533), (0.55, 0.96609086, 0.7610311), (-0.55, 0.96609086, 0.7610311), (-0.55, 0.96609086, 0.7610311), (0.55, 0.96609086, 0.7610311), (0.55, 1.1884793, -0.31625414), (-0.55, 1.1884793, -0.31625414), (-0.55, 1.1884793, -0.31625414), (0.55, 1.1884793, -0.31625414), (0.55, 0.055886388, -0.5471533), (-0.55, 0.055886388, -0.5471533), (-0.55, 0.055886388, -0.5471533), (0.55, 0.055886388, -0.5471533), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.055886388, -0.5471533), (0.55, -0.055886373, 0.5471533), (0.55, -0.055886373, 0.5471533), (0.55, 0.055886388, -0.5471533), (0.55, 1.1884793, -0.31625414), (0.55, 0.96609086, 0.7610311), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.055886373, 0.5471533), (-0.55, 0.055886388, -0.5471533), (-0.55, 0.055886388, -0.5471533), (-0.55, -0.055886373, 0.5471533), (-0.55, 0.96609086, 0.7610311), (-0.55, 1.1884793, -0.31625414)],
            7: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.0709332, 0.5454067), (-0.55, -0.0709332, 0.5454067), (-0.55, -0.0709332, 0.5454067), (0.55, -0.0709332, 0.5454067), (0.55, 0.92272544, 0.8130668), (-0.55, 0.92272544, 0.8130668), (-0.55, 0.92272544, 0.8130668), (0.55, 0.92272544, 0.8130668), (0.55, 1.2040887, -0.25034037), (-0.55, 1.2040887, -0.25034037), (-0.55, 1.2040887, -0.25034037), (0.55, 1.2040887, -0.25034037), (0.55, 0.07093321, -0.5454067), (-0.55, 0.07093321, -0.5454067), (-0.55, 0.07093321, -0.5454067), (0.55, 0.07093321, -0.5454067), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.07093321, -0.5454067), (0.55, -0.0709332, 0.5454067), (0.55, -0.0709332, 0.5454067), (0.55, 0.07093321, -0.5454067), (0.55, 1.2040887, -0.25034037), (0.55, 0.92272544, 0.8130668), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.0709332, 0.5454067), (-0.55, 0.07093321, -0.5454067), (-0.55, 0.07093321, -0.5454067), (-0.55, -0.0709332, 0.5454067), (-0.55, 0.92272544, 0.8130668), (-0.55, 1.2040887, -0.25034037)],
            8: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.08358351, 0.5436118), (-0.55, -0.08358351, 0.5436118), (-0.55, -0.08358351, 0.5436118), (0.55, -0.08358351, 0.5436118), (0.55, 0.88396573, 0.8550464), (-0.55, 0.88396573, 0.8550464), (-0.55, 0.88396573, 0.8550464), (0.55, 0.88396573, 0.8550464), (0.55, 1.2144166, -0.19414485), (-0.55, 1.2144166, -0.19414485), (-0.55, 1.2144166, -0.19414485), (0.55, 1.2144166, -0.19414485), (0.55, 0.08358352, -0.5436118), (-0.55, 0.08358352, -0.5436118), (-0.55, 0.08358352, -0.5436118), (0.55, 0.08358352, -0.5436118), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.08358352, -0.5436118), (0.55, -0.08358351, 0.5436118), (0.55, -0.08358351, 0.5436118), (0.55, 0.08358352, -0.5436118), (0.55, 1.2144166, -0.19414485), (0.55, 0.88396573, 0.8550464), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.08358351, 0.5436118), (-0.55, 0.08358352, -0.5436118), (-0.55, 0.08358352, -0.5436118), (-0.55, -0.08358351, 0.5436118), (-0.55, 0.88396573, 0.8550464), (-0.55, 1.2144166, -0.19414485)],
            9: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.09229542, 0.5422007), (-0.55, -0.09229542, 0.5422007), (-0.55, -0.09229542, 0.5422007), (0.55, -0.09229542, 0.5422007), (0.55, 0.85607433, 0.8829703), (-0.55, 0.85607433, 0.8829703), (-0.55, 0.85607433, 0.8829703), (0.55, 0.85607433, 0.8829703), (0.55, 1.2200208, -0.1550774), (-0.55, 1.2200208, -0.1550774), (-0.55, 1.2200208, -0.1550774), (0.55, 1.2200208, -0.1550774), (0.55, 0.09229543, -0.5422007), (-0.55, 0.09229543, -0.5422007), (-0.55, 0.09229543, -0.5422007), (0.55, 0.09229543, -0.5422007), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.09229543, -0.5422007), (0.55, -0.09229542, 0.5422007), (0.55, -0.09229542, 0.5422007), (0.55, 0.09229543, -0.5422007), (0.55, 1.2200208, -0.1550774), (0.55, 0.85607433, 0.8829703), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.09229542, 0.5422007), (-0.55, 0.09229543, -0.5422007), (-0.55, 0.09229543, -0.5422007), (-0.55, -0.09229542, 0.5422007), (-0.55, 0.85607433, 0.8829703), (-0.55, 1.2200208, -0.1550774)],
            10: [(-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -0.095540166, 0.5416383), (-0.55, -0.095540166, 0.5416383), (-0.55, -0.095540166, 0.5416383), (0.55, -0.095540166, 0.5416383), (0.55, 0.8454397, 0.8931582), (-0.55, 0.8454397, 0.8931582), (-0.55, 0.8454397, 0.8931582), (0.55, 0.8454397, 0.8931582), (0.55, 1.2217904, -0.1404569), (-0.55, 1.2217904, -0.1404569), (-0.55, 1.2217904, -0.1404569), (0.55, 1.2217904, -0.1404569), (0.55, 0.09554019, -0.5416383), (-0.55, 0.09554019, -0.5416383), (-0.55, 0.09554019, -0.5416383), (0.55, 0.09554019, -0.5416383), (0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (-0.55, -1.1, -0.55), (0.55, -1.1, -0.55), (0.55, -1.1, 0.55), (-0.55, -1.1, 0.55), (0.55, -1.1, 0.55), (0.55, -1.1, -0.55), (0.55, 0.09554019, -0.5416383), (0.55, -0.095540166, 0.5416383), (0.55, -0.095540166, 0.5416383), (0.55, 0.09554019, -0.5416383), (0.55, 1.2217904, -0.1404569), (0.55, 0.8454397, 0.8931582), (-0.55, -1.1, -0.55), (-0.55, -1.1, 0.55), (-0.55, -0.095540166, 0.5416383), (-0.55, 0.09554019, -0.5416383), (-0.55, 0.09554019, -0.5416383), (-0.55, -0.095540166, 0.5416383), (-0.55, 0.8454397, 0.8931582), (-0.55, 1.2217904, -0.1404569)],
        }
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 1.1, 0), (1.1, 0, 0, 0), (0, 1.1, 0, 0), (1, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0] (
            elementSize = 3
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
    }

    def Sphere "Sphere" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 0.1, 0), (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0.5, 0.5, 1) )
        int[] primvars:skel:jointIndices = [0] (
            elementSize = 1
            interpolation = "constant"
        )
        float[] primvars:skel:jointWeights = [1] (
            elementSize = 1
            interpolation = "constant"
        )
        matrix4d xformOp:transform.timeSamples = {
            1: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            2: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            3: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            4: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            5: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            6: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            7: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            8: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            9: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
            10: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, -1, 0.5, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Cube "Cube" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 0.1, 0), (0.1, 0, 0, 0), (0, 0.1, 0, 0), (1, 0.5, 0.5, 1) )
        int[] primvars:skel:jointIndices = [0, 1] (
            elementSize = 2
            interpolation = "constant"
        )
        float[] primvars:skel:jointWeights = [0.5, 0.5] (
            elementSize = 2
            interpolation = "constant"
        )
        uniform token[] skel:joints = ["joint1", "joint1/joint2"]
        matrix4d xformOp:transform.timeSamples = {
            1: ( (0.10000002384185791, 0, 0, 0), (0, 0.10000002384185791, 0, 0), (0, 0, 0.10000002384185791, 0), (0.5, 0, 0.5, 1) ),
            2: ( (0.10000002384185791, 0, 0, 0), (0, 0.09999823570251465, 0.0005987584590911865, 0), (0, -0.0005987451877444983, 0.09999826550483704, 0), (0.5, -0.0029937224462628365, 0.4999910295009613, 1) ),
            3: ( (0.10000002384185791, 0, 0, 0), (0, 0.09997574985027313, 0.002203226089477539, 0), (0, -0.0022032177075743675, 0.09997576475143433, 0), (0.5, -0.011016079224646091, 0.4998786449432373, 1) ),
            4: ( (0.10000002384185791, 0, 0, 0), (0, 0.0998975932598114, 0.004524976015090942, 0), (0, -0.004524994641542435, 0.0998975932598114, 0), (0.5, -0.02262495830655098, 0.49948784708976746, 1) ),
            5: ( (0.10000002384185791, 0, 0, 0), (0, 0.09973509609699249, 0.007274329662322998, 0), (0, -0.007274352014064789, 0.0997350811958313, 0), (0.5, -0.03637177124619484, 0.4986753463745117, 1) ),
            6: ( (0.10000002384185791, 0, 0, 0), (0, 0.09948243945837021, 0.010161161422729492, 0), (0, -0.010161161422729492, 0.09948241710662842, 0), (0.5, -0.05080579221248627, 0.4974120855331421, 1) ),
            7: ( (0.10000002384185791, 0, 0, 0), (0, 0.09916487336158752, 0.012896955013275146, 0), (0, -0.01289694756269455, 0.09916490316390991, 0), (0.5, -0.06448472291231155, 0.49582427740097046, 1) ),
            8: ( (0.10000002384185791, 0, 0, 0), (0, 0.09883853793144226, 0.015197038650512695, 0), (0, -0.01519700139760971, 0.09883856773376465, 0), (0.5, -0.07598501443862915, 0.49419254064559937, 1) ),
            9: ( (0.10000002384185791, 0, 0, 0), (0, 0.098581962287426, 0.016781002283096313, 0), (0, -0.016780994832515717, 0.0985819399356842, 0), (0.5, -0.083904929459095, 0.492909699678421, 1) ),
            10: ( (0.10000002384185791, 0, 0, 0), (0, 0.09847971796989441, 0.01737096905708313, 0), (0, -0.01737094670534134, 0.09847971796989441, 0), (0.5, -0.08685468882322311, 0.4923984706401825, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Cylinder "Cylinder" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        matrix4d primvars:skel:geomBindTransform = ( (0, 0, 0.1, 0), (0.1, 0, 0, 0), (0, 0.1, 0, 0), (2, 0.5, 0.5, 1) )
        int[] primvars:skel:jointIndices = [0] (
            elementSize = 1
            interpolation = "constant"
        )
        float[] primvars:skel:jointWeights = [1] (
            elementSize = 1
            interpolation = "constant"
        )
        uniform token[] skel:joints = ["joint1/joint2/joint3"]
        matrix4d xformOp:transform.timeSamples = {
            1: ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0.5, 1, 0.5, 1) ),
            2: ( (0.1, 0, 0, 0), (0, 0.09999282956123352, 0.0011974685825407506, 0), (0, -0.0011974685825407506, 0.09999282956123352, 0), (0.5, 0.9939409526996315, 0.5119388336315751, 1) ),
            3: ( (0.1, 0, 0, 0), (0, 0.09990291595458985, 0.004405363649129868, 0), (0, -0.004405363649129868, 0.09990291595458985, 0), (0.5, 0.9770023413002491, 0.5435682162642479, 1) ),
            4: ( (0.1, 0, 0, 0), (0, 0.09959048628807068, 0.009040717780590058, 0), (0, -0.009040717780590058, 0.09959048628807068, 0), (0.5, 0.9507012739777565, 0.588359609246254, 1) ),
            5: ( (0.1, 0, 0, 0), (0, 0.0989416778087616, 0.014510160684585572, 0), (0, -0.014510160684585572, 0.0989416778087616, 0), (0.5, 0.9168659746646881, 0.6398099958896637, 1) ),
            6: ( (0.1, 0, 0, 0), (0, 0.09793501496315003, 0.020217134058475496, 0), (0, -0.020217134058475496, 0.09793501496315003, 0), (0.5, 0.8782644793391228, 0.6918464154005051, 1) ),
            7: ( (0.1, 0, 0, 0), (0, 0.09667337536811829, 0.025578474998474123, 0), (0, -0.025578474998474123, 0.09667337536811829, 0), (0.5, 0.8388413786888123, 0.7391516268253326, 1) ),
            8: ( (0.1, 0, 0, 0), (0, 0.09538102149963379, 0.030040982365608218, 0), (0, -0.030040982365608218, 0.09538102149963379, 0), (0.5, 0.8036053031682968, 0.7773149311542511, 1) ),
            9: ( (0.1, 0, 0, 0), (0, 0.0943679690361023, 0.033086043596267704, 0), (0, -0.033086043596267704, 0.0943679690361023, 0), (0.5, 0.7782494723796844, 0.8027002811431885, 1) ),
            10: ( (0.1, 0, 0, 0), (0, 0.0939650058746338, 0.034213697910308837, 0), (0, -0.034213697910308837, 0.0939650058746338, 0), (0.5, 0.7685815691947937, 0.8119620084762573, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

