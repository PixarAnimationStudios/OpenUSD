#usda 1.0
(
    endTimeCode = 103
    startTimeCode = 103
)

def Xform "World" (
    customData = {
        bool zUp = 1
    }
    kind = "group"
    add references = @./letters_perFrame.protos.usda@</World>
)
{
    def Xform "fx" (
        kind = "group"
    )
    {
        def Xform "Letters" (
            kind = "component"
        )
        {
            float interface:value = 0

            def PointInstancer "points"
            {
                int[] indices.timeSamples = {
                    103: [0, 1, 0, 0, 0, 0, 1, 2, 1, 1, 2, 0, 1, 2, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2, 1, 1, 0, 0, 0, 1, 0, 2, 2, 1, 2, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 2, 2, 1, 2, 0, 2, 2, 0, 0, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 1, 2, 1, 1, 2, 0, 0, 0, 2, 1, 1, 0, 1, 0, 0, 2],
                }
                point3f[] positions.timeSamples = {
                    103: [(0.0391328, -0.236737, -0.23277), (0.201776, 0.570584, 0.271795), (0.0810943, 0.342387, -0.016776), (0.0296972, 0.259098, -0.328396), (0.0548482, -0.292178, 0.604324), (0.567663, -0.563828, 0.0422139), (-0.0816956, -0.0491279, -0.0129036), (-0.188178, -0.354574, 0.220934), (0.0340033, 0.135661, 0.344432), (0.299868, 0.188369, 0.191585), (-0.577849, -0.1839, 0.0677248), (0.154641, -0.194728, 0.0209719), (0.233947, -0.60287, 0.169153), (-0.163449, 0.277808, 0.548057), (0.200551, 0.571194, 0.0205716), (-0.253586, 0.573894, 0.154121), (-0.0440775, -0.575155, -0.16812), (-0.387179, 0.139954, 0.117123), (-0.0311118, -0.0369829, -0.388225), (-0.541686, -0.513794, -0.577171), (-0.00459837, -0.29946, 0.00956537), (-0.248556, 0.124014, -0.581836), (-0.314733, -0.507615, -0.580939), (-0.208033, 0.390015, 0.29781), (-0.150493, -0.172996, 0.201837), (-0.0232585, 0.0122367, 0.580899), (0.545277, -0.270764, 0.567519), (-0.191162, -0.596476, -0.204211), (0.493145, -0.532488, -0.565949), (0.0598562, 0.147491, 0.175737), (-0.226826, -0.28888, -0.0192799), (0.102361, -0.154673, 0.296054), (-0.145847, 0.0533452, -0.22753), (-0.436508, -0.253867, 0.583651), (-0.403738, 0.584311, 0.0587066), (-0.568511, 0.487094, -0.360917), (0.266217, -0.00803526, -0.567156), (0.575123, 0.385558, -0.505802), (-0.321373, 0.26927, -0.0667159), (-0.57297, -0.186944, -0.1784), (-0.567916, 0.338448, 0.0542435), (-0.00521491, -0.581366, 0.112459), (-0.525195, -0.587148, 0.218395), (0.303658, -0.360408, 0.231265), (-0.579028, 0.0494049, -0.249669), (0.0397156, -0.609416, 0.287861), (0.528555, -0.0184629, -0.0477501), (0.186991, 0.23626, 0.570634), (-0.611289, -0.462035, 0.148157), (0.182273, -0.0448946, -0.249697), (0.399822, -0.227516, -0.170455), (-0.215495, 0.0508002, 0.292843), (0.0576342, 0.154863, -0.572812), (0.519017, -0.00188308, 0.434013), (0.284391, -0.0335765, 0.254947), (0.021804, 0.36024, 0.232063), (0.0805173, -0.0396982, 0.116668), (0.46659, -0.170924, 0.225527), (0.258409, -0.361156, -0.29755), (-0.298184, -0.0295494, -0.0552222), (-0.378545, -0.572275, -0.230254), (0.573751, -0.255065, 0.0612423), (-0.22283, 0.571236, 0.0186231), (0.587101, 0.216711, 0.198257), (0.567174, 0.136414, -0.258867), (0.335412, 0.324858, -0.150352), (-0.430324, 0.269803, 0.607696), (0.294969, -0.567425, 0.516876), (0.520744, -0.571328, -0.0198111), (-0.177769, -0.521537, 0.506667), (0.121755, 0.599365, 0.439965), (0.22637, -0.16158, 0.567318), (0.555392, 0.567606, 0.240848), (-0.591213, 0.162424, 0.369237), (0.593943, -0.255506, -0.415109), (-0.590718, 0.305472, 0.171159), (-0.0796784, 0.457691, -0.600024), (0.115028, 0.466201, 0.581994), (-0.487041, 0.605139, 0.503064), (-0.580923, 0.560622, 0.399788), (0.499092, -0.147173, -0.574975), (-0.187323, -0.0526285, 0.574903), (-0.393078, -0.122582, -0.5304), (-0.0734016, 0.199279, -0.0674653), (-0.169008, 0.219461, 0.133586), (0.143468, 0.586251, -0.323291), (0.271397, -0.351865, -0.0521398), (0.488684, 0.510857, 0.572988), (-0.393031, -0.072166, 0.191623), (0.28056, 0.265083, -0.577049), (-0.580922, -0.441827, -0.200148), (-0.381101, 0.272447, -0.310911), (0.0739282, -0.381705, -0.586312), (-0.236935, 0.590965, -0.527791), (0.551015, 0.508417, -0.0750031), (-0.200401, -0.186921, -0.275238), (0.126405, -0.565678, -0.495928), (-0.152096, 0.371993, -0.226716), (0.150893, 0.183639, -0.200211), (0.256237, 0.0843636, -0.036352)],
                }
                prepend rel prototypes = [
                    </World/fx/Letters/points/Prototypes/obj/proto_3>,
                    </World/fx/Letters/points/Prototypes/obj/proto_4>
                ]
                float4[] rotations.timeSamples = {
                    103: [(0.650927, 0.577399, 0.108179, 0.480835), (0.24044, 0.670198, 0.221866, 0.666182), (0.754384, -0.0578306, -0.365636, -0.542098), (0.601545, -0.520911, -0.22083, -0.563941), (0.832915, 0.00307937, 0.256912, 0.490142), (0.894999, 0.338849, 0.286989, 0.0423736), (-0.252206, 0.889015, 0.371789, 0.0884096), (0.959208, -0.185088, -0.00820357, -0.213531), (0.517008, -0.312358, -0.796494, -0.0270792), (0.81649, 0.0501023, 0.385829, 0.42658), (0.411608, 0.448089, 0.577589, 0.54423), (0.853905, -0.30439, -0.318736, -0.276769), (0.389174, 0.551592, 0.306319, 0.671162), (0.988957, 0.0210512, 0.144468, 0.0255107), (-0.22477, 0.759538, 0.174198, 0.585009), (0.908709, -0.132348, -0.358026, -0.168964), (0.645864, -0.757002, -0.065268, -0.074481), (0.799085, -0.512597, -0.306632, -0.0684445), (0.555246, 0.704181, 0.431429, 0.0984881), (0.905879, 0.163884, 0.220762, 0.322163), (0.877124, -0.372413, -0.290021, -0.088598), (-0.0663022, 0.476797, 0.859646, 0.171105), (0.662089, 0.320306, 0.638447, 0.226778), (0.968109, -0.13433, -0.170694, -0.124837), (0.991853, -0.0818752, -0.0963047, -0.0157847), (0.105995, 0.108834, 0.891166, 0.427486), (0.904157, -0.305169, -0.270334, -0.127642), (-0.146413, 0.759169, 0.634193, 0.00498388), (0.977042, 0.080249, 0.158179, 0.118017), (0.0367428, 0.637854, 0.623318, 0.450851), (0.410001, 0.186188, 0.375718, 0.809981), (-0.335642, 0.848075, 0.370913, 0.174749), (0.281449, 0.0665848, 0.876576, 0.384665), (-0.327451, 0.610202, 0.721192, 0.0176253), (-0.370621, 0.332188, 0.835558, 0.232669), (0.278252, 0.411527, 0.532631, 0.68522), (0.974309, -0.0561417, -0.143867, -0.163931), (0.0294083, 0.0716045, 0.433289, 0.897925), (0.941775, -0.153191, -0.0495404, -0.295192), (0.925341, 0.201095, 0.256627, 0.193511), (0.53722, -0.366743, -0.540049, -0.534081), (0.789835, -0.44347, -0.194851, -0.376202), (0.763911, -0.313597, -0.439122, -0.353933), (0.578968, -0.39154, -0.521691, -0.489214), (-0.241661, 0.581511, 0.456168, 0.628773), (0.150494, 0.179555, 0.683133, 0.691694), (0.4717, 0.512088, 0.563174, 0.445085), (0.853623, -0.0890477, -0.294086, -0.420608), (-0.0482963, 0.650975, 0.0960288, 0.75145), (-0.433716, 0.615534, 0.139781, 0.643017), (0.651044, 0.410135, 0.246258, 0.589312), (0.326347, 0.518061, 0.678491, 0.405907), (0.401949, 0.454826, 0.75413, 0.250716), (0.143196, 0.498903, 0.526704, 0.673182), (0.58347, 0.572368, 0.534388, 0.215378), (0.854163, -0.220061, -0.398701, -0.251031), (0.190517, 0.700238, 0.119394, 0.67758), (0.548155, -0.00822632, -0.491122, -0.676947), (-0.33833, 0.24292, 0.659658, 0.625599), (-0.333811, 0.53343, 0.652708, 0.421895), (0.258851, 0.0613703, 0.0302189, 0.963492), (0.997428, 0.00815537, 0.0574705, 0.0420422), (-0.32075, 0.0347151, 0.748933, 0.578803), (0.987369, -0.00816173, -0.0581931, -0.147139), (0.838456, 0.114476, 0.0943943, 0.524382), (0.751804, -0.464941, -0.420604, -0.20424), (0.541834, -0.71562, -0.403094, -0.178378), (0.788277, 0.554689, 0.248289, 0.0963929), (0.828793, 0.0966899, 0.441836, 0.329446), (0.819211, 0.240666, 0.0653665, 0.51643), (0.233963, 0.782391, 0.527887, 0.233369), (-0.172528, 0.32323, 0.67653, 0.638798), (0.151961, 0.740773, 0.594638, 0.273074), (0.404239, 0.853081, 0.321264, 0.0750612), (-0.361157, 0.45478, 0.440453, 0.684647), (0.965387, -0.133537, -0.0916094, -0.204458), (0.376131, 0.212718, 0.109922, 0.895094), (0.042274, 0.416303, 0.811734, 0.407423), (0.195576, 0.0758335, 0.634091, 0.744264), (-0.248711, 0.123601, 0.528658, 0.802114), (0.00572819, 0.663527, 0.635989, 0.393976), (0.99373, -0.0788709, -0.0350686, -0.0710595), (0.727667, -0.617176, -0.28551, -0.0898849), (0.512354, -0.558176, -0.582474, -0.294378), (0.569822, -0.415996, -0.703524, -0.0854646), (-0.0880757, 0.805731, 0.585683, 0.0039271), (0.550515, 0.602806, 0.568964, 0.0991852), (0.796407, 0.374569, 0.254429, 0.400874), (0.465073, 0.0749571, 0.762364, 0.443722), (0.98712, 0.0564885, 0.0698368, 0.132385), (-0.355127, 0.842639, 0.343599, 0.213971), (0.617231, 0.462549, 0.550665, 0.319127), (0.413392, 0.465705, 0.719682, 0.307055), (0.819071, -0.187332, -0.377344, -0.389411), (0.973865, -0.0758586, -0.0769396, -0.199781), (0.985046, -0.113511, -0.0731544, -0.106998), (0.900872, 0.132201, 0.304162, 0.280066), (-0.173334, 0.810504, 0.27684, 0.486208), (0.617203, 0.399308, 0.640377, 0.222554), (-0.379458, 0.512059, 0.656138, 0.404093)],
                }
                float[] uniformScales.timeSamples = {
                    103: [0.27456024, 0.16262728, 0.2560335, 0.11173135, 0.0782597, 0.14566295, 0.08941458, 0.34623253, 0.062243283, 0.2875672, 0.35738733, 0.06497519, 0.20132944, 0.23765862, 0.3816794, 0.117070675, 0.31962937, 0.16039336, 0.22805402, 0.17005432, 0.06027773, 0.15596764, 0.15051876, 0.1867946, 0.23196653, 0.10159181, 0.17363104, 0.2813436, 0.108551115, 0.21357751, 0.08864503, 0.19030848, 0.19016574, 0.21872686, 0.31331667, 0.35685536, 0.2635986, 0.06064452, 0.29268065, 0.2687485, 0.13467196, 0.13989174, 0.07882731, 0.21463564, 0.1283829, 0.07336319, 0.2067361, 0.14821903, 0.3845435, 0.23483066, 0.2503989, 0.13265748, 0.06909527, 0.21146916, 0.0867881, 0.12607354, 0.14152303, 0.25199667, 0.34017935, 0.26829898, 0.100051925, 0.3004056, 0.25131127, 0.17463917, 0.12747231, 0.18572016, 0.14677186, 0.21996112, 0.27578834, 0.1107236, 0.19282275, 0.36199346, 0.2566451, 0.05393062, 0.3738942, 0.3450872, 0.28548715, 0.1859822, 0.38395056, 0.24031071, 0.28287685, 0.28819668, 0.051998544, 0.074500896, 0.30286098, 0.19496681, 0.17254275, 0.10070369, 0.06320787, 0.08906406, 0.11659373, 0.26511246, 0.35494614, 0.30591807, 0.05303462, 0.36852646, 0.15586482, 0.22638173, 0.21754223, 0.24028894],
                }
                matrix4d xformOp:transform.timeSamples = {
                    103: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
                }
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over Xform "Prototypes"
                {
                    over Xform "obj"
                    {
                    }
                }
                # Create a connection to an interface attribute.  This tests
                # merging connection paths.
                float internalValue;
                prepend float internalValue.connect = </World/fx/Letters.interface:value>
            }
        }
    }
}

