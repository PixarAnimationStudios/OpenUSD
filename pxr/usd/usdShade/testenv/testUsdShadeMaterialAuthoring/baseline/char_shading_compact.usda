#usda 1.0
(
    defaultPrim = "ModelShading"
    metersPerUnit = 0.01
    upAxis = "Y"
)

def "ModelShading" (
    prepend references = </ShadingDefs>
    variants = {
        string materialVariant = "Wet"
    }
    prepend variantSets = "materialVariant"
)
{
    variantSet "materialVariant" = {
        "Dry" {
            over "Materials"
            {
                over "HairMaterial" (
                    variants = {
                        string materialVariant = "Dry"
                    }
                )
                {
                }

                over "SkinMaterial" (
                    variants = {
                        string materialVariant = "Dry"
                    }
                )
                {
                }

                over "NailsMaterial" (
                    variants = {
                        string materialVariant = "Dry"
                    }
                )
                {
                }
            }

        }
        "Wet" {
            over "Materials"
            {
                over "HairMaterial" (
                    variants = {
                        string materialVariant = "Wet"
                    }
                )
                {
                }

                over "SkinMaterial" (
                    variants = {
                        string materialVariant = "Wet"
                    }
                )
                {
                }

                over "NailsMaterial" (
                    variants = {
                        string materialVariant = "Wet"
                    }
                )
                {
                }
            }

        }
    }
}

over "ShadingDefs"
{
    def Scope "Shaders"
    {
        def Shader "HairWetSurface"
        {
            token outputs:surface
        }

        def Shader "HairWetDisplacement"
        {
            token outputs:displacement
        }

        def Shader "HairDrySurface"
        {
            token outputs:surface
        }

        def Shader "HairDryDisplacement"
        {
            token outputs:displacement
        }

        def Shader "SkinWetSurface"
        {
            token outputs:surface
        }

        def Shader "SkinWetDisplacement"
        {
            token outputs:displacement
        }

        def Shader "SkinDrySurface"
        {
            token outputs:surface
        }

        def Shader "SkinDryDisplacement"
        {
            token outputs:displacement
        }

        def Shader "NailsWetSurface"
        {
            token outputs:surface
        }

        def Shader "NailsWetDisplacement"
        {
            token outputs:displacement
        }

        def Shader "NailsDrySurface"
        {
            token outputs:surface
        }

        def Shader "NailsDryDisplacement"
        {
            token outputs:displacement
        }
    }

    def Scope "Materials"
    {
        def Material "HairMaterial" (
            prepend references = </ShadingDefs/Shaders>
            variants = {
                string materialVariant = "Dry"
            }
            prepend variantSets = "materialVariant"
        )
        {
            variantSet "materialVariant" = {
                "Dry" {
                    token outputs:displacement.connect = </ShadingDefs/Materials/HairMaterial/HairDryDisplacement.outputs:displacement>
                    token outputs:surface.connect = </ShadingDefs/Materials/HairMaterial/HairDrySurface.outputs:surface>

                }
                "Wet" {
                    token outputs:displacement.connect = </ShadingDefs/Materials/HairMaterial/HairWetDisplacement.outputs:displacement>
                    token outputs:surface.connect = </ShadingDefs/Materials/HairMaterial/HairWetSurface.outputs:surface>

                }
            }
        }

        def Material "SkinMaterial" (
            prepend references = </ShadingDefs/Shaders>
            variants = {
                string materialVariant = "Dry"
            }
            prepend variantSets = "materialVariant"
        )
        {
            variantSet "materialVariant" = {
                "Dry" {
                    token outputs:displacement.connect = </ShadingDefs/Materials/SkinMaterial/SkinDryDisplacement.outputs:displacement>
                    token outputs:surface.connect = </ShadingDefs/Materials/SkinMaterial/SkinDrySurface.outputs:surface>

                }
                "Wet" {
                    token outputs:displacement.connect = </ShadingDefs/Materials/SkinMaterial/SkinWetDisplacement.outputs:displacement>
                    token outputs:surface.connect = </ShadingDefs/Materials/SkinMaterial/SkinWetSurface.outputs:surface>

                }
            }
        }

        def Material "NailsMaterial" (
            prepend references = </ShadingDefs/Shaders>
            variants = {
                string materialVariant = "Dry"
            }
            prepend variantSets = "materialVariant"
        )
        {
            variantSet "materialVariant" = {
                "Dry" {
                    token outputs:displacement.connect = </ShadingDefs/Materials/NailsMaterial/NailsDryDisplacement.outputs:displacement>
                    token outputs:surface.connect = </ShadingDefs/Materials/NailsMaterial/NailsDrySurface.outputs:surface>

                }
                "Wet" {
                    token outputs:displacement.connect = </ShadingDefs/Materials/NailsMaterial/NailsWetDisplacement.outputs:displacement>
                    token outputs:surface.connect = </ShadingDefs/Materials/NailsMaterial/NailsWetSurface.outputs:surface>

                }
            }
        }
    }
}

