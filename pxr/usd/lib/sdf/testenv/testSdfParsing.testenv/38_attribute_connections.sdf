#sdf 1.4.32
(
    """Test of attribute value connections."""
    framesPerSecond = 24
    framePrecision = 3
)

def MfScope "attribute_connect_tests"
{
    custom double a0
    double a0.connect = </attribute_connect_tests/Foo/Bar.blah>
    custom double a1 = 123
    double a1.connect = </attribute_connect_tests/Foo/Bar.blah>
    custom double a2 = 123 (
        """blah blah"""
        doc = """test"""
    )
    double a2.connect = </attribute_connect_tests/Foo/Bar.blah>
    custom double a3
    double a3.connect = [
        </attribute_connect_tests/Foo/Bar.blah>,
        </Blah/Blah.boo>,
    ]
    custom double a5 = 456 (
        """blah blah"""
    )
    double a5.connect = [
        </attribute_connect_tests/Foo/Bar.blah>,
        </Blah/Blah.boo>,
    ]
    custom double a6
    double a6.connect = None
}

def MfScope "attribute_rel_connect_tests"
{
    custom double a0
    double a0.connect = <../Bar.blah>
    custom double a1 = 123
    double a1.connect = <../Bar.blah>
    custom double a2 = 123 (
        """blah blah"""
        doc = """test"""
    )
    double a2.connect = <../Bar.blah>
    custom double a3
    double a3.connect = [
        <../Bar.blah>,
        <../Blah/Blah.boo>,
    ]
    custom double a5 = 456 (
        """blah blah"""
    )
    double a5.connect = [
        <../Bar.blah>,
        <../Blah/Blah.boo>,
    ]
    custom double a6
    double a6.connect = None
}

def MfScope "mapper_tests"
{
    custom double a0
    double a0.connect = </mapper_tests/Foo/Bar.blah>
    double a0.mapper[ </mapper_tests/Foo/Bar.blah> ] = TestMapper
    custom double a0b
    double a0b.mapper[ </mapper_tests/Foo/Bar.blah> ] = TestMapper
    custom double a1
    double a1.connect = </mapper_tests/Foo/Bar.blah>
    double a1.mapper[ </mapper_tests/Foo/Bar.blah> ] = TestMapper {
        double f0 = 0
        double f1 = 3.14159
        double f2 = 10000000000
        double f3 = -0.000001
        double[] f4 = [0, 1.2, 3.4, 5.6, 7800000000, 0]
        double[] f5 = [0, 1.2, 3.4, 5.6, 7800000000, 0]
        double[] f6 = [0, 1.2, 3.4, 5.6, 7800000000, 0]
    }
    custom double a2
    double a2.connect = [
        </mapper_tests/Test/Type.bool>,
        </mapper_tests/Test/Type.int>,
        </mapper_tests/Test/Type.float>,
        </mapper_tests/Test/Type.vec2d>,
        </mapper_tests/Test/Type.vec3d>,
        </mapper_tests/Test/Type.matrix4d>,
    ]
    double a2.mapper[ </mapper_tests/Test/Type.int> ] = TestMapper {
        int i0 = 0
        int i1 = 1
        int[] i2 = [0, 1, 2, 3, 4]
        int[] i3 = [0, 1, 2, 3]
        int[] i4 = [0, 1, 3, 5, 7, 0]
    }
    double a2.mapper[ </mapper_tests/Test/Type.bool> ] = TestMapper {
        bool b0 = 0
        bool b1 = 1
        bool[] b2 = [0, 1, 1, 0]
    }
    double a2.mapper[ </mapper_tests/Test/Type.float> ] = TestMapper {
        float f0 = 0
        float f1 = 3.14159
        float f2 = 100000
        float f3 = -0.000001
        float[] f4 = [0, 1.2, 3.4, 5.6, 0]
        float[] f5 = [0, 1.2, 3.4, 5.6]
        float[] f6 = [0, 1.2, 3.4, 5.6, 0]
    }
    double a2.mapper[ </mapper_tests/Test/Type.string> ] = TestMapper {
        string s0 = ""
        string s1 = "foo"
        string[] s2 = ["foo", "bar"]
        string[] s3 = ["foo", "bar"]
    }
}

