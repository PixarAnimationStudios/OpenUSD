#usda 1.0
(
    "WARNING: THIS FILE IS GENERATED.  DO NOT EDIT."
)

class "ModelAPI" (
    doc = """UsdModelAPI is an API schema that provides an interface to a prim's
    model qualities, if it does, in fact, represent the root prim of a model.
    
    The first and foremost model quality is its kind, i.e. the metadata 
    that establishes it as a model (See KindRegistry).  UsdModelAPI provides
    various methods for setting and querying the prim's kind, as well as
    queries (also available on UsdPrim) for asking what category of model
    the prim is.  See \"Kind and Model-ness\".
    
    UsdModelAPI also provides access to a prim's \"assetInfo\"
    data.  While any prim can host assetInfo, it is common that published
    (referenced) assets are packaged as models, therefore it is convenient
    to provide access to the one from the other.
    
    \\todo establish an _IsCompatible() override that returns IsModel()
    \\todo GetModelInstanceName()
    """
)
{
}

class "ClipsAPI" (
    doc = """ UsdClipsAPI is an API schema that provides an interface to
    a prim's clip metadata. Clips are a \"value resolution\" feature that 
    allows one to specify a sequence of usd files (clips) to be consulted, 
    over time, as a source of varying overrides for the prims at and 
    beneath this model prim in namespace.

    Clips are a \"value resolution\" feature that allows one to specify           
    a sequence of usd files (clips) to be consulted, over time, as a source         
    of varying overrides for the prims at and beneath this model prim in            
    namespace.          
            
    SetClipAssetPaths() establishes the set of clips that can be consulted.         
    SetClipActive() specifies the ordering of clip application over time            
    (clips can be repeated), while SetClipTimes() specifies time-mapping            
    from stage-time to clip-time for the clip active at a given stage-time,         
    which allows for time-dilation and repetition of clips. 
    Finally, SetClipPrimPath() determines the path within each clip that will map            
    to this prim, i.e. the location within the clip at which we will look           
    for opinions for this prim. 

    The clipAssetPaths, clipTimes and clipActive metadata can also be specified 
    through template clip metadata. This can be desirable when your set of 
    assets is very large, as the template metadata is much more concise. 
    SetClipTemplateAssetPath() establishes the asset identifier pattern of the set of
    clips to be consulted. SetClipTemplateStride(), SetClipTemplateEndTime(), 
    and SetClipTemplateStartTime() specify the range in which USD will search, based
    on the template. From the set of resolved asset paths, clipTimes, and clipActive
    will be derived internally.
                
    Important facts about clips:            
    li Within the layerstack in which clips are established, the           
    opinions within the clips will be em weaker than any direct opinions           
    in the layerstack, but em stronger than varying opinions coming across             
    references and variants.            
    li We will never look for metadata or default opinions in clips            
    when performing value resolution on the owning stage, since these           
    quantities must be time-invariant.          
            
    This leads to the common structure in which we reference a model asset          
    on a prim, and then author clips at the same site: the asset reference          
    will provide the topology and unvarying data for the model, while           
    the clips will provide the time-sampled animation.
    """
)
{
}

