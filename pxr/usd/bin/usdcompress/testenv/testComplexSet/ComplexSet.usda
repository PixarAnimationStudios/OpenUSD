#usda 1.0
(
    defaultPrim = "ComplexSet"
    upAxis = "Z"
)

def Xform "ComplexSet" (
    assetInfo = {
        asset identifier = @./ComplexSet.usda@
        string name = "ComplexSet"
    }
    kind = "assembly"
)
{
    def Xform "Geom"
    {
        def Camera "PerspCamUnderGeom"
        {
            float2 clippingRange = (0.1, 10000)
            float focalLength = 35
            float focusDistance = 5
            float fStop = 11
            float horizontalAperture = 36
            float horizontalApertureOffset = 25.4
            token projection = "perspective"
            float verticalAperture = 24
            float verticalApertureOffset = 50.8
            float xformOp:rotateX = 45
            double3 xformOp:translate = (0, -5, 5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateX"]
        }

        def Xform "CubesHero"
        {
            def Camera "PerspCamUnderCubesHero"
            {
                float2 clippingRange = (0.1, 10000)
                float focalLength = 35
                float focusDistance = 5
                float fStop = 11
                float horizontalAperture = 36
                float horizontalApertureOffset = 25.4
                token projection = "perspective"
                float verticalAperture = 24
                float verticalApertureOffset = 50.8
                float xformOp:rotateX = 45
                double3 xformOp:translate = (0, -30, 30)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateX"]
            }

            def Mesh "CubesHeroGeom101" (
                kind = "subcomponent"
            )
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.217638, 0.217638, 0.217638)]
                Vec3f xformOp:translate = (-5.0, 0.0, 0.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }

            def Mesh "CubesHeroGeom102" (
                kind = "subcomponent"
            )
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.217638, 0.217638, 0.217638)]
            }

            def Mesh "CubesHeroGeom103" (
                kind = "subcomponent"
            )
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.217638, 0.217638, 0.217638)]
                Vec3f xformOp:translate = (5.0, 0.0, 0.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }
        }

        def Xform "CubesFill" (
            kind = "subcomponent"
        )
        {
            def Camera "PerspCamUnderCubesFill"
            {
                float2 clippingRange = (0.1, 10000)
                float focalLength = 35
                float focusDistance = 5
                float fStop = 11
                float horizontalAperture = 36
                float horizontalApertureOffset = 25.4
                token projection = "perspective"
                float verticalAperture = 24
                float verticalApertureOffset = 50.8
                float xformOp:rotateX = 45
                double3 xformOp:translate = (0, -15, 15)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateX"]
            }

            def Mesh "CubesFillGeom101"
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.217638, 0.217638, 0.217638)]
                Vec3f xformOp:translate = (-5.0, 10.0, 0.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }

            def Mesh "CubesFillGeom102"
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.217638, 0.217638, 0.217638)]
                Vec3f xformOp:translate = (0.0, 10.0, 0.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }

            def Mesh "CubesFillGeom103"
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.217638, 0.217638, 0.217638)]
                Vec3f xformOp:translate = (5.0, 10.0, 0.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }
        }

        def Xform "Ref" (
            kind = "subcomponent"
        )
        {
            Vec3f xformOp:translate = (0.0, 30.0, 5.0)
            uniform token[] xformOpOrder = ["xformOp:translate"]

            def Mesh "RedCube" (
                kind = "subcomponent"
            )
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.9, 0.1, 0.1)]
                Vec3f xformOp:translate = (-20.0, 0.0, 0.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }

            def Mesh "GreenCube" (
                kind = "subcomponent"
            )
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.1, 0.9, 0.1)]
            }

            def Mesh "BlueCube" (
                kind = "subcomponent"
            )
            {
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.1, 0.1, 0.9)]
                Vec3f xformOp:translate = (20.0, 0.0, 0.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }
        }

        def Mesh "terrain" (
            hidden = true
        )
        {
            float3[] extent = [(-50.0, -50.0, -2.0), (50.0, 50.0, 2.0)]
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 3, 2]
            point3f[] points = [(-50.0, -50.0, 0), (50.0, -50.0, 0), (-50.0, 50.0, 0), (50.0, 50.0, 0)]
            color3f[] primvars:displayColor = [(0.21763764, 0.21763764, 0.21763764)]
            float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
                interpolation = "vertex"
            )
            int[] primvars:st:indices = [0, 1, 3, 2]
            Vec3f xformOp:translate = (0.0, 0.0, -1.0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
        }
    }
}
