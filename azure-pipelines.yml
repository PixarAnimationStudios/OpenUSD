trigger:
  branches:
    include:
    - '*'
  paths:
    exclude:
    - README.md

jobs:
- job: build_and_test
  displayName: Build and test with Latest VFX Platform
  pool:
    vmImage: 'ubuntu-16.04'
  container: aswftesting/ci-usd:2019
  timeoutInMinutes: 0
  steps:

  - bash: |
      set -ex
      echo "##vso[task.setvariable variable=sha;isOutput=true]`git rev-parse --short HEAD`"
    name: ccache_cache_keys
    displayName: Prepare ccache timestamp

  - task: CacheBeta@1
    displayName: CCache
    inputs:
      path: $(Pipeline.Workspace)/ccache
      key: usd-ccache-v1 | usd-ccache-$(ccache_cache_keys.sha)
      restoreKeys: |
        usd-ccache-v1

  - bash: |
      set -ex
      source activate_ccache.sh
      export CCACHE_DIR=$(Pipeline.Workspace)/ccache
      mkdir -p $(Pipeline.Workspace)/ccache

      mkdir build
      cd build
      cmake \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DOPENEXR_LOCATION=/usr/local \
        -DPXR_BUILD_TESTS=ON \
        -DPXR_BUILD_ALEMBIC_PLUGIN=OFF \
        ..
      make -j4
      sudo make install
    displayName: Build

  - bash: cd build && xvfb-run ctest -VV -E 'testusdview.*|testUsdRecord.*|testUsdAppUtilsFrameRecorder' -T test --output-on-failure
    displayName: Test
    continueOnError: true

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
