#usda 1.0

(
    upAxis = "Y"
    doc = """This layer represents the various geometric forms that curves
             may be used to represent."""
)

def "MyPattern" (
    prepend apiSchemas = ["DashDotPatternAPI"]
)
{
    uniform float patternPeriod = 15
    uniform float2[] pattern = [(0, 10)]
}

def Xform "Linear" {
    uniform token[] xformOpOrder = ["xformOp:translate"]
    float3 xformOp:translate = (0, 9, 0)
    def Scope "Ribbons"{
        def DashDotLines "StyledPolyline1" (
        inherits = [</MyPattern>]
    ){
            uniform token[] xformOpOrder = ["xformOp:translate"]
            float3 xformOp:translate = (0, 0, 0)

            uniform bool screenSpacePattern = true
            uniform token startCapType = "round"
            uniform token endCapType = "round"
            uniform float patternScale = 5

            int[] curveVertexCounts = [3, 4, 4]
            point3f[] points = [(0, 0, 0), (10, 10, 0), (10, 20, 0), (0, 30, 0), (-10, 40, 0), (-10, 50, 0), (0, 60, 0), (10, 70, 0), (10, 80, 0), (0, 90, 0), (-10, 100, 0)]
            float[] widths = [5] (interpolation = "constant")
            color3f[] primvars:displayColor = [(1, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 0), (1, 0 ,1), (0, 1, 1), (0, 1, 0), (0, 0, 1), (1, 1, 0), (1, 0 ,1), (0, 1, 1)](interpolation = "vertex")
        }
    }
}