<fragment uiName="lightingContributions" name="lightingContributions" type="structure" class="ShadeFragment" version="1.0" feature_level="0">
    <!-- WARNING: Do not edit this file. It was automatically generated by pxrUsdPreviewSurfaceGenFragments. -->
    <description>
        Structure to hold computed diffuse and specular lighting contributions for a light.
    </description>
    <properties>
        <struct name="lightingContributions" struct_name="LightingContributions"/>
    </properties>
    <values/>
    <outputs>
        <alias name="lightingContributions" struct_name="LightingContributions"/>
        <float3 name="diffuse"/>
        <float3 name="specular"/>
    </outputs>
    <implementation>
        <implementation render="OGSRenderer" language="Cg" lang_version="2.1">
            <function_name val=""/>
            <declaration name="LightingContributions">
                <![CDATA[

// Check whether we're in a GLSL context. If so, we don't expect "floatN"
// types to exist, so we use "vecN" types instead.
#if defined(__VERSION__) && (__VERSION__ >= 110)
#define float3 vec3
#endif

// line 101 of "../../../../pxr/usdImaging/lib/usdShaders/shaders/previewSurface.glslfx"

struct LightingContributions
{
    float3 diffuse;
    float3 specular;
};


]]>
            </declaration>
        </implementation>
        <implementation render="OGSRenderer" language="GLSL" lang_version="3.0">
            <function_name val=""/>
            <declaration name="LightingContributions">
                <![CDATA[

// Check whether we're in a GLSL context. If so, we don't expect "floatN"
// types to exist, so we use "vecN" types instead.
#if defined(__VERSION__) && (__VERSION__ >= 110)
#define float3 vec3
#endif

// line 101 of "../../../../pxr/usdImaging/lib/usdShaders/shaders/previewSurface.glslfx"

struct LightingContributions
{
    float3 diffuse;
    float3 specular;
};


]]>
            </declaration>
        </implementation>
        <implementation render="OGSRenderer" language="HLSL" lang_version="10.0">
            <function_name val=""/>
            <declaration name="LightingContributions">
                <![CDATA[

// Check whether we're in a GLSL context. If so, we don't expect "floatN"
// types to exist, so we use "vecN" types instead.
#if defined(__VERSION__) && (__VERSION__ >= 110)
#define float3 vec3
#endif

// line 101 of "../../../../pxr/usdImaging/lib/usdShaders/shaders/previewSurface.glslfx"

struct LightingContributions
{
    float3 diffuse;
    float3 specular;
};


]]>
            </declaration>
        </implementation>
        <implementation render="OGSRenderer" language="HLSL" lang_version="11.0">
            <function_name val=""/>
            <declaration name="LightingContributions">
                <![CDATA[

// Check whether we're in a GLSL context. If so, we don't expect "floatN"
// types to exist, so we use "vecN" types instead.
#if defined(__VERSION__) && (__VERSION__ >= 110)
#define float3 vec3
#endif

// line 101 of "../../../../pxr/usdImaging/lib/usdShaders/shaders/previewSurface.glslfx"

struct LightingContributions
{
    float3 diffuse;
    float3 specular;
};


]]>
            </declaration>
        </implementation>
    </implementation>
</fragment>