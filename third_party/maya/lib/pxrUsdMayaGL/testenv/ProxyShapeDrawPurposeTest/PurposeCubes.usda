#usda 1.0
(
    defaultPrim = "PurposeCubes"
    upAxis = "Z"
)

def Xform "PurposeCubes" (
    assetInfo = {
        asset identifier = @./PurposeCubes.usda@
        string name = "PurposeCubes"
    }
    kind = "component"
)
{
    def Xform "Geom"
    {
        def Mesh "DefaultCube"
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            uniform token subdivisionScheme = "none"
            double3 xformOp:translate = (1, 1, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }

        def Mesh "ProxyCube"
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            color3f[] primvars:displayColor = [(0.9, 0.1, 0.9)]
            uniform token purpose = "proxy"
            uniform token subdivisionScheme = "none"
            double3 xformOp:translate = (-1, 1, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }

        def Mesh "RenderCube"
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            color3f[] primvars:displayColor = [(0.9, 0.1, 0.1)]
            uniform token purpose = "render"
            uniform token subdivisionScheme = "none"
            double3 xformOp:translate = (-1, -1, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }

        def Mesh "GuideCube"
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            color3f[] primvars:displayColor = [(0.1, 0.9, 0.1)]
            uniform token purpose = "guide"
            uniform token subdivisionScheme = "none"
            double3 xformOp:translate = (1, -1, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }
    }
}
