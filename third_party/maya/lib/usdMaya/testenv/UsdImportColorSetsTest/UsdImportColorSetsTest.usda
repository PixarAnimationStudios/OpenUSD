#usda 1.0
(
    defaultPrim = "UsdImportColorSetsTest"
    upAxis = "Z"
)

def Xform "UsdImportColorSetsTest" (
    kind = "component"
)
{
    def Xform "Geom"
    {
        def Xform "CubeMeshes"
        {
            def Mesh "NoColorSetsCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "ColorSetsCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float[] primvars:ConstantColor_kAlpha = [.5] (
                    interpolation = "constant"
                )
                int[] primvars:ConstantColor_kAlpha:indices = [0]
                color3f[] primvars:ConstantColor_kRGB = [(1, 0, 1)] (
                    interpolation = "constant"
                )
                int[] primvars:ConstantColor_kRGB:indices = [0]
                color4f[] primvars:ConstantColor_kRGBA = [(0, 1, 0, 0.5)] (
                    interpolation = "constant"
                )
                int[] primvars:ConstantColor_kRGBA:indices = [0]
                color4f[] primvars:ConstantColorClamped_kRGBA = [(1, 1, 0, 0.5)] (
                    customData = {
                        dictionary Maya = {
                            bool clamped = 1
                        }
                    }
                    interpolation = "constant"
                )
                int[] primvars:ConstantColorClamped_kRGBA:indices = [0]
                float[] primvars:FaceColor_Full_kAlpha = [1, 0.9, 0.8, 0.7, 0.6, 0.5] (
                    interpolation = "uniform"
                )
                float[] primvars:ExcludeMe = [.5] (
                    interpolation = "constant"
                )
                float[] primvars:ExcludeMeNot = [.5] (
                    interpolation = "constant"
                )
                int[] primvars:FaceColor_Full_kAlpha:indices = [0, 1, 2, 3, 4, 5]
                color3f[] primvars:FaceColor_Full_kRGB = [(1, 0, 0), (0, 1, 0), (0, 0, 1), (1, 1, 0), (1, 0, 1), (0, 1, 1)] (
                    interpolation = "uniform"
                )
                int[] primvars:FaceColor_Full_kRGB:indices = [0, 1, 2, 3, 4, 5]
                color4f[] primvars:FaceColor_Full_kRGBA = [(1, 0, 0, 1), (0, 1, 0, 0.9), (0, 0, 1, 0.8), (1, 1, 0, 0.7), (1, 0, 1, 0.6), (0, 1, 1, 0.5)] (
                    interpolation = "uniform"
                )
                int[] primvars:FaceColor_Full_kRGBA:indices = [0, 1, 2, 3, 4, 5]
                float[] primvars:FaceColor_Sparse_kAlpha = [1, 0.8, 0.6, 1] (
                    interpolation = "uniform"
                    unauthoredValuesIndex = 3
                )
                int[] primvars:FaceColor_Sparse_kAlpha:indices = [0, 3, 1, 3, 2, 3]
                color3f[] primvars:FaceColor_Sparse_kRGB = [(1, 0, 0), (0, 0, 1), (1, 0, 1), (1, 1, 1)] (
                    interpolation = "uniform"
                    unauthoredValuesIndex = 3
                )
                int[] primvars:FaceColor_Sparse_kRGB:indices = [0, 3, 1, 3, 2, 3]
                color4f[] primvars:FaceColor_Sparse_kRGBA = [(1, 0, 0, 1), (0, 0, 1, 0.8), (1, 0, 1, 0.6), (1, 1, 1, 1)] (
                    interpolation = "uniform"
                    unauthoredValuesIndex = 3
                )
                int[] primvars:FaceColor_Sparse_kRGBA:indices = [0, 3, 1, 3, 2, 3]
                float[] primvars:FaceVertexColor_Full_kAlpha = [1, 0.99, 0.98, 0.97, 0.9, 0.89, 0.88, 0.87, 0.8, 0.79, 0.78, 0.77, 0.7, 0.69, 0.68, 0.67, 0.6, 0.59, 0.58, 0.57, 0.5, 0.49, 0.48, 0.47] (
                    interpolation = "faceVarying"
                )
                int[] primvars:FaceVertexColor_Full_kAlpha:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                color3f[] primvars:FaceVertexColor_Full_kRGB = [(1, 1, 0), (1, 0.9, 0), (1, 0.8, 0), (1, 0.7, 0), (0.9, 1, 0), (0.9, 0.9, 0), (0.9, 0.8, 0), (0.9, 0.7, 0), (0.8, 1, 0), (0.8, 0.9, 0), (0.8, 0.8, 0), (0.8, 0.7, 0), (0.7, 1, 0), (0.7, 0.9, 0), (0.7, 0.8, 0), (0.7, 0.7, 0), (0.6, 1, 0), (0.6, 0.9, 0), (0.6, 0.8, 0), (0.6, 0.7, 0), (0.5, 1, 0), (0.5, 0.9, 0), (0.5, 0.8, 0), (0.5, 0.7, 0)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:FaceVertexColor_Full_kRGB:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                color4f[] primvars:FaceVertexColor_Full_kRGBA = [(1, 1, 0, 1), (1, 0.9, 0, 0.99), (1, 0.8, 0, 0.98), (1, 0.7, 0, 0.97), (0.9, 1, 0, 0.9), (0.9, 0.9, 0, 0.89), (0.9, 0.8, 0, 0.88), (0.9, 0.7, 0, 0.87), (0.8, 1, 0, 0.8), (0.8, 0.9, 0, 0.79), (0.8, 0.8, 0, 0.78), (0.8, 0.7, 0, 0.77), (0.7, 1, 0, 0.7), (0.7, 0.9, 0, 0.69), (0.7, 0.8, 0, 0.68), (0.7, 0.7, 0, 0.67), (0.6, 1, 0, 0.6), (0.6, 0.9, 0, 0.59), (0.6, 0.8, 0, 0.58), (0.6, 0.7, 0, 0.57), (0.5, 1, 0, 0.5), (0.5, 0.9, 0, 0.49), (0.5, 0.8, 0, 0.48), (0.5, 0.7, 0, 0.47)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:FaceVertexColor_Full_kRGBA:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
                float[] primvars:FaceVertexColor_Sparse_kAlpha = [1, 0.98, 0.9, 0.88, 0.8, 0.78, 0.7, 0.68, 0.6, 0.58, 0.5, 0.48, 1] (
                    interpolation = "faceVarying"
                    unauthoredValuesIndex = 12
                )
                int[] primvars:FaceVertexColor_Sparse_kAlpha:indices = [0, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12]
                color3f[] primvars:FaceVertexColor_Sparse_kRGB = [(1, 1, 0), (1, 0.8, 0), (0.9, 1, 0), (0.9, 0.8, 0), (0.8, 1, 0), (0.8, 0.8, 0), (0.7, 1, 0), (0.7, 0.8, 0), (0.6, 1, 0), (0.6, 0.8, 0), (0.5, 1, 0), (0.5, 0.8, 0), (1, 1, 1)] (
                    interpolation = "faceVarying"
                    unauthoredValuesIndex = 12
                )
                int[] primvars:FaceVertexColor_Sparse_kRGB:indices = [0, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12]
                color4f[] primvars:FaceVertexColor_Sparse_kRGBA = [(1, 1, 0, 1), (1, 0.8, 0, 0.98), (0.9, 1, 0, 0.9), (0.9, 0.8, 0, 0.88), (0.8, 1, 0, 0.8), (0.8, 0.8, 0, 0.78), (0.7, 1, 0, 0.7), (0.7, 0.8, 0, 0.68), (0.6, 1, 0, 0.6), (0.6, 0.8, 0, 0.58), (0.5, 1, 0, 0.5), (0.5, 0.8, 0, 0.48), (1, 1, 1, 1)] (
                    interpolation = "faceVarying"
                    unauthoredValuesIndex = 12
                )
                int[] primvars:FaceVertexColor_Sparse_kRGBA:indices = [0, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                float[] primvars:VertexColor_Full_kAlpha = [1, 0.9, 0.7, 0.8, 0.5, 0.6, 0.3, 0.4] (
                    interpolation = "vertex"
                )
                int[] primvars:VertexColor_Full_kAlpha:indices = [0, 1, 3, 2, 5, 4, 7, 6]
                color3f[] primvars:VertexColor_Full_kRGB = [(1, 0, 0), (0, 1, 0), (1, 1, 0), (0, 0, 1), (0, 1, 1), (1, 0, 1), (1, 1, 1), (0, 0, 0)] (
                    interpolation = "vertex"
                )
                int[] primvars:VertexColor_Full_kRGB:indices = [0, 1, 3, 2, 5, 4, 7, 6]
                color4f[] primvars:VertexColor_Full_kRGBA = [(1, 0, 0, 1), (0, 1, 0, 0.9), (1, 1, 0, 0.7), (0, 0, 1, 0.8), (0, 1, 1, 0.5), (1, 0, 1, 0.6), (1, 1, 1, 0.3), (0, 0, 0, 0.4)] (
                    interpolation = "vertex"
                )
                int[] primvars:VertexColor_Full_kRGBA:indices = [0, 1, 3, 2, 5, 4, 7, 6]
                float[] primvars:VertexColor_Sparse_kAlpha = [1, 0.8, 0.6, 0.4, 1] (
                    interpolation = "vertex"
                    unauthoredValuesIndex = 4
                )
                int[] primvars:VertexColor_Sparse_kAlpha:indices = [0, 4, 1, 4, 2, 4, 3, 4]
                color3f[] primvars:VertexColor_Sparse_kRGB = [(1, 0, 0), (0, 0, 1), (1, 0, 1), (0, 0, 0), (1, 1, 1)] (
                    interpolation = "vertex"
                    unauthoredValuesIndex = 4
                )
                int[] primvars:VertexColor_Sparse_kRGB:indices = [0, 4, 1, 4, 2, 4, 3, 4]
                color4f[] primvars:VertexColor_Sparse_kRGBA = [(1, 0, 0, 1), (0, 0, 1, 0.8), (1, 0, 1, 0.6), (0, 0, 0, 0.4), (1, 1, 1, 1)] (
                    interpolation = "vertex"
                    unauthoredValuesIndex = 4
                )
                int[] primvars:VertexColor_Sparse_kRGBA:indices = [0, 4, 1, 4, 2, 4, 3, 4]
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "DisplayColorAuthoredCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                color3f[] primvars:displayColor = [(1, 0, 1)] (
                    interpolation = "constant"
                )
                int[] primvars:displayColor:indices = [0]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "DisplayColorNotAuthoredCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                color3f[] primvars:displayColor = [(1, 0, 1)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                    interpolation = "constant"
                )
                int[] primvars:displayColor:indices = [0]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "DisplayOpacityAuthoredCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float[] primvars:displayOpacity = [0.5] (
                    interpolation = "constant"
                )
                int[] primvars:displayOpacity:indices = [0]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "DisplayOpacityNotAuthoredCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float[] primvars:displayOpacity = [0.5] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                    interpolation = "constant"
                )
                int[] primvars:displayOpacity:indices = [0]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "DisplayColorAndDisplayOpacityAuthoredCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                color3f[] primvars:displayColor = [(1, 0, 1)] (
                    interpolation = "constant"
                )
                int[] primvars:displayColor:indices = [0]
                float[] primvars:displayOpacity = [0.5] (
                    interpolation = "constant"
                )
                int[] primvars:displayOpacity:indices = [0]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "DisplayColorAuthoredConvertToDisplayCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                color3f[] primvars:displayColor = [(0.21763764321804047, 0.21763764321804047, 0.21763764321804047)] (
                    interpolation = "constant"
                )
                int[] primvars:displayColor:indices = [0]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }
        }
    }
}

