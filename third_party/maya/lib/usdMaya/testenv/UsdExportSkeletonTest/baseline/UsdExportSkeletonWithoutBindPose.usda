#usda 1.0
(
    defaultPrim = "cubeRig"
    endTimeCode = 5
    metersPerUnit = 0.01
    startTimeCode = 1
    upAxis = "Z"
)

def SkelRoot "cubeRig" (
    kind = "component"
)
{
    def Xform "geom"
    {
        def Mesh "pCube1"
        {
            uniform bool doubleSided = 1
            float3[] extent.timeSamples = {
                1: [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)],
                2: [(0.75, 0.75, -0.5), (1.75, 1.75, 0.5)],
                3: [(2, 2, -0.5), (3, 3, 0.5)],
                4: [(3.25, 3.25, -0.5), (4.25, 4.25, 0.5)],
                5: [(4.5, 4.5, -0.5), (5.5, 5.5, 0.5)],
            }
            int[] faceVertexCounts.timeSamples = {
                1: [4, 4, 4, 4, 4, 4],
            }
            int[] faceVertexIndices.timeSamples = {
                1: [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4],
            }
            point3f[] points.timeSamples = {
                1: [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)],
                2: [(0.75, 0.75, 0.5), (1.75, 0.75, 0.5), (0.75, 1.75, 0.5), (1.75, 1.75, 0.5), (0.75, 1.75, -0.5), (1.75, 1.75, -0.5), (0.75, 0.75, -0.5), (1.75, 0.75, -0.5)],
                3: [(2, 2, 0.5), (3, 2, 0.5), (2, 3, 0.5), (3, 3, 0.5), (2, 3, -0.5), (3, 3, -0.5), (2, 2, -0.5), (3, 2, -0.5)],
                4: [(3.25, 3.25, 0.5), (4.25, 3.25, 0.5), (3.25, 4.25, 0.5), (4.25, 4.25, 0.5), (3.25, 4.25, -0.5), (4.25, 4.25, -0.5), (3.25, 3.25, -0.5), (4.25, 3.25, -0.5)],
                5: [(4.5, 4.5, 0.5), (5.5, 4.5, 0.5), (4.5, 5.5, 0.5), (5.5, 5.5, 0.5), (4.5, 5.5, -0.5), (5.5, 5.5, -0.5), (4.5, 4.5, -0.5), (5.5, 4.5, -0.5)],
            }
            color3f[] primvars:displayColor (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
            )
            color3f[] primvars:displayColor.timeSamples = {
                1: [(0.13320851, 0.13320851, 0.13320851)],
            }
            float2[] primvars:st (
                interpolation = "faceVarying"
            )
            float2[] primvars:st.timeSamples = {
                1: [(0.33, 0), (0.66333336, 0), (0.66333336, 0.25), (0.33, 0.25), (0.66333336, 0.5), (0.33, 0.5), (0.66333336, 0.75), (0.33, 0.75), (0.66333336, 1), (0.33, 1), (1, 0), (1, 0.25), (0, 0), (0, 0.25)],
            }
            int[] primvars:st:indices.timeSamples = {
                1: [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13],
            }
        }
    }

    def Xform "skel"
    {
        def Skeleton "joint1" (
            prepend apiSchemas = ["SkelBindingAPI"]
            customData = {
                dictionary Maya = {
                    bool generated = 1
                }
            }
        )
        {
            uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )]
            uniform token[] joints = ["joint1"]
            uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )]
            rel skel:animationSource = </cubeRig/skel/joint1/Animation>

            def SkelAnimation "Animation"
            {
                uniform token[] joints = ["joint1"]
                quatf[] rotations = [(1, 0, 0, 0)]
                half3[] scales = [(1, 1, 1)]
                float3[] translations = [(5, 5, 0)]
                float3[] translations.timeSamples = {
                    1: [(0, 0, 0)],
                    2: [(1.25, 1.25, 0)],
                    3: [(2.5, 2.5, 0)],
                    4: [(3.75, 3.75, 0)],
                    5: [(5, 5, 0)],
                }
            }
        }
    }
}

