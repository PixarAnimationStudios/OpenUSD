#usda 1.0
(
    defaultPrim = "UsdImportCameraTest"
    endTimeCode = 96
    startTimeCode = 1
    upAxis = "Z"
)

def Xform "UsdImportCameraTest" (
    kind = "component"
)
{
    def Xform "Cameras"
    {
        def Camera "OrthoCamStatic"
        {
            float2 clippingRange = (1, 100)
            float focalLength = 50
            float focusDistance = 5
            float fStop = 8
            float horizontalAperture = 35
            float horizontalApertureOffset = 0
            token projection = "orthographic"
            float verticalAperture = 35
            float verticalApertureOffset = 0
            double3 xformOp:translate = (0, 0, 5)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }

        def Camera "PerspCamStatic"
        {
            float2 clippingRange = (0.1, 10000)
            float focalLength = 35
            float focusDistance = 5
            float fStop = 11
            float horizontalAperture = 36
            float horizontalApertureOffset = 25.4
            token projection = "perspective"
            float verticalAperture = 24
            float verticalApertureOffset = 50.8
            float xformOp:rotateX = 45
            double3 xformOp:translate = (0, -5, 5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateX"]
        }

        def Camera "PerspCamAnimTransform"
        {
            float2 clippingRange = (0.1, 10000)
            float focalLength = 35
            float focusDistance = 5
            float fStop = 5.6
            float horizontalAperture = 36
            float horizontalApertureOffset = 0
            token projection = "perspective"
            float verticalAperture = 24
            float verticalApertureOffset = 0
            float3 xformOp:rotateXYZ.timeSamples = {
                1: (45, 0, 0),
                25: (45, 0, 90),
                49: (45, 0, 180),
                73: (45, 0, 270),
                96: (45, 0, 359.694),
            }
            double3 xformOp:translate.timeSamples = {
                1: (0, -5, 5),
                2: (0.0253182905699189, -4.98300057610837, 5),
                3: (0.0983796346096187, -4.93344906985802, 5),
                4: (0.214843779031073, -4.8535156031923, 5),
                5: (0.370370372957378, -4.74537036557545, 5),
                6: (0.560619249059799, -4.61118341899692, 5),
                7: (0.78124999476131, -4.45312499774086, 5),
                8: (1.02792258165547, -4.27336506018708, 5),
                9: (1.29629637908053, -4.07407400243703, 5),
                10: (1.58203127946763, -3.8574218410782, 5),
                11: (1.88078722491844, -3.62557854302751, 5),
                12: (2.18822351026541, -3.38071457889223, 5),
                13: (2.50000029336662, -3.1249997394141, 5),
                14: (2.81177662846285, -2.86060472104612, 5),
                15: (3.11921312820805, -2.58969890707637, 5),
                16: (3.41796906104719, -2.31445281234995, 5),
                17: (3.70370374509582, -2.03703697654719, 5),
                18: (3.97207771850205, -1.75962074570331, 5),
                19: (4.21875027765054, -1.48437465794644, 5),
                20: (4.43938084310233, -1.21346923898708, 5),
                21: (4.629629766741, -0.949073853486903, 5),
                22: (4.78515642877025, -0.693359034917433, 5),
                23: (4.901620408076, -0.448495267079636, 5),
                24: (4.97468175851852, -0.216651989141012, 5),
                25: (5, 0, 5),
                26: (4.98300051967385, 0.216652626423293, 5),
                27: (4.9334490317859, 0.448495588170339, 5),
                28: (4.85351566794832, 0.693359349675365, 5),
                29: (4.74537021207969, 0.949074524384076, 5),
                30: (4.61118341977842, 1.21346951229899, 5),
                31: (4.45312515257321, 1.48437489892618, 5),
                32: (4.27336499880498, 1.75962134427745, 5),
                33: (4.07407412385391, 2.03703713659671, 5),
                34: (3.85742217504461, 2.31445292658253, 5),
                35: (3.62557860101962, 2.5896993649335, 5),
                36: (3.38071486518229, 2.86060473989356, 5),
                37: (3.12500045653244, 3.12499971147449, 5),
                38: (2.86060473989356, 3.38071486518229, 5),
                39: (2.5896993649335, 3.62557860101962, 5),
                40: (2.31445371820662, 3.85742153243212, 5),
                41: (2.03703713659671, 4.07407412385391, 5),
                42: (1.75962134427745, 4.27336499880498, 5),
                43: (1.48437568123708, 4.45312466828551, 5),
                44: (1.21346951229899, 4.61118341977842, 5),
                45: (0.949074524384077, 4.74537021207969, 5),
                46: (0.693360066793741, 4.85351539786473, 5),
                47: (0.448495588170339, 4.9334490317859, 5),
                48: (0.216652626423293, 4.98300051967385, 5),
                49: (0, 5, 5),
                50: (-0.216651345164967, 4.98300070777751, 5),
                51: (-0.448494920377583, 4.93344920115242, 5),
                52: (-0.69335938227165, 4.85351563123284, 5),
                53: (-0.94907308945752, 4.74537084451481, 5),
                54: (-1.21346882743198, 4.61118374413534, 5),
                55: (-1.48437501068487, 4.45312502136975, 5),
                56: (-1.75961990469425, 4.27336591386955, 5),
                57: (-2.03703651847446, 4.0740745052078, 5),
                58: (-2.31445313613008, 3.85742191506827, 5),
                59: (-2.58969804176558, 3.62557966049931, 5),
                60: (-2.86060424439543, 3.38071522902736, 5),
                61: (-3.12500000949767, 3.12500005698599, 5),
                62: (-3.38071375156189, 2.86060582906164, 5),
                63: (-3.62557825608529, 2.58969966025159, 5),
                64: (-3.85742188167805, 2.31445319178045, 5),
                65: (-4.0740732849736, 2.03703816421411, 5),
                66: (-4.27336480443445, 1.75962154353804, 5),
                67: (-4.45312500356162, 1.48437506410924, 5),
                68: (-4.61118289289112, 1.21347041061429, 5),
                69: (-4.74537014033331, 0.949074623544281, 5),
                70: (-4.85351562603881, 0.693359418629896, 5),
                71: (-4.93344882620485, 0.448496312919738, 5),
                72: (-4.98300051467228, 0.216652644927879, 5),
                73: (-5, 0, 5),
                74: (-4.97468189146619, -0.216651382173905, 5),
                75: (-4.90162050696434, -0.448495003936228, 5),
                76: (-4.7851561522111, -0.693359520180752, 5),
                77: (-4.62963012633498, -0.949073287777633, 5),
                78: (-4.43938093449647, -1.21346909048452, 5),
                79: (-4.21874966472377, -1.48437534105109, 5),
                80: (-3.97207810043331, -1.75962030321518, 5),
                81: (-3.7037037037037, -2.03703698425207, 5),
                82: (-3.41796812135708, -2.31445366652611, 5),
                83: (-3.11921339758026, -2.58969863240163, 5),
                84: (-2.8117763984051, -2.86060488915395, 5),
                85: (-2.49999910593012, -3.1250007005209, 5),
                86: (-2.1882236015949, -3.38071447925207, 5),
                87: (-1.88078660241974, -3.62557900910525, 5),
                88: (-1.58203020226194, -3.85742264695053, 5),
                89: (-1.2962962962963, -4.07407404768159, 5),
                90: (-1.02792189956669, -4.27336554802106, 5),
                91: (-0.781248994171619, -4.45312570973011, 5),
                92: (-0.560619065503528, -4.61118354160528, 5),
                93: (-0.37036987366502, -4.74537070981647, 5),
                94: (-0.214843065478235, -4.85351609277471, 5),
                95: (-0.0983794930356634, -4.93344916493822, 5),
                96: (-0.0253181085338063, -4.98300069840656, 5),
            }
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
        }

        def Camera "PerspCamAnimShape"
        {
            float2 clippingRange.timeSamples = {
                1: (0.1, 10000),
                49: (0.5, 9000),
                96: (1.0, 8000),
            }
            float focalLength.timeSamples = {
                1: 35,
                2: 35.329136,
                3: 36.278934,
                4: 37.79297,
                5: 39.814816,
                6: 42.28805,
                7: 45.15625,
                8: 48.362995,
                9: 51.851852,
                10: 55.566406,
                11: 59.450233,
                12: 63.446907,
                13: 67.5,
                14: 71.55309,
                15: 75.549774,
                16: 79.4336,
                17: 83.14815,
                18: 86.63701,
                19: 89.84375,
                20: 92.71195,
                21: 95.18519,
                22: 97.20703,
                23: 98.72106,
                24: 99.67086,
                25: 100,
            }
            float focusDistance.timeSamples = {
                1: 5,
                2: 5,
                3: 5,
                4: 5,
                5: 5,
                6: 5,
                7: 5,
                8: 5,
                9: 5,
                10: 5,
                11: 5,
                12: 5,
                13: 5,
                14: 5,
                15: 5,
                16: 5,
                17: 5,
                18: 5,
                19: 5,
                20: 5,
                21: 5,
                22: 5,
                23: 5,
                24: 5,
                25: 5,
                26: 5,
                27: 5,
                28: 5,
                29: 5,
                30: 5,
                31: 5,
                32: 5,
                33: 5,
                34: 5,
                35: 5,
                36: 5,
                37: 5,
                38: 5,
                39: 5,
                40: 5,
                41: 5,
                42: 5,
                43: 5,
                44: 5,
                45: 5,
                46: 5,
                47: 5,
                48: 5,
                49: 5,
                50: 5,
                51: 5,
                52: 5,
                53: 5,
                54: 5,
                55: 5,
                56: 5,
                57: 5,
                58: 5,
                59: 5,
                60: 5,
                61: 5,
                62: 5,
                63: 5,
                64: 5,
                65: 5,
                66: 5,
                67: 5,
                68: 5,
                69: 5,
                70: 5,
                71: 5,
                72: 5,
                73: 5,
                74: 5,
                75: 5,
                76: 5,
                77: 5,
                78: 5,
                79: 5,
                80: 5,
                81: 5,
                82: 5,
                83: 5,
                84: 5,
                85: 5,
                86: 5,
                87: 5,
                88: 5,
                89: 5,
                90: 5,
                91: 5,
                92: 5,
                93: 5,
                94: 5,
                95: 5,
                96: 5,
            }
            float fStop.timeSamples = {
                1: 5.6,
                2: 5.6,
                3: 5.6,
                4: 5.6,
                5: 5.6,
                6: 5.6,
                7: 5.6,
                8: 5.6,
                9: 5.6,
                10: 5.6,
                11: 5.6,
                12: 5.6,
                13: 5.6,
                14: 5.6,
                15: 5.6,
                16: 5.6,
                17: 5.6,
                18: 5.6,
                19: 5.6,
                20: 5.6,
                21: 5.6,
                22: 5.6,
                23: 5.6,
                24: 5.6,
                25: 5.6,
                26: 5.6,
                27: 5.6,
                28: 5.6,
                29: 5.6,
                30: 5.6,
                31: 5.6,
                32: 5.6,
                33: 5.6,
                34: 5.6,
                35: 5.6,
                36: 5.6,
                37: 5.6,
                38: 5.6,
                39: 5.6,
                40: 5.6,
                41: 5.6,
                42: 5.6,
                43: 5.6,
                44: 5.6,
                45: 5.6,
                46: 5.6,
                47: 5.6,
                48: 5.6,
                49: 5.6,
                50: 5.6,
                51: 5.6,
                52: 5.6,
                53: 5.6,
                54: 5.6,
                55: 5.6,
                56: 5.6,
                57: 5.6,
                58: 5.6,
                59: 5.6,
                60: 5.6,
                61: 5.6,
                62: 5.6,
                63: 5.6,
                64: 5.6,
                65: 5.6,
                66: 5.6,
                67: 5.6,
                68: 5.6,
                69: 5.6,
                70: 5.6,
                71: 5.6,
                72: 5.6,
                73: 5.6,
                74: 5.6,
                75: 5.6,
                76: 5.6,
                77: 5.6,
                78: 5.6,
                79: 5.6,
                80: 5.6,
                81: 5.6,
                82: 5.6,
                83: 5.6,
                84: 5.6,
                85: 5.6,
                86: 5.6,
                87: 5.6,
                88: 5.6,
                89: 5.6,
                90: 5.6,
                91: 5.6,
                92: 5.6,
                93: 5.6,
                94: 5.6,
                95: 5.6,
                96: 5.6,
            }
            float horizontalAperture.timeSamples = {
                1: 36,
                2: 36,
                3: 36,
                4: 36,
                5: 36,
                6: 36,
                7: 36,
                8: 36,
                9: 36,
                10: 36,
                11: 36,
                12: 36,
                13: 36,
                14: 36,
                15: 36,
                16: 36,
                17: 36,
                18: 36,
                19: 36,
                20: 36,
                21: 36,
                22: 36,
                23: 36,
                24: 36,
                25: 36,
                26: 36,
                27: 36,
                28: 36,
                29: 36,
                30: 36,
                31: 36,
                32: 36,
                33: 36,
                34: 36,
                35: 36,
                36: 36,
                37: 36,
                38: 36,
                39: 36,
                40: 36,
                41: 36,
                42: 36,
                43: 36,
                44: 36,
                45: 36,
                46: 36,
                47: 36,
                48: 36,
                49: 36,
                50: 36,
                51: 36,
                52: 36,
                53: 36,
                54: 36,
                55: 36,
                56: 36,
                57: 36,
                58: 36,
                59: 36,
                60: 36,
                61: 36,
                62: 36,
                63: 36,
                64: 36,
                65: 36,
                66: 36,
                67: 36,
                68: 36,
                69: 36,
                70: 36,
                71: 36,
                72: 36,
                73: 36,
                74: 36,
                75: 36,
                76: 36,
                77: 36,
                78: 36,
                79: 36,
                80: 36,
                81: 36,
                82: 36,
                83: 36,
                84: 36,
                85: 36,
                86: 36,
                87: 36,
                88: 36,
                89: 36,
                90: 36,
                91: 36,
                92: 36,
                93: 36,
                94: 36,
                95: 36,
                96: 36,
            }
            float horizontalApertureOffset.timeSamples = {
                1: 0,
                2: 0,
                3: 0,
                4: 0,
                5: 0,
                6: 0,
                7: 0,
                8: 0,
                9: 0,
                10: 0,
                11: 0,
                12: 0,
                13: 0,
                14: 0,
                15: 0,
                16: 0,
                17: 0,
                18: 0,
                19: 0,
                20: 0,
                21: 0,
                22: 0,
                23: 0,
                24: 0,
                25: 0,
                26: 0,
                27: 0,
                28: 0,
                29: 0,
                30: 0,
                31: 0,
                32: 0,
                33: 0,
                34: 0,
                35: 0,
                36: 0,
                37: 0,
                38: 0,
                39: 0,
                40: 0,
                41: 0,
                42: 0,
                43: 0,
                44: 0,
                45: 0,
                46: 0,
                47: 0,
                48: 0,
                49: 0,
                50: 0,
                51: 0,
                52: 0,
                53: 0,
                54: 0,
                55: 0,
                56: 0,
                57: 0,
                58: 0,
                59: 0,
                60: 0,
                61: 0,
                62: 0,
                63: 0,
                64: 0,
                65: 0,
                66: 0,
                67: 0,
                68: 0,
                69: 0,
                70: 0,
                71: 0,
                72: 0,
                73: 0,
                74: 0,
                75: 0,
                76: 0,
                77: 0,
                78: 0,
                79: 0,
                80: 0,
                81: 0,
                82: 0,
                83: 0,
                84: 0,
                85: 0,
                86: 0,
                87: 0,
                88: 0,
                89: 0,
                90: 0,
                91: 0,
                92: 0,
                93: 0,
                94: 0,
                95: 0,
                96: 0,
            }
            token projection.timeSamples = {
                1: "perspective",
                2: "perspective",
                3: "perspective",
                4: "perspective",
                5: "perspective",
                6: "perspective",
                7: "perspective",
                8: "perspective",
                9: "perspective",
                10: "perspective",
                11: "perspective",
                12: "perspective",
                13: "perspective",
                14: "perspective",
                15: "perspective",
                16: "perspective",
                17: "perspective",
                18: "perspective",
                19: "perspective",
                20: "perspective",
                21: "perspective",
                22: "perspective",
                23: "perspective",
                24: "perspective",
                25: "perspective",
                26: "perspective",
                27: "perspective",
                28: "perspective",
                29: "perspective",
                30: "perspective",
                31: "perspective",
                32: "perspective",
                33: "perspective",
                34: "perspective",
                35: "perspective",
                36: "perspective",
                37: "perspective",
                38: "perspective",
                39: "perspective",
                40: "perspective",
                41: "perspective",
                42: "perspective",
                43: "perspective",
                44: "perspective",
                45: "perspective",
                46: "perspective",
                47: "perspective",
                48: "perspective",
                49: "perspective",
                50: "perspective",
                51: "perspective",
                52: "perspective",
                53: "perspective",
                54: "perspective",
                55: "perspective",
                56: "perspective",
                57: "perspective",
                58: "perspective",
                59: "perspective",
                60: "perspective",
                61: "perspective",
                62: "perspective",
                63: "perspective",
                64: "perspective",
                65: "perspective",
                66: "perspective",
                67: "perspective",
                68: "perspective",
                69: "perspective",
                70: "perspective",
                71: "perspective",
                72: "perspective",
                73: "perspective",
                74: "perspective",
                75: "perspective",
                76: "perspective",
                77: "perspective",
                78: "perspective",
                79: "perspective",
                80: "perspective",
                81: "perspective",
                82: "perspective",
                83: "perspective",
                84: "perspective",
                85: "perspective",
                86: "perspective",
                87: "perspective",
                88: "perspective",
                89: "perspective",
                90: "perspective",
                91: "perspective",
                92: "perspective",
                93: "perspective",
                94: "perspective",
                95: "perspective",
                96: "perspective",
            }
            float verticalAperture.timeSamples = {
                1: 24,
                2: 24,
                3: 24,
                4: 24,
                5: 24,
                6: 24,
                7: 24,
                8: 24,
                9: 24,
                10: 24,
                11: 24,
                12: 24,
                13: 24,
                14: 24,
                15: 24,
                16: 24,
                17: 24,
                18: 24,
                19: 24,
                20: 24,
                21: 24,
                22: 24,
                23: 24,
                24: 24,
                25: 24,
                26: 24,
                27: 24,
                28: 24,
                29: 24,
                30: 24,
                31: 24,
                32: 24,
                33: 24,
                34: 24,
                35: 24,
                36: 24,
                37: 24,
                38: 24,
                39: 24,
                40: 24,
                41: 24,
                42: 24,
                43: 24,
                44: 24,
                45: 24,
                46: 24,
                47: 24,
                48: 24,
                49: 24,
                50: 24,
                51: 24,
                52: 24,
                53: 24,
                54: 24,
                55: 24,
                56: 24,
                57: 24,
                58: 24,
                59: 24,
                60: 24,
                61: 24,
                62: 24,
                63: 24,
                64: 24,
                65: 24,
                66: 24,
                67: 24,
                68: 24,
                69: 24,
                70: 24,
                71: 24,
                72: 24,
                73: 24,
                74: 24,
                75: 24,
                76: 24,
                77: 24,
                78: 24,
                79: 24,
                80: 24,
                81: 24,
                82: 24,
                83: 24,
                84: 24,
                85: 24,
                86: 24,
                87: 24,
                88: 24,
                89: 24,
                90: 24,
                91: 24,
                92: 24,
                93: 24,
                94: 24,
                95: 24,
                96: 24,
            }
            float verticalApertureOffset.timeSamples = {
                1: 0,
                49: 25.4,
                96: 50.8,
            }
            float xformOp:rotateX = 45
            double3 xformOp:translate = (0, -5, 5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateX"]
        }
    }

    def Xform "Geom"
    {
        def Mesh "Cube"
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            color3f[] primvars:displayColor = [(0.217638, 0.217638, 0.217638)]
            float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.375, 0.25), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5), (0.375, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.75), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.625, 0), (0.875, 0), (0.875, 0.25), (0.625, 0.25), (0.125, 0), (0.375, 0), (0.375, 0.25), (0.125, 0.25)] (
                interpolation = "faceVarying"
            )
            double3 xformOp:translate = (0, 0, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }
    }
}

