#usda 1.0
(
    defaultPrim = "RedCube"
    endTimeCode = 1
    startTimeCode = 1
    upAxis = "Z"
)

def Xform "RedCube" (
    kind = "component"
)
{
    def Xform "Geom"
    {
        def Mesh "Cube"
        {
            float3[] extent = [(-2.5, -2.5, 0), (2.5, 2.5, 5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 7, 6, 1, 2, 8, 7, 2, 3, 9, 8, 3, 4, 10, 9, 4, 5, 11, 10, 6, 7, 13, 12, 7, 8, 14, 13, 8, 9, 15, 14, 9, 10, 16, 15, 10, 11, 17, 16, 12, 13, 19, 18, 13, 14, 20, 19, 14, 15, 21, 20, 15, 16, 22, 21, 16, 17, 23, 22, 18, 19, 25, 24, 19, 20, 26, 25, 20, 21, 27, 26, 21, 22, 28, 27, 22, 23, 29, 28, 24, 25, 31, 30, 25, 26, 32, 31, 26, 27, 33, 32, 27, 28, 34, 33, 28, 29, 35, 34, 30, 31, 37, 36, 31, 32, 38, 37, 32, 33, 39, 38, 33, 34, 40, 39, 34, 35, 41, 40, 36, 37, 43, 42, 37, 38, 44, 43, 38, 39, 45, 44, 39, 40, 46, 45, 40, 41, 47, 46, 42, 43, 49, 48, 43, 44, 50, 49, 44, 45, 51, 50, 45, 46, 52, 51, 46, 47, 53, 52, 48, 49, 55, 54, 49, 50, 56, 55, 50, 51, 57, 56, 51, 52, 58, 57, 52, 53, 59, 58, 54, 55, 61, 60, 55, 56, 62, 61, 56, 57, 63, 62, 57, 58, 64, 63, 58, 59, 65, 64, 60, 61, 67, 66, 61, 62, 68, 67, 62, 63, 69, 68, 63, 64, 70, 69, 64, 65, 71, 70, 66, 67, 73, 72, 67, 68, 74, 73, 68, 69, 75, 74, 69, 70, 76, 75, 70, 71, 77, 76, 72, 73, 79, 78, 73, 74, 80, 79, 74, 75, 81, 80, 75, 76, 82, 81, 76, 77, 83, 82, 78, 79, 85, 84, 79, 80, 86, 85, 80, 81, 87, 86, 81, 82, 88, 87, 82, 83, 89, 88, 84, 85, 91, 90, 85, 86, 92, 91, 86, 87, 93, 92, 87, 88, 94, 93, 88, 89, 95, 94, 90, 91, 97, 96, 91, 92, 98, 97, 92, 93, 99, 98, 93, 94, 100, 99, 94, 95, 101, 100, 96, 97, 103, 102, 97, 98, 104, 103, 98, 99, 105, 104, 99, 100, 106, 105, 100, 101, 107, 106, 102, 103, 109, 108, 103, 104, 110, 109, 104, 105, 111, 110, 105, 106, 112, 111, 106, 107, 113, 112, 108, 109, 115, 114, 109, 110, 116, 115, 110, 111, 117, 116, 111, 112, 118, 117, 112, 113, 119, 118, 114, 115, 1, 0, 115, 116, 2, 1, 116, 117, 3, 2, 117, 118, 4, 3, 118, 119, 5, 4, 101, 95, 89, 120, 107, 101, 120, 121, 113, 107, 121, 122, 119, 113, 122, 123, 5, 119, 123, 11, 120, 89, 83, 124, 121, 120, 124, 125, 122, 121, 125, 126, 123, 122, 126, 127, 11, 123, 127, 17, 124, 83, 77, 128, 125, 124, 128, 129, 126, 125, 129, 130, 127, 126, 130, 131, 17, 127, 131, 23, 128, 77, 71, 132, 129, 128, 132, 133, 130, 129, 133, 134, 131, 130, 134, 135, 23, 131, 135, 29, 132, 71, 65, 59, 133, 132, 59, 53, 134, 133, 53, 47, 135, 134, 47, 41, 29, 135, 41, 35, 90, 96, 136, 84, 96, 102, 137, 136, 102, 108, 138, 137, 108, 114, 139, 138, 114, 0, 6, 139, 84, 136, 140, 78, 136, 137, 141, 140, 137, 138, 142, 141, 138, 139, 143, 142, 139, 6, 12, 143, 78, 140, 144, 72, 140, 141, 145, 144, 141, 142, 146, 145, 142, 143, 147, 146, 143, 12, 18, 147, 72, 144, 148, 66, 144, 145, 149, 148, 145, 146, 150, 149, 146, 147, 151, 150, 147, 18, 24, 151, 66, 148, 54, 60, 148, 149, 48, 54, 149, 150, 42, 48, 150, 151, 36, 42, 151, 24, 30, 36]
            rel material:binding = </RedCube/Looks/RedLambertSG>
            point3f[] points = [(-2.5, -2.5, 5), (-1.5, -2.5, 5), (-0.5, -2.5, 5), (0.5, -2.5, 5), (1.5, -2.5, 5), (2.5, -2.5, 5), (-2.5, -1.5, 5), (-1.5, -1.5, 5), (-0.5, -1.5, 5), (0.5, -1.5, 5), (1.5, -1.5, 5), (2.5, -1.5, 5), (-2.5, -0.5, 5), (-1.5, -0.5, 5), (-0.5, -0.5, 5), (0.5, -0.5, 5), (1.5, -0.5, 5), (2.5, -0.5, 5), (-2.5, 0.5, 5), (-1.5, 0.5, 5), (-0.5, 0.5, 5), (0.5, 0.5, 5), (1.5, 0.5, 5), (2.5, 0.5, 5), (-2.5, 1.5, 5), (-1.5, 1.5, 5), (-0.5, 1.5, 5), (0.5, 1.5, 5), (1.5, 1.5, 5), (2.5, 1.5, 5), (-2.5, 2.5, 5), (-1.5, 2.5, 5), (-0.5, 2.5, 5), (0.5, 2.5, 5), (1.5, 2.5, 5), (2.5, 2.5, 5), (-2.5, 2.5, 4), (-1.5, 2.5, 4), (-0.5, 2.5, 4), (0.5, 2.5, 4), (1.5, 2.5, 4), (2.5, 2.5, 4), (-2.5, 2.5, 3), (-1.5, 2.5, 3), (-0.5, 2.5, 3), (0.5, 2.5, 3), (1.5, 2.5, 3), (2.5, 2.5, 3), (-2.5, 2.5, 2), (-1.5, 2.5, 2), (-0.5, 2.5, 2), (0.5, 2.5, 2), (1.5, 2.5, 2), (2.5, 2.5, 2), (-2.5, 2.5, 1), (-1.5, 2.5, 1), (-0.5, 2.5, 1), (0.5, 2.5, 1), (1.5, 2.5, 1), (2.5, 2.5, 1), (-2.5, 2.5, 0), (-1.5, 2.5, 0), (-0.5, 2.5, 0), (0.5, 2.5, 0), (1.5, 2.5, 0), (2.5, 2.5, 0), (-2.5, 1.5, 0), (-1.5, 1.5, 0), (-0.5, 1.5, 0), (0.5, 1.5, 0), (1.5, 1.5, 0), (2.5, 1.5, 0), (-2.5, 0.5, 0), (-1.5, 0.5, 0), (-0.5, 0.5, 0), (0.5, 0.5, 0), (1.5, 0.5, 0), (2.5, 0.5, 0), (-2.5, -0.5, 0), (-1.5, -0.5, 0), (-0.5, -0.5, 0), (0.5, -0.5, 0), (1.5, -0.5, 0), (2.5, -0.5, 0), (-2.5, -1.5, 0), (-1.5, -1.5, 0), (-0.5, -1.5, 0), (0.5, -1.5, 0), (1.5, -1.5, 0), (2.5, -1.5, 0), (-2.5, -2.5, 0), (-1.5, -2.5, 0), (-0.5, -2.5, 0), (0.5, -2.5, 0), (1.5, -2.5, 0), (2.5, -2.5, 0), (-2.5, -2.5, 1), (-1.5, -2.5, 1), (-0.5, -2.5, 1), (0.5, -2.5, 1), (1.5, -2.5, 1), (2.5, -2.5, 1), (-2.5, -2.5, 2), (-1.5, -2.5, 2), (-0.5, -2.5, 2), (0.5, -2.5, 2), (1.5, -2.5, 2), (2.5, -2.5, 2), (-2.5, -2.5, 3), (-1.5, -2.5, 3), (-0.5, -2.5, 3), (0.5, -2.5, 3), (1.5, -2.5, 3), (2.5, -2.5, 3), (-2.5, -2.5, 4), (-1.5, -2.5, 4), (-0.5, -2.5, 4), (0.5, -2.5, 4), (1.5, -2.5, 4), (2.5, -2.5, 4), (2.5, -1.5, 1), (2.5, -1.5, 2), (2.5, -1.5, 3), (2.5, -1.5, 4), (2.5, -0.5, 1), (2.5, -0.5, 2), (2.5, -0.5, 3), (2.5, -0.5, 4), (2.5, 0.5, 1), (2.5, 0.5, 2), (2.5, 0.5, 3), (2.5, 0.5, 4), (2.5, 1.5, 1), (2.5, 1.5, 2), (2.5, 1.5, 3), (2.5, 1.5, 4), (-2.5, -1.5, 1), (-2.5, -1.5, 2), (-2.5, -1.5, 3), (-2.5, -1.5, 4), (-2.5, -0.5, 1), (-2.5, -0.5, 2), (-2.5, -0.5, 3), (-2.5, -0.5, 4), (-2.5, 0.5, 1), (-2.5, 0.5, 2), (-2.5, 0.5, 3), (-2.5, 0.5, 4), (-2.5, 1.5, 1), (-2.5, 1.5, 2), (-2.5, 1.5, 3), (-2.5, 1.5, 4)]
            color3f[] primvars:displayColor = [(1, 0, 0)] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
            )
            float2[] primvars:st = [(0.375, 0), (0.425, 0), (0.425, 0.05), (0.375, 0.05), (0.47500002, 0), (0.47500002, 0.05), (0.52500004, 0), (0.52500004, 0.05), (0.57500005, 0), (0.57500005, 0.05), (0.62500006, 0), (0.62500006, 0.05), (0.425, 0.1), (0.375, 0.1), (0.47500002, 0.1), (0.52500004, 0.1), (0.57500005, 0.1), (0.62500006, 0.1), (0.425, 0.15), (0.375, 0.15), (0.47500002, 0.15), (0.52500004, 0.15), (0.57500005, 0.15), (0.62500006, 0.15), (0.425, 0.2), (0.375, 0.2), (0.47500002, 0.2), (0.52500004, 0.2), (0.57500005, 0.2), (0.62500006, 0.2), (0.425, 0.25), (0.375, 0.25), (0.47500002, 0.25), (0.52500004, 0.25), (0.57500005, 0.25), (0.62500006, 0.25), (0.425, 0.3), (0.375, 0.3), (0.47500002, 0.3), (0.52500004, 0.3), (0.57500005, 0.3), (0.62500006, 0.3), (0.425, 0.35000002), (0.375, 0.35000002), (0.47500002, 0.35000002), (0.52500004, 0.35000002), (0.57500005, 0.35000002), (0.62500006, 0.35000002), (0.425, 0.40000004), (0.375, 0.40000004), (0.47500002, 0.40000004), (0.52500004, 0.40000004), (0.57500005, 0.40000004), (0.62500006, 0.40000004), (0.425, 0.45000005), (0.375, 0.45000005), (0.47500002, 0.45000005), (0.52500004, 0.45000005), (0.57500005, 0.45000005), (0.62500006, 0.45000005), (0.425, 0.50000006), (0.375, 0.50000006), (0.47500002, 0.50000006), (0.52500004, 0.50000006), (0.57500005, 0.50000006), (0.62500006, 0.50000006), (0.425, 0.5500001), (0.375, 0.5500001), (0.47500002, 0.5500001), (0.52500004, 0.5500001), (0.57500005, 0.5500001), (0.62500006, 0.5500001), (0.425, 0.6000001), (0.375, 0.6000001), (0.47500002, 0.6000001), (0.52500004, 0.6000001), (0.57500005, 0.6000001), (0.62500006, 0.6000001), (0.425, 0.6500001), (0.375, 0.6500001), (0.47500002, 0.6500001), (0.52500004, 0.6500001), (0.57500005, 0.6500001), (0.62500006, 0.6500001), (0.425, 0.7000001), (0.375, 0.7000001), (0.47500002, 0.7000001), (0.52500004, 0.7000001), (0.57500005, 0.7000001), (0.62500006, 0.7000001), (0.425, 0.7500001), (0.375, 0.7500001), (0.47500002, 0.7500001), (0.52500004, 0.7500001), (0.57500005, 0.7500001), (0.62500006, 0.7500001), (0.425, 0.80000013), (0.375, 0.80000013), (0.47500002, 0.80000013), (0.52500004, 0.80000013), (0.57500005, 0.80000013), (0.62500006, 0.80000013), (0.425, 0.85000014), (0.375, 0.85000014), (0.47500002, 0.85000014), (0.52500004, 0.85000014), (0.57500005, 0.85000014), (0.62500006, 0.85000014), (0.425, 0.90000015), (0.375, 0.90000015), (0.47500002, 0.90000015), (0.52500004, 0.90000015), (0.57500005, 0.90000015), (0.62500006, 0.90000015), (0.425, 0.95000017), (0.375, 0.95000017), (0.47500002, 0.95000017), (0.52500004, 0.95000017), (0.57500005, 0.95000017), (0.62500006, 0.95000017), (0.425, 1.0000001), (0.375, 1.0000001), (0.47500002, 1.0000001), (0.52500004, 1.0000001), (0.57500005, 1.0000001), (0.62500006, 1.0000001), (0.825, 0), (0.875, 0), (0.875, 0.05), (0.825, 0.05), (0.775, 0), (0.775, 0.05), (0.72499996, 0), (0.72499996, 0.05), (0.67499995, 0), (0.67499995, 0.05), (0.875, 0.1), (0.825, 0.1), (0.775, 0.1), (0.72499996, 0.1), (0.67499995, 0.1), (0.875, 0.15), (0.825, 0.15), (0.775, 0.15), (0.72499996, 0.15), (0.67499995, 0.15), (0.875, 0.2), (0.825, 0.2), (0.775, 0.2), (0.72499996, 0.2), (0.67499995, 0.2), (0.875, 0.25), (0.825, 0.25), (0.775, 0.25), (0.72499996, 0.25), (0.67499995, 0.25), (0.125, 0), (0.175, 0), (0.175, 0.05), (0.125, 0.05), (0.225, 0), (0.225, 0.05), (0.275, 0), (0.275, 0.05), (0.32500002, 0), (0.32500002, 0.05), (0.175, 0.1), (0.125, 0.1), (0.225, 0.1), (0.275, 0.1), (0.32500002, 0.1), (0.175, 0.15), (0.125, 0.15), (0.225, 0.15), (0.275, 0.15), (0.32500002, 0.15), (0.175, 0.2), (0.125, 0.2), (0.225, 0.2), (0.275, 0.2), (0.32500002, 0.2), (0.175, 0.25), (0.125, 0.25), (0.225, 0.25), (0.275, 0.25), (0.32500002, 0.25)] (
                interpolation = "faceVarying"
            )
            int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 4, 6, 7, 5, 6, 8, 9, 7, 8, 10, 11, 9, 3, 2, 12, 13, 2, 5, 14, 12, 5, 7, 15, 14, 7, 9, 16, 15, 9, 11, 17, 16, 13, 12, 18, 19, 12, 14, 20, 18, 14, 15, 21, 20, 15, 16, 22, 21, 16, 17, 23, 22, 19, 18, 24, 25, 18, 20, 26, 24, 20, 21, 27, 26, 21, 22, 28, 27, 22, 23, 29, 28, 25, 24, 30, 31, 24, 26, 32, 30, 26, 27, 33, 32, 27, 28, 34, 33, 28, 29, 35, 34, 31, 30, 36, 37, 30, 32, 38, 36, 32, 33, 39, 38, 33, 34, 40, 39, 34, 35, 41, 40, 37, 36, 42, 43, 36, 38, 44, 42, 38, 39, 45, 44, 39, 40, 46, 45, 40, 41, 47, 46, 43, 42, 48, 49, 42, 44, 50, 48, 44, 45, 51, 50, 45, 46, 52, 51, 46, 47, 53, 52, 49, 48, 54, 55, 48, 50, 56, 54, 50, 51, 57, 56, 51, 52, 58, 57, 52, 53, 59, 58, 55, 54, 60, 61, 54, 56, 62, 60, 56, 57, 63, 62, 57, 58, 64, 63, 58, 59, 65, 64, 61, 60, 66, 67, 60, 62, 68, 66, 62, 63, 69, 68, 63, 64, 70, 69, 64, 65, 71, 70, 67, 66, 72, 73, 66, 68, 74, 72, 68, 69, 75, 74, 69, 70, 76, 75, 70, 71, 77, 76, 73, 72, 78, 79, 72, 74, 80, 78, 74, 75, 81, 80, 75, 76, 82, 81, 76, 77, 83, 82, 79, 78, 84, 85, 78, 80, 86, 84, 80, 81, 87, 86, 81, 82, 88, 87, 82, 83, 89, 88, 85, 84, 90, 91, 84, 86, 92, 90, 86, 87, 93, 92, 87, 88, 94, 93, 88, 89, 95, 94, 91, 90, 96, 97, 90, 92, 98, 96, 92, 93, 99, 98, 93, 94, 100, 99, 94, 95, 101, 100, 97, 96, 102, 103, 96, 98, 104, 102, 98, 99, 105, 104, 99, 100, 106, 105, 100, 101, 107, 106, 103, 102, 108, 109, 102, 104, 110, 108, 104, 105, 111, 110, 105, 106, 112, 111, 106, 107, 113, 112, 109, 108, 114, 115, 108, 110, 116, 114, 110, 111, 117, 116, 111, 112, 118, 117, 112, 113, 119, 118, 115, 114, 120, 121, 114, 116, 122, 120, 116, 117, 123, 122, 117, 118, 124, 123, 118, 119, 125, 124, 126, 127, 128, 129, 130, 126, 129, 131, 132, 130, 131, 133, 134, 132, 133, 135, 10, 134, 135, 11, 129, 128, 136, 137, 131, 129, 137, 138, 133, 131, 138, 139, 135, 133, 139, 140, 11, 135, 140, 17, 137, 136, 141, 142, 138, 137, 142, 143, 139, 138, 143, 144, 140, 139, 144, 145, 17, 140, 145, 23, 142, 141, 146, 147, 143, 142, 147, 148, 144, 143, 148, 149, 145, 144, 149, 150, 23, 145, 150, 29, 147, 146, 151, 152, 148, 147, 152, 153, 149, 148, 153, 154, 150, 149, 154, 155, 29, 150, 155, 35, 156, 157, 158, 159, 157, 160, 161, 158, 160, 162, 163, 161, 162, 164, 165, 163, 164, 0, 3, 165, 159, 158, 166, 167, 158, 161, 168, 166, 161, 163, 169, 168, 163, 165, 170, 169, 165, 3, 13, 170, 167, 166, 171, 172, 166, 168, 173, 171, 168, 169, 174, 173, 169, 170, 175, 174, 170, 13, 19, 175, 172, 171, 176, 177, 171, 173, 178, 176, 173, 174, 179, 178, 174, 175, 180, 179, 175, 19, 25, 180, 177, 176, 181, 182, 176, 178, 183, 181, 178, 179, 184, 183, 179, 180, 185, 184, 180, 25, 31, 185]
            float3 xformOp:translate:pivot = (0, 0, 2.5)
            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
        }
    }

    def Scope "Looks"
    {
        def Material "RedLambertSG"
        {
            color3f inputs:displayColor = (1, 0, 0)
            float inputs:displayOpacity
            color3f inputs:transparency
            uniform token outputs:ri:bxdf.connect = </RedCube/Looks/RedLambertSG/RedLambertSG_lambert.outputs:out>
            token outputs:surface.connect = </RedCube/Looks/RedLambertSG/RedLambertSG_lambert.outputs:out>

            def Shader "RedLambertSG_lambert"
            {
                uniform token info:id = "PxrDiffuse"
                color3f inputs:diffuseColor.connect = </RedCube/Looks/RedLambertSG.inputs:displayColor>
                color3f inputs:transmissionColor.connect = </RedCube/Looks/RedLambertSG.inputs:transparency>
                token outputs:out
            }
        }
    }
}

