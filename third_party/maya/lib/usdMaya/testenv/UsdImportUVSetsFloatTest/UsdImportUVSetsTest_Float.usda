#usda 1.0
(
    defaultPrim = "UsdImportUVSetsTest"
    upAxis = "Z"
)

def Xform "UsdImportUVSetsTest" (
    kind = "component"
)
{
    def Xform "Geom"
    {
        def Xform "CubeMeshes"
        {
            def Mesh "NoUVSetsCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "DefaultUVSetCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (0, 20, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "OneMissingFaceCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25), (-1e+30, -1e+30)] (
                    interpolation = "faceVarying"
                    unauthoredValuesIndex = 14
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 14, 14, 14, 14, 6, 7, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                double3 xformOp:translate = (0, 40, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "OneAssignedFaceCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float2[] primvars:st = [(0.375, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.75), (-1e+30, -1e+30)] (
                    interpolation = "faceVarying"
                    unauthoredValuesIndex = 4
                )
                int[] primvars:st:indices = [4, 4, 4, 4, 4, 4, 4, 4, 0, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                double3 xformOp:translate = (0, 60, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "CompressibleUVSetsCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float2[] primvars:ConstantInterpSet = [(0.25, 0.25)]
                int[] primvars:ConstantInterpSet:indices = [0]
                float2[] primvars:UniformInterpSet = [(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5)] (
                    interpolation = "uniform"
                )
                int[] primvars:UniformInterpSet:indices = [0, 1, 2, 3, 4, 5]
                float2[] primvars:VertexInterpSet = [(0, 0), (0.1, 0.1), (0.3, 0.3), (0.2, 0.2), (0.5, 0.5), (0.4, 0.4), (0.7, 0.7), (0.6, 0.6)] (
                    interpolation = "vertex"
                )
                int[] primvars:VertexInterpSet:indices = [0, 1, 3, 2, 5, 4, 7, 6]
                double3 xformOp:translate = (-20, 0, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }

            def Mesh "SharedFacesCube"
            {
                float3[] extent = [(-5, -5, 0), (5, 5, 10)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                point3f[] points = [(-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10), (-5, 5, 0), (5, 5, 0), (-5, -5, 0), (5, -5, 0)]
                float2[] primvars:AllFacesSharedSet = [(0, 0), (1, 0), (1, 1), (0, 1)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:AllFacesSharedSet:indices = [0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3]
                float2[] primvars:PairedFacesSet = [(0, 0), (0.5, 0), (0.5, 0.5), (0, 0.5), (1, 0.5), (1, 1), (0.5, 1)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:PairedFacesSet:indices = [0, 1, 2, 3, 2, 4, 5, 6, 0, 1, 2, 3, 2, 4, 5, 6, 0, 1, 2, 3, 2, 4, 5, 6]
                double3 xformOp:translate = (-20, 20, 0)
                float3 xformOp:translate:pivot = (0, 0, 5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
            }
        }
    }
}

